{"version":3,"sources":["webpack:///./src/components/Login.vue?a020","webpack:///./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./node_modules/core-js/internals/array-species-constructor.js","webpack:///./src/components/Signup.vue?6032","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./src/views/Users.vue?db6d","webpack:///./src/views/Home.vue?e275","webpack:///./node_modules/core-js/internals/native-symbol-registry.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./src/assets/empty.jpg","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/core-js/internals/array-slice-simple.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/@firebase/database/dist/index.esm2017.js","webpack:///./src/views/Vacants.vue?5e68","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/core-js/internals/symbol-define-to-primitive.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-symbols.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./src/views/Vacants.vue?2e5c","webpack:///src/views/Vacants.vue","webpack:///./src/views/Vacants.vue?0028","webpack:///./src/views/Vacants.vue","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/core-js/internals/define-well-known-symbol.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/internals/regexp-get-flags.js","webpack:///./node_modules/core-js/modules/es.symbol.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/modules/es.symbol.for.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./src/views/Home.vue?9ad3","webpack:///./src/components/Login.vue?0cf0","webpack:///src/components/Login.vue","webpack:///./src/components/Login.vue?c847","webpack:///./src/components/Login.vue","webpack:///./src/components/Signup.vue?6bb4","webpack:///src/components/Signup.vue","webpack:///./src/components/Signup.vue?c2ad","webpack:///./src/components/Signup.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?73d4","webpack:///./src/views/Home.vue","webpack:///./node_modules/core-js/modules/es.symbol.key-for.js","webpack:///./src/components/FileInput.vue?0b1e","webpack:///./node_modules/core-js/modules/es.array.includes.js","webpack:///./src/assets/login.jpg","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/modules/es.symbol.constructor.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/modules/es.json.stringify.js","webpack:///./src/views/Users.vue?12a7","webpack:///./src/components/FileInput.vue?80c8","webpack:///src/components/FileInput.vue","webpack:///./src/components/FileInput.vue?9fe6","webpack:///./src/components/FileInput.vue","webpack:///./src/helpers/sendEmail.js","webpack:///src/views/Users.vue","webpack:///./src/views/Users.vue?52be","webpack:///./src/views/Users.vue"],"names":["classof","toIndexedObject","$getOwnPropertyNames","f","arraySlice","windowNames","window","Object","getOwnPropertyNames","getWindowNames","it","error","module","exports","$","$values","values","target","stat","O","global","isArray","isConstructor","isObject","wellKnownSymbol","SPECIES","Array","originalArray","C","constructor","prototype","undefined","DOMIterables","DOMTokenListPrototype","forEach","createNonEnumerableProperty","handlePrototype","CollectionPrototype","COLLECTION_NAME","$forEach","arrayMethodIsStrict","STRICT_METHOD","callbackfn","this","arguments","length","fails","V8_VERSION","METHOD_NAME","array","foo","Boolean","uncurryThis","notARegExp","requireObjectCoercible","toString","correctIsRegExpLogic","stringIndexOf","indexOf","proto","forced","includes","searchString","PROPER_FUNCTION_NAME","PROPER","redefine","anObject","$toString","getRegExpFlags","TO_STRING","RegExpPrototype","RegExp","n$ToString","NOT_GENERIC","call","source","flags","INCORRECT_NAME","name","R","pattern","unsafe","NATIVE_SYMBOL","Symbol","keyFor","valueOf","MATCH","isRegExp","toAbsoluteIndex","lengthOfArrayLike","createProperty","max","Math","start","end","k","fin","result","n","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","version","SDK_VERSION","setSDKVersion","DOMStorageWrapper","domStorage_","prefix_","key","value","removeItem","prefixedName_","setItem","storedVal","getItem","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","id","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","message","i","arg","apply","logger","firstLog_","enableLogging$1","logger_","persistent","logLevel","VERBOSE","log","bind","set","remove","get","logWrapper","prefix","fatal","Error","warn","warnIfPageIsSecure","location","protocol","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called","wrappedFn","body","setTimeout","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","INTEGER_REGEXP_","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getImmediate","optional","then","forceRefresh","getToken","Promise","resolve","reject","listener","_a","addTokenListener","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","code","addAuthTokenListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","newHost","isCacheableHost","toURLString","query","repoInfoNeedsQueryParam","repoInfo","isCustomHost","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","counters_","amount","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","responseNum","callback","requestNum","toProcess","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","closeAfter","pN","handleResponse","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow_","forceDisallow_","createElement","close","myDisconnFrame","removeChild","shutdown_","dataStr","incrementCounter","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","open","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript","async","onload","onreadystatechange","rstate","parentNode","onerror","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","fullMess","jsonMess","frameCount","isNaN","handleNewFrameCount_","mess","resetKeepAlive","appendFrame_","remainingData","extractFrameCount_","sendString_","String","clearInterval","setInterval","send","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","transport","ALL_TRANSPORTS","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","markConnectionHealthy","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","msg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","closeConnections_","reason","ServerActions","pathString","onComplete","hash","token","stats","EventEmitter","allowedEvents_","listeners_","eventType","listeners","context","validateEventType_","eventData","getInitialEvent","splice","find","et","OnlineMonitor","super","online_","trigger","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","getInstance","on","onVisible_","onOnline_","action","onResponse","curReqNum","r","sendRequest","initConnection_","deferred","request","p","_path","q","_queryObject","outstandingGet","index","sendGet_","promise","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","tryAppCheck","authMethod","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","listen","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","scheduleConnect_","online","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onRealtimeDisconnect_","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","all","interrupt","delta","serverTimeOffset","put","map","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","replace","queries","clientName","reportStats","currentlyOnline","NamedNode","node","Index","compare","oldNode","newNode","oldWrapped","newWrapped","MIN","__EMPTY_NODE","KeyIndex","val","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","isEmpty","LLRBNode","color","RED","SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","maxKey","copy","insert","fixUp_","isRed_","moveRedLeft_","removeMin_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","rightParent","minKey","resultGenerator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","setMaxNode$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","LeafNode","value_","priorityNode_","lazyHash_","newPriorityNode","childName","childNode","newChildNode","updatePriority","updateImmediateChild","front","updateChild","exportFormat","getValue","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","setNodeFromJSON","setMaxNode","PriorityIndex","aPriority","bPriority","indexCmp","compareTo","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","nextBitIsOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","indexDefinition","existingChildren","sawIndexedValue","iter","getIterator","Wrap","newIndex","next","getNext","isDefinedOn","getCompare","indexName","newIndexSet","assign","newIndexes","indexedChildren","existingSnap","newChildren","ChildrenNode","children_","indexMap_","Default","getImmediateChild","getChild","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","childHash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","iterator","peek","getReverseIteratorFrom","maxPost","endPost","MAX_NODE","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON","json","jsonLeaf","childData","children","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","PathIndex","indexPath_","snap","aChild","extractChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","lastPushTime","lastRandChars","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","isIndexed","oldChild","hasChild","trackChildChange","withIndex","newSnap","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","updateFullNode","hasStart","startName","getIndexStartName","makePost","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","numChildren","getIndexedFilter","fullLimitUpdateChild_","hasNext","inRange","getReverseIterator","indexCompare","foundStartPost","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","getFirstChild","getLastChild","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","queryParamsGetNodeFilter","queryParams","hasLimit","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","tree","StatsListener","collection_","last_","newStats","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","subtree","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","indexedValueChanged","eventGeneratorGenerateEventsForType","registrations","filteredChanges","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","getPredecessorChildName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","getNode","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","childPath","relativePath","predicate","childExistingPathAndValue","findRootMostMatchingPathAndValue","fullPath","toSet","newTree","setTree","fold_","pathSoFar","accum","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach_","CompoundWrite","writeTree_","compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","empty","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","mergeAtPath","layeredCache","subMerge","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","from","NoCompleteChildSource_","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","isFiltered","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorRevertUserWrite","viewProcessorAckUserWrite","LISTEN_COMPLETE","viewProcessorListenComplete","getChanges","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","filtersNodes","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","isCompleteForPath","getCompleteChild","newEventSnap","viewProcessorCacheHasChild","curViewCache","foreach","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteNode","view","viewGetCompleteServerCache","cache","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistration","referenceConstructor$1","referenceConstructor","SyncPoint","views","syncPointSetReferenceConstructor","syncPointApplyOperation","syncPoint","optCompleteServerCache","concat","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointGetCompleteServerCache","syncTreeSetReferenceConstructor","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","fromObject","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyTaggedQueryOverwrite","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedQueryMerge","syncTreeCalcCompleteEventCache","includeHiddenSets","findOnPath","syncTreeGetServerValue","foreachOnPath","pathToSyncPoint","sp","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","childWritesCache","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","existing","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue","hasActualChild","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePathString","argumentName","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","addTokenChangeListener","refreshAuthToken","refreshAppCheckToken","statsReporter_","infoData_","infoSyncTree_","startListening","infoEvents","stopListening","repoUpdateInfo","serverSyncTree_","unlisten","repoServerTime","offsetNode","offset","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoRunOnDisconnectEvents","updateSnapshot","repoGetNextWriteId","repoGetValue","cached","err","repoLog","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","resolvedOnDisconnectTree","resolved","repoInterrupt","toUpperCase","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","transaction","repoSendTransactionQueue","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","currentNode","currentInputSnapshot","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","applyLocally","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","charAt","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","QueryImpl","_repo","_orderByCalled","ReferenceImpl","sameRepo","samePath","sameQueryIdentifier","parentPath","ref","DataSnapshot","_node","_index","childRef","exportVal","db","_checkNotDeleted","_root","wrapCallback","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","Database","repoManagerDeleteRepo","appName","appRepos","_repoInternal","_instanceStarted","_rootInternal","apiName","getDatabase","identifier","registerDatabase","variant","container","instanceIdentifier","getProvider","setMultipleInstances","simpleListen","echo","onEcho","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","getBuiltIn","SymbolPrototype","TO_PRIMITIVE","hint","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","string","trim","TypeError","getOwnPropertySymbolsModule","toObject","FORCED","$getOwnPropertySymbols","arraySpeciesConstructor","render","_vm","_h","$createElement","_c","_self","staticClass","_l","item","setSelectedId","_v","_s","title","attrs","deleteData","selectedData","caption","responsibilities","expectations","benefits","directives","rawName","modifiers","scopedSlots","_u","model","newVacantion","$$v","$set","expression","ok","cancel","saveData","$event","staticRenderFns","mounted","$store","getters","getEmail","$router","loadData","computed","list","methods","selectedId","snapshot","exists","clearData","component","DESCRIPTORS","objectKeys","$propertyIsEnumerable","propertyIsEnumerable","TO_ENTRIES","entries","isCallable","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","hasOwn","wrappedWellKnownSymbolModule","NAME","$find","addToUnscopables","FIND","SKIPS_HOLES","toPropertyKey","definePropertyModule","createPropertyDescriptor","propertyKey","isPrototypeOf","regExpFlags","argument","method","isForced","inheritIfRequired","isSymbol","toPrimitive","thisNumberValue","NUMBER","NativeNumber","NumberPrototype","charCodeAt","toNumeric","primValue","toNumber","first","third","radix","maxCode","digits","NaN","NumberWrapper","regexp","error1","error2","that","hasIndices","ignoreCase","multiline","dotAll","unicode","sticky","FUNCTION_NAME_EXISTS","EXISTS","FunctionPrototype","Function","functionToString","nameRE","regExpExec","exec","shared","NATIVE_SYMBOL_REGISTRY","StringToSymbolRegistry","SymbolToStringRegistry","symbol","nativeKeys","FAILS_ON_PRIMITIVES","IndexedObject","arraySpeciesCreate","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","specificCreate","boundFunction","create","some","filterReject","_m","toggleShowLogin","this$1","email","login","$emit","isError","props","formData","password2","signup","showAlert","components","Login","Signup","isShowLogin","tryToString","$includes","el","$map","IS_PURE","nativeObjectCreate","getOwnPropertyNamesModule","getOwnPropertyNamesExternal","getOwnPropertyDescriptorModule","definePropertiesModule","propertyIsEnumerableModule","sharedKey","hiddenKeys","uid","defineWellKnownSymbol","defineSymbolToPrimitive","setToStringTag","InternalStateModule","HIDDEN","SYMBOL","PROTOTYPE","setInternalState","getInternalState","getterFor","ObjectPrototype","$Symbol","QObject","nativeGetOwnPropertyDescriptor","nativeDefineProperty","nativeGetOwnPropertyNames","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","WellKnownSymbolsStore","USE_SETTER","findChild","setSymbolDescriptor","P","Attributes","ObjectPrototypeDescriptor","wrap","description","$defineProperty","$defineProperties","Properties","properties","$create","V","$getOwnPropertyDescriptor","descriptor","names","IS_OBJECT_PROTOTYPE","setter","sham","useSetter","useSimple","$stringify","numberToString","tester","hi","WRONG_SYMBOLS_CONVERSION","ILL_FORMED_UNICODE","stringifyWithSymbolsFix","replacer","$replacer","fixIllFormed","prev","space","searchUser","staticStyle","jobList","filterJob","avatar","statusOptions","setStatus","age","city","male","phone","education","hrEmail","vacation","about","saveAvatar","newUser","optionsMale","mailText","sendMailTo","fileKey","handlerInputFile","reader","file","sendEmail","text","baseUrl","emailTo","sender","text2","fetch","sendUpdatedStatus","1","2","3","4","5","6","7","8","9","FileInput","filteredList","filterName"],"mappings":"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","file":"js/about.529c9fe1.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=style&index=0&id=0678ed4f&scoped=true&lang=css&\"","/* eslint-disable es-x/no-object-getownpropertynames -- safe */\nvar classof = require('../internals/classof-raw');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar arraySlice = require('../internals/array-slice-simple');\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return arraySlice(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && classof(it) == 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","var global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signup.vue?vue&type=style&index=0&id=4073be30&scoped=true&lang=css&\"","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es-x/no-array-prototype-foreach -- safe\n} : [].forEach;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","'use strict';\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar n$ToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var pattern = $toString(R.source);\n    var flags = $toString(getRegExpFlags(R));\n    return '/' + pattern + '/' + flags;\n  }, { unsafe: true });\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=style&index=0&id=3c5b6a14&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=409c4974&scoped=true&lang=css&\"","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\n/* eslint-disable es-x/no-symbol -- safe */\nmodule.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;\n","var uncurryThis = require('../internals/function-uncurry-this');\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = uncurryThis(1.0.valueOf);\n","module.exports = __webpack_public_path__ + \"img/empty.bffdac8c.jpg\";","var global = require('../internals/global');\n\nmodule.exports = global;\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var global = require('../internals/global');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar Array = global.Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import { getApp, _getProvider, SDK_VERSION as SDK_VERSION$1, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nconst name = \"@firebase/database\";\nconst version = \"0.12.8\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nlet SDK_VERSION = '';\r\n/**\r\n * SDK_VERSION should be set before any database instance is created\r\n * @internal\r\n */\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nclass DOMStorageWrapper {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    constructor(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    set(key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    }\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    get(key) {\r\n        const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    }\r\n    remove(key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    }\r\n    prefixedName_(name) {\r\n        return this.prefix_ + name;\r\n    }\r\n    toString() {\r\n        return this.domStorage_.toString();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    set(key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    }\r\n    get(key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    }\r\n    remove(key) {\r\n        delete this.cache_[key];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nconst createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            const domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nconst PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nconst SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nconst LUIDGenerator = (function () {\r\n    let id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nconst sha1 = function (str) {\r\n    const utf8Bytes = stringToByteArray(str);\r\n    const sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    const sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nconst buildLogMessage_ = function (...varArgs) {\r\n    let message = '';\r\n    for (let i = 0; i < varArgs.length; i++) {\r\n        const arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nlet logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nlet firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nconst enableLogging$1 = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nconst log = function (...varArgs) {\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging$1(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        const message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nconst logWrapper = function (prefix) {\r\n    return function (...varArgs) {\r\n        log(prefix, ...varArgs);\r\n    };\r\n};\r\nconst error = function (...varArgs) {\r\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\r\n    logClient.error(message);\r\n};\r\nconst fatal = function (...varArgs) {\r\n    const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nconst warn = function (...varArgs) {\r\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nconst warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nconst isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nconst executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        let called = false;\r\n        const wrappedFn = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called) {\r\n                called = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', () => {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nconst MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nconst MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nconst nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nconst stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nconst requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nconst ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    const keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (const k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    let key = '{';\r\n    for (let i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nconst splitStringBySize = function (str, segsize) {\r\n    const len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    const dataSegs = [];\r\n    for (let c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nconst doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    const ebits = 11, fbits = 52;\r\n    const bias = (1 << (ebits - 1)) - 1;\r\n    let s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    const bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    const str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    let hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nconst isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nconst isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    let reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    const error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nconst INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nconst tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        const intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nconst exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(() => {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            const stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nconst beingCrawled = function () {\r\n    const userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nconst setTimeoutNonBlocking = function (fn, time) {\r\n    const timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nclass AppCheckTokenProvider {\r\n    constructor(appName_, appCheckProvider) {\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(appCheck => (this.appCheck = appCheck));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.appCheck) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.appCheck) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(appCheck => appCheck.addTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        warn(`Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nclass FirebaseAuthTokenProvider {\r\n    constructor(appName_, firebaseOptions_, authProvider_) {\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(auth => (this.auth_ = auth));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.auth_) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.auth_) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(error => {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(auth => auth.addAuthTokenListener(listener));\r\n        }\r\n    }\r\n    removeTokenChangeListener(listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(auth => auth.removeAuthTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        let errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    }\r\n}\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nclass EmulatorTokenProvider {\r\n    constructor(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    getToken(forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    }\r\n    removeTokenChangeListener(listener) { }\r\n    notifyForInvalidToken() { }\r\n}\r\n/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\nEmulatorTokenProvider.OWNER = 'owner';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PROTOCOL_VERSION = '5';\r\nconst VERSION_PARAM = 'v';\r\nconst TRANSPORT_SESSION_PARAM = 's';\r\nconst REFERER_PARAM = 'r';\r\nconst FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nconst FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nconst LAST_SESSION_PARAM = 'ls';\r\nconst APPLICATION_ID_PARAM = 'p';\r\nconst APP_CHECK_TOKEN_PARAM = 'ac';\r\nconst WEBSOCKET = 'websocket';\r\nconst LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nclass RepoInfo {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    constructor(host, secure, namespace, webSocketOnly, nodeAdmin = false, persistenceKey = '', includeNamespaceInQueryParams = false) {\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    isCacheableHost() {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    }\r\n    isCustomHost() {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    }\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this._host, this.internalHost);\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        let str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    }\r\n    toURLString() {\r\n        const protocol = this.secure ? 'https://' : 'http://';\r\n        const query = this.includeNamespaceInQueryParams\r\n            ? `?ns=${this.namespace}`\r\n            : '';\r\n        return `${protocol}${this.host}/${query}`;\r\n    }\r\n}\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    let connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    const pairs = [];\r\n    each(params, (key, value) => {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nclass StatsCollection {\r\n    constructor() {\r\n        this.counters_ = {};\r\n    }\r\n    incrementCounter(name, amount = 1) {\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    }\r\n    get() {\r\n        return deepCopy(this.counters_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst collections = {};\r\nconst reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    const hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    const hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nclass PacketReceiver {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    constructor(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    closeAfter(responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    }\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    handleResponse(requestNum, data) {\r\n        this.pendingResponses[requestNum] = data;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            const toProcess = this.pendingResponses[this.currentResponseNum];\r\n            delete this.pendingResponses[this.currentResponseNum];\r\n            for (let i = 0; i < toProcess.length; ++i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(() => {\r\n                        this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            }\r\n            if (this.currentResponseNum === this.closeAfterResponse) {\r\n                if (this.onClose) {\r\n                    this.onClose();\r\n                    this.onClose = null;\r\n                }\r\n                break;\r\n            }\r\n            this.currentResponseNum++;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nconst FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nconst FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nconst FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nconst FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nconst FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nconst FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nconst FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nconst FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nconst FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nconst FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nconst FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nconst FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nconst MAX_URL_DATA_SIZE = 1870;\r\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nconst LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nclass BrowserPollConnection {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = (params) => {\r\n            // Always add the token if we have one.\r\n            if (this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(() => {\r\n            this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            this.onClosed_();\r\n            this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(() => {\r\n            if (this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            this.scriptTagHolder = new FirebaseIFrameScriptHolder((...args) => {\r\n                const [command, arg1, arg2, arg3, arg4] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                if (!this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (this.connectTimeoutTimer_) {\r\n                    clearTimeout(this.connectTimeoutTimer_);\r\n                    this.connectTimeoutTimer_ = null;\r\n                }\r\n                this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    this.id = arg1;\r\n                    this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        this.myPacketOrderer.closeAfter(arg1, () => {\r\n                            this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, (...args) => {\r\n                const [pN, data] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                this.myPacketOrderer.handleResponse(pN, data);\r\n            }, () => {\r\n                this.onClosed_();\r\n            }, this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\r\n                    this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\r\n            }\r\n            if (this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\r\n            }\r\n            if (this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = this.applicationId;\r\n            }\r\n            if (this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            const connectURL = this.urlFn(urlParams);\r\n            this.log_('Connecting via long-poll to ' + connectURL);\r\n            this.scriptTagHolder.addTag(connectURL, () => {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    start() {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    }\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    static forceAllow() {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    }\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    static forceDisallow() {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    }\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    static isAvailable() {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    }\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    markConnectionHealthy() { }\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    }\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    send(data) {\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        const base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    }\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    addDisconnectPingFrame(id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        const urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    }\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    incrementIncomingBytes_(args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        const bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    }\r\n}\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nclass FirebaseIFrameScriptHolder {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    constructor(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\r\n                onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            let script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                const currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            const iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    static createIFrame_() {\r\n        const iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                const a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                const domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    }\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    close() {\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(() => {\r\n                if (this.myIFrame !== null) {\r\n                    document.body.removeChild(this.myIFrame);\r\n                    this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        const onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    startLongPoll(id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    }\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    newRequest_() {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            let theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            let curDataString = '';\r\n            let i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                const nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    const theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    enqueueSegment(segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    }\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    addLongPollTag_(url, serial) {\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        const doNewRequest = () => {\r\n            this.outstandingRequests.delete(serial);\r\n            this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        const keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        const readyStateCB = () => {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    }\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    addTag(url, loadCB) {\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    const newScript = this.myIFrame.doc.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n                    newScript.async = true;\r\n                    newScript.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript.onload = newScript.onreadystatechange =\r\n                        function () {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            const rstate = newScript.readyState;\r\n                            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                newScript.onload = newScript.onreadystatechange = null;\r\n                                if (newScript.parentNode) {\r\n                                    newScript.parentNode.removeChild(newScript);\r\n                                }\r\n                                loadCB();\r\n                            }\r\n                        };\r\n                    newScript.onerror = () => {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        this.sendNewPolls = false;\r\n                        this.close();\r\n                    };\r\n                    this.myIFrame.doc.body.appendChild(newScript);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nlet WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nclass WebSocketConnection {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    static connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken) {\r\n        const urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                const device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                const options = {\r\n                    headers: {\r\n                        'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = `Bearer ${this.authToken}`;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                const env = process['env'];\r\n                const proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                const options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || '',\r\n                        'X-Firebase-AppCheck': this.appCheckToken || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = () => {\r\n            this.log_('Websocket connected.');\r\n            this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = () => {\r\n            this.log_('Websocket connection was disconnected.');\r\n            this.mySock = null;\r\n            this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = m => {\r\n            this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = e => {\r\n            this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n        };\r\n    }\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    start() { }\r\n    static forceDisallow() {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    }\r\n    static isAvailable() {\r\n        let isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    }\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    static previouslyFailed() {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    }\r\n    markConnectionHealthy() {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    }\r\n    appendFrame_(data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            const fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            const jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    }\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    handleNewFrameCount_(frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    }\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    extractFrameCount_(data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            const frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    }\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    handleIncomingFrame(mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        const data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            const remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    send(data) {\r\n        this.resetKeepAlive();\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    }\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    }\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    resetKeepAlive() {\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(() => {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (this.mySock) {\r\n                this.sendString_('0');\r\n            }\r\n            this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    }\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    sendString_(str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Number of response before we consider the connection \"healthy.\"\r\n */\r\nWebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n/**\r\n * Time to wait for the connection te become healthy before giving up.\r\n */\r\nWebSocketConnection.healthyTimeout = 30000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nclass TransportManager {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    constructor(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    static get ALL_TRANSPORTS() {\r\n        return [BrowserPollConnection, WebSocketConnection];\r\n    }\r\n    initTransports_(repoInfo) {\r\n        const isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        let isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            const transports = (this.transports_ = []);\r\n            for (const transport of TransportManager.ALL_TRANSPORTS) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports.push(transport);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    initialTransport() {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    upgradeTransport() {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nconst UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nconst MESSAGE_TYPE = 't';\r\nconst MESSAGE_DATA = 'd';\r\nconst CONTROL_SHUTDOWN = 's';\r\nconst CONTROL_RESET = 'r';\r\nconst CONTROL_ERROR = 'e';\r\nconst CONTROL_PONG = 'o';\r\nconst SWITCH_ACK = 'a';\r\nconst END_TRANSMISSION = 'n';\r\nconst PING = 'p';\r\nconst SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nclass Connection {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    constructor(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    start_() {\r\n        const conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessageReceived = this.connReceiver_(this.conn_);\r\n        const onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(() => {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        const healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(() => {\r\n                this.healthyTimeout_ = null;\r\n                if (!this.isHealthy_) {\r\n                    if (this.conn_ &&\r\n                        this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        this.isHealthy_ = true;\r\n                        this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (this.conn_ &&\r\n                        this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        this.log_('Closing unhealthy connection after timeout.');\r\n                        this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    }\r\n    nextTransportId_() {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    }\r\n    disconnReceiver_(conn) {\r\n        return everConnected => {\r\n            if (conn === this.conn_) {\r\n                this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === this.secondaryConn_) {\r\n                this.log_('Secondary connection lost.');\r\n                this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                this.log_('closing an old connection');\r\n            }\r\n        };\r\n    }\r\n    connReceiver_(conn) {\r\n        return (message) => {\r\n            if (this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === this.rx_) {\r\n                    this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === this.secondaryConn_) {\r\n                    this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    sendRequest(dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        const msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    }\r\n    tryCleanupConnection() {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    }\r\n    onSecondaryControl_(controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            const cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    }\r\n    onSecondaryMessageReceived_(parsedData) {\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    }\r\n    upgradeIfSecondaryHealthy_() {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    proceedWithUpgrade_() {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    }\r\n    onPrimaryMessageReceived_(parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    }\r\n    onPrimaryResponse_() {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    }\r\n    onControl_(controlData) {\r\n        const cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            const payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (let i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    onHandshake_(handshake) {\r\n        const timestamp = handshake.ts;\r\n        const version = handshake.v;\r\n        const host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    }\r\n    tryStartUpgrade_() {\r\n        const conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    }\r\n    startUpgrade_(conn) {\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessage = this.connReceiver_(this.secondaryConn_);\r\n        const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(() => {\r\n            if (this.secondaryConn_) {\r\n                this.log_('Timed out trying to upgrade.');\r\n                this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    }\r\n    onReset_(host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    }\r\n    onConnectionEstablished_(conn, timestamp) {\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(() => {\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    }\r\n    sendPingOnPrimaryIfNecessary_() {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    onSecondaryConnectionLost_() {\r\n        const conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    }\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    onConnectionLost_(everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    }\r\n    onConnectionShutdown_(reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    }\r\n    sendData_(data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    }\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    close() {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    closeConnections_() {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nclass ServerActions {\r\n    put(pathString, data, onComplete, hash) { }\r\n    merge(pathString, data, onComplete, hash) { }\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    refreshAuthToken(token) { }\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    refreshAppCheckToken(token) { }\r\n    onDisconnectPut(pathString, data, onComplete) { }\r\n    onDisconnectMerge(pathString, data, onComplete) { }\r\n    onDisconnectCancel(pathString, onComplete) { }\r\n    reportStats(stats) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nclass EventEmitter {\r\n    constructor(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    trigger(eventType, ...varArgs) {\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            const listeners = [...this.listeners_[eventType]];\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    }\r\n    on(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback, context });\r\n        const eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    }\r\n    off(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        const listeners = this.listeners_[eventType] || [];\r\n        for (let i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    validateEventType_(eventType) {\r\n        assert(this.allowedEvents_.find(et => {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nclass OnlineMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['online']);\r\n        this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', () => {\r\n                if (!this.online_) {\r\n                    this.online_ = true;\r\n                    this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', () => {\r\n                if (this.online_) {\r\n                    this.online_ = false;\r\n                    this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new OnlineMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    }\r\n    currentlyOnline() {\r\n        return this.online_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nconst MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nconst MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nclass Path {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    constructor(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            let copyTo = 0;\r\n            for (let i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    toString() {\r\n        let pathString = '';\r\n        for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    }\r\n}\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    let pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    let pathString = '';\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin = 0) {\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        const childPieces = childPathObj.split('/');\r\n        for (let i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    const outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    const leftKeys = pathSlice(left, 0);\r\n    const rightKeys = pathSlice(right, 0);\r\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        const cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (let i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    let i = path.pieceNum_;\r\n    let j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nclass ValidationPath {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    constructor(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (let i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n}\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    const last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass VisibilityMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['visible']);\r\n        let hidden;\r\n        let visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, () => {\r\n                const visible = !document[hidden];\r\n                if (visible !== this.visible_) {\r\n                    this.visible_ = visible;\r\n                    this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new VisibilityMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECONNECT_MIN_DELAY = 1000;\r\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\r\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nconst INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nclass PersistentConnection extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.onConnectStatus_ = onConnectStatus_;\r\n        this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        this.log_ = logWrapper('p:' + this.id + ':');\r\n        this.interruptReasons_ = {};\r\n        this.listens = new Map();\r\n        this.outstandingPuts_ = [];\r\n        this.outstandingGets_ = [];\r\n        this.outstandingPutCount_ = 0;\r\n        this.outstandingGetCount_ = 0;\r\n        this.onDisconnectRequestQueue_ = [];\r\n        this.connected_ = false;\r\n        this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        this.securityDebugCallback_ = null;\r\n        this.lastSessionId = null;\r\n        this.establishConnectionTimer_ = null;\r\n        this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        this.requestCBHash_ = {};\r\n        this.requestNumber_ = 0;\r\n        this.realtime_ = null;\r\n        this.authToken_ = null;\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = false;\r\n        this.invalidAuthTokenCount_ = 0;\r\n        this.invalidAppCheckTokenCount_ = 0;\r\n        this.firstConnection_ = true;\r\n        this.lastConnectionAttemptTime_ = null;\r\n        this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', this.onOnline_, this);\r\n        }\r\n    }\r\n    sendRequest(action, body, onResponse) {\r\n        const curReqNum = ++this.requestNumber_;\r\n        const msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    }\r\n    get(query) {\r\n        this.initConnection_();\r\n        const deferred = new Deferred();\r\n        const request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        const outstandingGet = {\r\n            action: 'g',\r\n            request,\r\n            onComplete: (message) => {\r\n                const payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        const index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(() => {\r\n                const get = this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete this.outstandingGets_[index];\r\n                this.outstandingGetCount_--;\r\n                if (this.outstandingGetCount_ === 0) {\r\n                    this.outstandingGets_ = [];\r\n                }\r\n                this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    }\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        const queryId = query._queryIdentifier;\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        const listenSpec = {\r\n            onComplete,\r\n            hashFn: currentHashFn,\r\n            query,\r\n            tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    }\r\n    sendGet_(index) {\r\n        const get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, (message) => {\r\n            delete this.outstandingGets_[index];\r\n            this.outstandingGetCount_--;\r\n            if (this.outstandingGetCount_ === 0) {\r\n                this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    }\r\n    sendListen_(listenSpec) {\r\n        const query = listenSpec.query;\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, (message) => {\r\n            const payload = message[ /*data*/'d'];\r\n            const status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            const currentListenSpec = this.listens.get(pathString) &&\r\n                this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static warnOnListenWarnings_(payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                const indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                const indexPath = query._path.toString();\r\n                warn(`Using an unspecified index. Your data will be downloaded and ` +\r\n                    `filtered on the client. Consider adding ${indexSpec} at ` +\r\n                    `${indexPath} to your security rules for better performance.`);\r\n            }\r\n        }\r\n    }\r\n    refreshAuthToken(token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, () => { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    }\r\n    reduceReconnectDelayIfAdminCredential_(credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        const isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    }\r\n    refreshAppCheckToken(token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, () => { });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    tryAuth() {\r\n        if (this.connected_ && this.authToken_) {\r\n            const token = this.authToken_;\r\n            const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\r\n            const requestData = { cred: token };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (this.authToken_ === token) {\r\n                    if (status === 'ok') {\r\n                        this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    tryAppCheck() {\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    unlisten(query, tag) {\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    }\r\n    sendUnlisten_(pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    }\r\n    onDisconnectPut(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'o',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectMerge(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'om',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectCancel(pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    sendOnDisconnect_(action, pathString, data, onComplete) {\r\n        const request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, (response) => {\r\n            if (onComplete) {\r\n                setTimeout(() => {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    }\r\n    put(pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    }\r\n    merge(pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    }\r\n    putInternal(action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        const request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action,\r\n            request,\r\n            onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        const index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    }\r\n    sendPut_(index) {\r\n        const action = this.outstandingPuts_[index].action;\r\n        const request = this.outstandingPuts_[index].request;\r\n        const onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, (message) => {\r\n            this.log_(action + ' response', message);\r\n            delete this.outstandingPuts_[index];\r\n            this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (this.outstandingPutCount_ === 0) {\r\n                this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    }\r\n    reportStats(stats) {\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            const request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, result => {\r\n                const status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    const errorReason = result[ /* data */'d'];\r\n                    this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            const reqNum = message['r'];\r\n            const onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    }\r\n    onDataPush_(action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    }\r\n    onReady_(timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    }\r\n    scheduleConnect_(timeout) {\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(() => {\r\n            this.establishConnectionTimer_ = null;\r\n            this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    }\r\n    initConnection_() {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    }\r\n    onVisible_(visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    }\r\n    onOnline_(online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    }\r\n    onRealtimeDisconnect_() {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                const timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            const timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            let reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    }\r\n    async establishConnection_() {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            const onDataMessage = this.onDataMessage_.bind(this);\r\n            const onReady = this.onReady_.bind(this);\r\n            const onDisconnect = this.onRealtimeDisconnect_.bind(this);\r\n            const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            const lastSessionId = this.lastSessionId;\r\n            let canceled = false;\r\n            let connection = null;\r\n            const closeFn = function () {\r\n                if (connection) {\r\n                    connection.close();\r\n                }\r\n                else {\r\n                    canceled = true;\r\n                    onDisconnect();\r\n                }\r\n            };\r\n            const sendRequestFn = function (msg) {\r\n                assert(connection, \"sendRequest call when we're not connected not allowed.\");\r\n                connection.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            const forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            try {\r\n                // First fetch auth and app check token, and establish connection after\r\n                // fetching the token was successful\r\n                const [authToken, appCheckToken] = await Promise.all([\r\n                    this.authTokenProvider_.getToken(forceRefresh),\r\n                    this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                ]);\r\n                if (!canceled) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    this.authToken_ = authToken && authToken.accessToken;\r\n                    this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                    connection = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect, \r\n                    /* onKill= */ reason => {\r\n                        warn(reason + ' (' + this.repoInfo_.toString() + ')');\r\n                        this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.log_('Failed to get token: ' + error);\r\n                if (!canceled) {\r\n                    if (this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    interrupt(reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    }\r\n    resume(reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    }\r\n    handleTimestamp_(timestamp) {\r\n        const delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    }\r\n    cancelSentTransactions_() {\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            const put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    }\r\n    onListenRevoked_(pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        let queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\r\n        }\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    }\r\n    removeListen_(pathString, queryId) {\r\n        const normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        let listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            const map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    }\r\n    onAuthRevoked_(statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onAppCheckRevoked_(statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onSecurityDebugPacket_(body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    }\r\n    restoreState_() {\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        for (const queries of this.listens.values()) {\r\n            for (const listenSpec of queries.values()) {\r\n                this.sendListen_(listenSpec);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            const request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (let i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    sendConnectStats_() {\r\n        const stats = {};\r\n        let clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    }\r\n    shouldReconnect_() {\r\n        const online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    }\r\n}\r\nPersistentConnection.nextPersistentConnectionId_ = 0;\r\n/**\r\n * Counter for number of connections created. Mainly used for tagging in the logs\r\n */\r\nPersistentConnection.nextConnectionId_ = 0;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass NamedNode {\r\n    constructor(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    static Wrap(name, node) {\r\n        return new NamedNode(name, node);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Index {\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    getCompare() {\r\n        return this.compare.bind(this);\r\n    }\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    indexedValueChanged(oldNode, newNode) {\r\n        const oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        const newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    }\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __EMPTY_NODE;\r\nclass KeyIndex extends Index {\r\n    static get __EMPTY_NODE() {\r\n        return __EMPTY_NODE;\r\n    }\r\n    static set __EMPTY_NODE(val) {\r\n        __EMPTY_NODE = val;\r\n    }\r\n    compare(a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    }\r\n    isDefinedOn(node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    }\r\n    makePost(indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.key';\r\n    }\r\n}\r\nconst KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nclass SortedMapIterator {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    constructor(node, startKey, comparator, isReverse_, resultGenerator_ = null) {\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        let cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getNext() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        let node = this.nodeStack_.pop();\r\n        let result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    hasNext() {\r\n        return this.nodeStack_.length > 0;\r\n    }\r\n    peek() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        const node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nclass LLRBNode {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    constructor(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return this.left.count() + 1 + this.right.count();\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    }\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    min_() {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    minKey() {\r\n        return this.min_().key;\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    maxKey() {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    }\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        let n = this;\r\n        const cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    removeMin_() {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        let n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        let n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    isRed_() {\r\n        return this.color;\r\n    }\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    fixUp_() {\r\n        let n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    moveRedLeft_() {\r\n        let n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    moveRedRight_() {\r\n        let n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    rotateLeft_() {\r\n        const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    rotateRight_() {\r\n        const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    }\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    colorFlip_() {\r\n        const left = this.left.copy(null, null, !this.left.color, null, null);\r\n        const right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    }\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    checkMaxDepth_() {\r\n        const blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    }\r\n    check_() {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        const blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    }\r\n}\r\nLLRBNode.RED = true;\r\nLLRBNode.BLACK = false;\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nclass LLRBEmptyNode {\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        return this;\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    inorderTraversal(action) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return false;\r\n    }\r\n    minKey() {\r\n        return null;\r\n    }\r\n    maxKey() {\r\n        return null;\r\n    }\r\n    check_() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    isRed_() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nclass SortedMap {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    constructor(comparator_, root_ = SortedMap.EMPTY_NODE) {\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    insert(key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    remove(key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    get(key) {\r\n        let cmp;\r\n        let node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    getPredecessorKey(key) {\r\n        let cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    }\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    isEmpty() {\r\n        return this.root_.isEmpty();\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    count() {\r\n        return this.root_.count();\r\n    }\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    minKey() {\r\n        return this.root_.minKey();\r\n    }\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    maxKey() {\r\n        return this.root_.maxKey();\r\n    }\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return this.root_.inorderTraversal(action);\r\n    }\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return this.root_.reverseTraversal(action);\r\n    }\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    getIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    }\r\n    getIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    }\r\n    getReverseIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    }\r\n    getReverseIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    }\r\n}\r\n/**\r\n * Always use the same empty node, to reduce memory.\r\n */\r\nSortedMap.EMPTY_NODE = new LLRBEmptyNode();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nconst priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nconst validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        const val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nclass LeafNode {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    constructor(value_, priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    static set __childrenNodeConstructor(val) {\r\n        __childrenNodeConstructor = val;\r\n    }\r\n    static get __childrenNodeConstructor() {\r\n        return __childrenNodeConstructor;\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return true;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    hasChild() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode) {\r\n        return null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return 0;\r\n    }\r\n    /** @inheritDoc */\r\n    forEachChild(index, action) {\r\n        return false;\r\n    }\r\n    val(exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            const type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    getValue() {\r\n        return this.value_;\r\n    }\r\n    compareTo(other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    }\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    compareToLeafNode_(otherLeaf) {\r\n        const otherLeafType = typeof otherLeaf.value_;\r\n        const thisLeafType = typeof this.value_;\r\n        const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    }\r\n    withIndex() {\r\n        return this;\r\n    }\r\n    isIndexed() {\r\n        return true;\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            const otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n/**\r\n * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n * the same type, the comparison falls back to their value\r\n */\r\nLeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet nodeFromJSON$1;\r\nlet MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nclass PriorityIndex extends Index {\r\n    compare(a, b) {\r\n        const aPriority = a.node.getPriority();\r\n        const bPriority = b.node.getPriority();\r\n        const indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getPriority().isEmpty();\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    }\r\n    makePost(indexValue, name) {\r\n        const priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.priority';\r\n    }\r\n}\r\nconst PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst LOG_2 = Math.log(2);\r\nclass Base12Num {\r\n    constructor(length) {\r\n        const logBase2 = (num) => \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parseInt((Math.log(num) / LOG_2), 10);\r\n        const bitMask = (bits) => parseInt(Array(bits + 1).join('1'), 2);\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        const mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    nextBitIsOne() {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        const result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nconst buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    const buildBalancedTree = function (low, high) {\r\n        const length = high - low;\r\n        let namedNode;\r\n        let key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const middle = parseInt((length / 2), 10) + low;\r\n            const left = buildBalancedTree(low, middle);\r\n            const right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    const buildFrom12Array = function (base12) {\r\n        let node = null;\r\n        let root = null;\r\n        let index = childList.length;\r\n        const buildPennant = function (chunkSize, color) {\r\n            const low = index - chunkSize;\r\n            const high = index;\r\n            index -= chunkSize;\r\n            const childTree = buildBalancedTree(low + 1, high);\r\n            const namedNode = childList[low];\r\n            const key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        const attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (let i = 0; i < base12.count; ++i) {\r\n            const isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            const chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    const base12 = new Base12Num(childList.length);\r\n    const root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet _defaultIndexMap;\r\nconst fallbackObject = {};\r\nclass IndexMap {\r\n    constructor(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\r\n    static get Default() {\r\n        assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n        _defaultIndexMap =\r\n            _defaultIndexMap ||\r\n                new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n        return _defaultIndexMap;\r\n    }\r\n    get(indexKey) {\r\n        const sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    }\r\n    hasIndex(indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    }\r\n    addIndex(indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        const childList = [];\r\n        let sawIndexedValue = false;\r\n        const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        let next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        let newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        const indexName = indexDefinition.toString();\r\n        const newIndexSet = Object.assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        const newIndexes = Object.assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    }\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    addToIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren, indexName) => {\r\n            const index = safeGet(this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    const childList = [];\r\n                    const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    let next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                let newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    removeFromIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren) => {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nlet EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nclass ChildrenNode {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    constructor(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    static get EMPTY_NODE() {\r\n        return (EMPTY_NODE ||\r\n            (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            const child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    }\r\n    /** @inheritDoc */\r\n    hasChild(childName) {\r\n        return this.children_.get(childName) !== null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            const namedNode = new NamedNode(childName, newChildNode);\r\n            let newChildren, newIndexMap;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            const newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            const newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return this.children_.isEmpty();\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return this.children_.count();\r\n    }\r\n    /** @inheritDoc */\r\n    val(exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        const obj = {};\r\n        let numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            const array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                const childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode, index) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            const predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    }\r\n    getFirstChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    }\r\n    getFirstChild(indexDefinition) {\r\n        const minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    getLastChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    }\r\n    getLastChild(indexDefinition) {\r\n        const maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    forEachChild(index, action) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(wrappedNode => {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    }\r\n    getIterator(indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    }\r\n    getIteratorFrom(startPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, key => key);\r\n        }\r\n        else {\r\n            const iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    getReverseIterator(indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    }\r\n    getReverseIteratorFrom(endPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, key => {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            const iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    compareTo(other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    }\r\n    withIndex(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    }\r\n    isIndexed(index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            const otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                const thisIter = this.getIterator(PRIORITY_INDEX);\r\n                const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                let thisCurrent = thisIter.getNext();\r\n                let otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    resolveIndex_(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    }\r\n}\r\nChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\nclass MaxNode extends ChildrenNode {\r\n    constructor() {\r\n        super(new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default);\r\n    }\r\n    compareTo(other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    equals(other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    }\r\n    getPriority() {\r\n        return this;\r\n    }\r\n    getImmediateChild(childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nconst MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority = null) {\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        const jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        const children = [];\r\n        let childrenHavePriority = false;\r\n        const hinzeJsonObj = json;\r\n        each(hinzeJsonObj, (key, child) => {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                const childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority =\r\n                        childrenHavePriority || !childNode.getPriority().isEmpty();\r\n                    children.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        const childSet = buildChildSet(children, NAME_ONLY_COMPARATOR, namedNode => namedNode.name, NAME_COMPARATOR);\r\n        if (childrenHavePriority) {\r\n            const sortedChildSet = buildChildSet(children, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        let node = ChildrenNode.EMPTY_NODE;\r\n        each(json, (key, childData) => {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    const childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node = node.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PathIndex extends Index {\r\n    constructor(indexPath_) {\r\n        super();\r\n        this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n    }\r\n    extractChild(snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    }\r\n    compare(a, b) {\r\n        const aChild = this.extractChild(a.node);\r\n        const bChild = this.extractChild(b.node);\r\n        const indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    }\r\n    maxPost() {\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    }\r\n    toString() {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ValueIndex extends Index {\r\n    compare(a, b) {\r\n        const indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return true;\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.value';\r\n    }\r\n}\r\nconst VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nconst PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nconst MIN_PUSH_CHAR = '-';\r\nconst MAX_PUSH_CHAR = 'z';\r\nconst MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nconst nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    let lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    const lastRandChars = [];\r\n    return function (now) {\r\n        const duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        let i;\r\n        const timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        let id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nconst successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    const keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    const next = new Array(key.length);\r\n    for (let i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    let i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    const source = next[i];\r\n    const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nconst predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    const keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    const next = new Array(key.length);\r\n    for (let i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode, childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode, childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode,\r\n        childName,\r\n        oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode, childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nclass IndexedFilter {\r\n    constructor(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        const oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        const oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    }\r\n    filtersNodes() {\r\n        return false;\r\n    }\r\n    getIndexedFilter() {\r\n        return this;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nclass RangedFilter {\r\n    constructor(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    getStartPost() {\r\n        return this.startPost_;\r\n    }\r\n    getEndPost() {\r\n        return this.endPost_;\r\n    }\r\n    matches(node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        let filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        const self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.indexedFilter_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    static getStartPost_(params) {\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    }\r\n    static getEndPost_(params) {\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nclass LimitedFilter {\r\n    constructor(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        let filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    const next = iterator.getNext();\r\n                    let inRange;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                let startPost;\r\n                let endPost;\r\n                let cmp;\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    const indexCompare = this.index_.getCompare();\r\n                    cmp = (a, b) => indexCompare(b, a);\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                let count = 0;\r\n                let foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    const next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    const inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    fullLimitUpdateChild_(snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        let cmp;\r\n        if (this.reverse_) {\r\n            const indexCmp = this.index_.getCompare();\r\n            cmp = (a, b) => indexCmp(b, a);\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        const oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        const newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        const windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        const inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            const oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            let nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            const compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            const remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                const newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                const nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n *\r\n * @internal\r\n */\r\nclass QueryParams {\r\n    constructor() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    hasStart() {\r\n        return this.startSet_;\r\n    }\r\n    hasStartAfter() {\r\n        return this.startAfterSet_;\r\n    }\r\n    hasEndBefore() {\r\n        return this.endBeforeSet_;\r\n    }\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    isViewFromLeft() {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    getIndexStartValue() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    getIndexStartName() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    }\r\n    hasEnd() {\r\n        return this.endSet_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    getIndexEndValue() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    getIndexEndName() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    }\r\n    hasLimit() {\r\n        return this.limitSet_;\r\n    }\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    hasAnchoredLimit() {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    }\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    getLimit() {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    loadsAllData() {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    }\r\n    isDefault() {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    }\r\n    copy() {\r\n        const copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    }\r\n}\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        let childKey;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    let childKey;\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    const newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    const qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    let orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    const obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        let viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nclass ReadonlyRestClient extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        this.listens_ = {};\r\n    }\r\n    reportStats(stats) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    static getListenId_(query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        const thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(this.listens_, listenId) === thisListen) {\r\n                let status;\r\n                if (!error) {\r\n                    status = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status = 'permission_denied';\r\n                }\r\n                else {\r\n                    status = 'rest_error:' + error;\r\n                }\r\n                onComplete(status, null);\r\n            }\r\n        });\r\n    }\r\n    /** @inheritDoc */\r\n    unlisten(query, tag) {\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    }\r\n    get(query) {\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        const pathString = query._path.toString();\r\n        const deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n    /** @inheritDoc */\r\n    refreshAuthToken(token) {\r\n        // no-op since we just always call getToken.\r\n    }\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    restRequest_(pathString, queryStringParameters = {}, callback) {\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            const url = (this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            this.log_('Sending REST request for ' + url);\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (callback && xhr.readyState === 4) {\r\n                    this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    let res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nclass SnapshotHolder {\r\n    constructor() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    getNode(path) {\r\n        return this.rootNode_.getChild(path);\r\n    }\r\n    updateSnapshot(path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        const child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                const value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, (key, tree) => {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            const childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                const safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\r\n            const path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach((tree, key) => {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nclass StatsListener {\r\n    constructor(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    get() {\r\n        const newStats = this.collection_.get();\r\n        const delta = Object.assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, (stat, value) => {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\r\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nclass StatsReporter {\r\n    constructor(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        const timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    reportStats_() {\r\n        const stats = this.statsListener_.get();\r\n        const reportedStats = {};\r\n        let haveStatsToReport = false;\r\n        each(stats, (stat, value) => {\r\n            if (value > 0 && contains(this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AckUserWrite {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    constructor(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    operationForChild(childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            const childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ListenComplete {\r\n    constructor(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Overwrite {\r\n    constructor(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Merge {\r\n    constructor(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            const childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    }\r\n    toString() {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nclass CacheNode {\r\n    constructor(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    isFullyInitialized() {\r\n        return this.fullyInitialized_;\r\n    }\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    isFiltered() {\r\n        return this.filtered_;\r\n    }\r\n    isCompleteForPath(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        const childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    }\r\n    isCompleteForChild(key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    }\r\n    getNode() {\r\n        return this.node_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nclass EventGenerator {\r\n    constructor(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n}\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    const events = [];\r\n    const moves = [];\r\n    changes.forEach(change => {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    const filteredChanges = changes.filter(change => change.type === eventType);\r\n    filteredChanges.sort((a, b) => eventGeneratorCompareChanges(eventGenerator, a, b));\r\n    filteredChanges.forEach(change => {\r\n        const materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(registration => {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    const aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    const bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache, serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nconst EmptyChildren = () => {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nclass ImmutableTree {\r\n    constructor(value, children = EmptyChildren()) {\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    static fromObject(obj) {\r\n        let tree = new ImmutableTree(null);\r\n        each(obj, (childPath, childSnap) => {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    }\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    isEmpty() {\r\n        return this.value === null && this.children.isEmpty();\r\n    }\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    findRootMostMatchingPathAndValue(relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(relativePath);\r\n                const child = this.children.get(front);\r\n                if (child !== null) {\r\n                    const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        const fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    findRootMostValueAndPath(relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, () => true);\r\n    }\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    subtree(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    set(relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.set(pathPopFront(relativePath), toSet);\r\n            const newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    remove(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                const newChild = child.remove(pathPopFront(relativePath));\r\n                let newChildren;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    get(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    setTree(relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            let newChildren;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    fold(fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    }\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    fold_(pathSoFar, fn) {\r\n        const accum = {};\r\n        this.children.inorderTraversal((childKey, childTree) => {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    }\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    findOnPath(path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    findOnPath_(pathToFollow, pathSoFar, f) {\r\n        const result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(pathToFollow);\r\n                const nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    foreachOnPath(path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    foreachOnPath_(pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            const front = pathGetFront(pathToFollow);\r\n            const nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    foreach(f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    }\r\n    foreach_(currentRelativePath, f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    }\r\n    foreachChild(f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nclass CompoundWrite {\r\n    constructor(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    static empty() {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    }\r\n}\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            const rootMostPath = rootmost.path;\r\n            let value = rootmost.value;\r\n            const relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            const subtree = new ImmutableTree(node);\r\n            const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    let newWrite = compoundWrite;\r\n    each(updates, (childKey, node) => {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        const newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    const children = [];\r\n    const node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        let priorityWrite = null;\r\n        writeTree.children.inorderTraversal((childKey, childTree) => {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path,\r\n        snap,\r\n        writeId,\r\n        visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path,\r\n        children: changedChildren,\r\n        writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (let i = 0; i < writeTree.allWrites.length; i++) {\r\n        const record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    const idx = writeTree.allWrites.findIndex(s => {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    const writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    let removedWriteWasVisible = writeToRemove.visible;\r\n    let removedWriteOverlapsWithOtherWrites = false;\r\n    let i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        const currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            const children = writeToRemove.children;\r\n            each(children, (childName) => {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (const childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    let compoundWrite = CompoundWrite.empty();\r\n    for (let i = 0; i < writes.length; ++i) {\r\n        const write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            const writePath = write.path;\r\n            let relativePath;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        const child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            const deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            const subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                const filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                const mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    let completeChildren = ChildrenNode.EMPTY_NODE;\r\n    const topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const node = compoundWriteApply(compoundWriteChildCompoundWrite(merge, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    const path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    const path = pathChild(treePath, childKey);\r\n    const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    let toIterate;\r\n    const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        const nodes = [];\r\n        const cmp = index.getCompare();\r\n        const iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        let next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ChildChangeAccumulator {\r\n    constructor() {\r\n        this.changeMap = new Map();\r\n    }\r\n    trackChildChange(change) {\r\n        const type = change.type;\r\n        const childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        const oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            const oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changeMap.values());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nclass NoCompleteChildSource_ {\r\n    getCompleteChild(childKey) {\r\n        return null;\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Singleton instance.\r\n */\r\nconst NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nclass WriteTreeCompleteChildSource {\r\n    constructor(writes_, viewCache_, optCompleteServerCache_ = null) {\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    getCompleteChild(childKey) {\r\n        const node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            const serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        const completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        const nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    const accumulator = new ChildChangeAccumulator();\r\n    let newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        const overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        const merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        const ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    const changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    const eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        const isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    const oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        let newEventCache, serverNode;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                const serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                const completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                const completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                const completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                const oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                const childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                let newEventChild;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    const eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    const oldServerSnap = oldViewCache.serverCache;\r\n    let newServerCache;\r\n    const serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        const newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        const childChangePath = pathPopFront(changePath);\r\n        const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        const newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    const newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    const source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    const oldEventSnap = oldViewCache.eventCache;\r\n    let newViewCache, newEventCache;\r\n    const source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            const childChangePath = pathPopFront(changePath);\r\n            const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            let newChild;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                const childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                const newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach((relativePath, childNode) => {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    let viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    const serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\r\n        if (serverNode.hasChild(childKey)) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\r\n        const isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    const filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    const serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            let changedChildren = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\r\n                changedChildren = changedChildren.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        let changedChildren = new ImmutableTree(null);\r\n        affectedTree.foreach((mergePath, value) => {\r\n            const serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren = changedChildren.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    const oldServerNode = viewCache.serverCache;\r\n    const newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    let complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        const source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        const oldEventCache = viewCache.eventCache.getNode();\r\n        let newEventCache;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            let newNode;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                const serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(path);\r\n            let newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nclass View {\r\n    constructor(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        const params = this.query_._queryParams;\r\n        const indexFilter = new IndexedFilter(params.getIndex());\r\n        const filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        const initialServerCache = initialViewCache.serverCache;\r\n        const initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        const serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        const eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        const newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        const newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    get query() {\r\n        return this.query_;\r\n    }\r\n}\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    const cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        const path = view.query._path;\r\n        view.eventRegistrations_.forEach(registration => {\r\n            const maybeEvent = registration.createCancelEvent(cancelError, path);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        let remaining = [];\r\n        for (let i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            const existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    const oldViewCache = view.viewCache_;\r\n    const result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    const eventSnap = view.viewCache_.eventCache;\r\n    const initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        const eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    const registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nclass SyncPoint {\r\n    constructor() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n}\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    const queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        const view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        let events = [];\r\n        for (const view of syncPoint.views.values()) {\r\n            events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    const queryId = query._queryIdentifier;\r\n    const view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        let eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        let eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        const viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    const queryId = query._queryIdentifier;\r\n    const removed = [];\r\n    let cancelEvents = [];\r\n    const hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        // When you do ref.off(...), we search all views for the registration to remove.\r\n        for (const [viewQueryId, view] of syncPoint.views.entries()) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(viewQueryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        const view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    const result = [];\r\n    for (const view of syncPoint.views.values()) {\r\n        if (!view.query._queryParams.loadsAllData()) {\r\n            result.push(view);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    let serverCache = null;\r\n    for (const view of syncPoint.views.values()) {\r\n        serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    const params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        const queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    for (const view of syncPoint.views.values()) {\r\n        if (view.query._queryParams.loadsAllData()) {\r\n            return view;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nlet syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nclass SyncTree {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    constructor(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n}\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert = false) {\r\n    const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    const needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        let affectedTree = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree = affectedTree.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, (pathString) => {\r\n                affectedTree = affectedTree.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    const path = query._path;\r\n    const maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    let cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        const removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        const removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        const removingDefault = -1 !==\r\n            removed.findIndex(query => {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        const covered = syncTree.syncPointTree_.findOnPath(path, (relativePath, parentSyncPoint) => syncPointHasCompleteView(parentSyncPoint));\r\n        if (removingDefault && !covered) {\r\n            const subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (let i = 0; i < newViews.length; ++i) {\r\n                    const view = newViews[i], newQuery = view.query;\r\n                    const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                const defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach((queryToRemove) => {\r\n                    const tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const changeTree = ImmutableTree.fromObject(changedChildren);\r\n        const op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    let foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        const subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild((childName, childSyncPoint) => {\r\n            const completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        const queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        const tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    let events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        const view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    const includeHiddenSets = true;\r\n    const writeTree = syncTree.pendingWriteTree_;\r\n    const serverCache = syncTree.syncPointTree_.findOnPath(path, (pathSoFar, syncPoint) => {\r\n        const relativePath = newRelativePath(pathSoFar, path);\r\n        const serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    const serverCacheComplete = serverCache != null;\r\n    const serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        const syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        let events = [];\r\n        const childName = pathGetFront(operation.path);\r\n        const childOperation = operation.operationForChild(childName);\r\n        const childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            const childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    const syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let events = [];\r\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\r\n        const childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        const childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    const query = view.query;\r\n    const tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: () => {\r\n            const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: (status) => {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                const error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    const queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    const splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    const syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            let views = [];\r\n            if (maybeChildSyncPoint) {\r\n                views = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, (_key, childViews) => {\r\n                views = views.concat(childViews);\r\n            });\r\n            return views;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (let j = 0; j < queries.length; ++j) {\r\n        const removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    const path = query._path;\r\n    const tag = syncTreeTagForQuery_(syncTree, query);\r\n    const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    const events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    const subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        const queriesToStop = subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                let queries = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries = queries.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(view => view.query));\r\n                }\r\n                each(childMap, (_key, childQueries) => {\r\n                    queries = queries.concat(childQueries);\r\n                });\r\n                return queries;\r\n            }\r\n        });\r\n        for (let i = 0; i < queriesToStop.length; ++i) {\r\n            const queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ExistingValueProvider {\r\n    constructor(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    }\r\n    node() {\r\n        return this.node_;\r\n    }\r\n}\r\nclass DeferredValueProvider {\r\n    constructor(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    }\r\n    node() {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    }\r\n}\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nconst generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nconst resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nconst resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nconst resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    const delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    const existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    const leaf = existingNode;\r\n    const existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nconst resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nconst resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    const rawPri = node.getPriority().val();\r\n    const priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    let newNode;\r\n    if (node.isLeafNode()) {\r\n        const leafNode = node;\r\n        const value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        const childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nclass Tree {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    constructor(name = '', parent = null, node = { children: {}, childCount: 0 }) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n}\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    let child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        const childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, (child, childTree) => {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, child => {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    let node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    const childEmpty = treeIsEmpty(child);\r\n    const childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nconst INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nconst INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nconst MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nconst isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nconst isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nconst isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nconst isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nconst validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nconst validateFirebaseData = function (errorPrefix, data, path_) {\r\n    const path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        let hasDotValue = false;\r\n        let hasActualChild = false;\r\n        each(data, (key, value) => {\r\n            if (key === '.value') {\r\n                hasDotValue = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue && hasActualChild) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nconst validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    let i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        const keys = pathSlice(curPath);\r\n        for (let j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    let prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nconst validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    const errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    const mergePaths = [];\r\n    each(data, (key, value) => {\r\n        const curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nconst validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nconst validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nconst validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nconst validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    const pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nclass EventQueue {\r\n    constructor() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n}\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    let currList = null;\r\n    for (let i = 0; i < eventDataList.length; i++) {\r\n        const data = eventDataList[i];\r\n        const path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathEquals(eventPath, path));\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathContains(eventPath, changedPath) ||\r\n        pathContains(changedPath, eventPath));\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    let sentAll = true;\r\n    for (let i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        const eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            const eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (let i = 0; i < eventList.events.length; i++) {\r\n        const eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            const eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nconst MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nclass Repo {\r\n    constructor(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    toString() {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    }\r\n}\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, (connectStatus) => {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, (updates) => {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(token => {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(result => {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, () => new StatsReporter(repo.stats_, repo.server_));\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            let infoEvents = [];\r\n            const node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(() => {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: () => { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            repo.server_.listen(query, currentHashFn, tag, (status, data) => {\r\n                const events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: (query, tag) => {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    const offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    const path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    let events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            const taggedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            const taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        const changedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        const snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    let affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, (key, value) => {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    const path = new Path('/.info/' + pathString);\r\n    const newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    const events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(payload => {\r\n        const node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        const events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, err => {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    const writeId = repoGetNextWriteId(repo);\r\n    const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), (status, errorReason) => {\r\n        const success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    const affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    let empty = true;\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const changedChildren = {};\r\n    each(childrenToMerge, (changedKey, changedValue) => {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        const writeId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n            const success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n            const affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, (changedPath) => {\r\n            const affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), (path, node) => {\r\n        const resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    let events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), (path, snap) => {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        const affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    const newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    const newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, (childName, childNode) => {\r\n                const newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoLog(repo, ...varArgs) {\r\n    let prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log(prefix, ...varArgs);\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(() => {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                const code = (status || 'error').toUpperCase();\r\n                let message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                const error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    const transaction = {\r\n        path,\r\n        update: transactionUpdate,\r\n        onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    const currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    const newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        const queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        const nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        let priorityForNode;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            const currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        const serverValues = repoGenerateServerValues(repo);\r\n        const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node = repo.transactionQueueTree_) {\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        const queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        const allRun = queue.every((transaction) => transaction.status === 0 /* RUN */);\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, childNode => {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    const setsToIgnore = queue.map(txn => {\r\n        return txn.currentWriteId;\r\n    });\r\n    const latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    let snapToSend = latestState;\r\n    const latestHash = latestState.hash();\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        const relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    const dataToSend = snapToSend.val(true);\r\n    const pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, (status) => {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status\r\n        });\r\n        let events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            const callbacks = [];\r\n            for (let i = 0; i < queue.length; i++) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(() => queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (let i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    const rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    const path = treeGetPath(rootMostTransactionNode);\r\n    const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    const callbacks = [];\r\n    let events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    const txnsToRerun = queue.filter(q => {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    const setsToIgnore = txnsToRerun.map(q => {\r\n        return q.currentWriteId;\r\n    });\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const transaction = queue[i];\r\n        const relativePath = newRelativePath(path, transaction.path);\r\n        let abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                const currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                const newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    let newDataNode = nodeFromJSON(newData);\r\n                    const hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    const oldWriteId = transaction.currentWriteId;\r\n                    const serverValues = repoGenerateServerValues(repo);\r\n                    const newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(() => queue[i].onComplete(null, false, queue[i].currentInputSnapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(() => queue[i].onComplete(new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    let front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    let transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    const transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort((a, b) => a.order - b.order);\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    const nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (let i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, child => {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        let to = 0;\r\n        for (let from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, childNode => {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        const callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        let events = [];\r\n        let lastSent = -1;\r\n        for (let i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    let pathStringDecoded = '';\r\n    const pieces = pathString.split('/');\r\n    for (let i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            let piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    const results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (const segment of queryString.split('&')) {\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        const kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(`Invalid query segment '${segment}' in query '${queryString}'`);\r\n        }\r\n    }\r\n    return results;\r\n}\r\nconst parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    const parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, nodeAdmin, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nconst parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    let host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    let secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        let colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        let slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        let questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        const queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        const hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            const dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host,\r\n        port,\r\n        domain,\r\n        subdomain,\r\n        secure,\r\n        scheme,\r\n        pathString,\r\n        namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nclass DataEvent {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    constructor(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    getPath() {\r\n        const ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    }\r\n    getEventType() {\r\n        return this.eventType;\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    }\r\n}\r\nclass CancelEvent {\r\n    constructor(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    getPath() {\r\n        return this.path;\r\n    }\r\n    getEventType() {\r\n        return 'cancel';\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return this.path.toString() + ':cancel';\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nclass CallbackContext {\r\n    constructor(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    onValue(expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    }\r\n    onCancel(error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    }\r\n    get hasCancelCallback() {\r\n        return !!this.cancelCallback;\r\n    }\r\n    matches(other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nclass OnDisconnect {\r\n    /** @hideconstructor */\r\n    constructor(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    cancel() {\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    remove() {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    set(value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    setWithPriority(value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    update(values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nclass QueryImpl {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    constructor(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    get key() {\r\n        if (pathIsEmpty(this._path)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return pathGetBack(this._path);\r\n        }\r\n    }\r\n    get ref() {\r\n        return new ReferenceImpl(this._repo, this._path);\r\n    }\r\n    get _queryIdentifier() {\r\n        const obj = queryParamsGetQueryObject(this._queryParams);\r\n        const id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    }\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\r\n    get _queryObject() {\r\n        return queryParamsGetQueryObject(this._queryParams);\r\n    }\r\n    isEqual(other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        const sameRepo = this._repo === other._repo;\r\n        const samePath = pathEquals(this._path, other._path);\r\n        const sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    }\r\n    toJSON() {\r\n        return this.toString();\r\n    }\r\n    toString() {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    }\r\n}\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    let startNode = null;\r\n    let endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        const tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        const wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nclass ReferenceImpl extends QueryImpl {\r\n    /** @hideconstructor */\r\n    constructor(repo, path) {\r\n        super(repo, path, new QueryParams(), false);\r\n    }\r\n    get parent() {\r\n        const parentPath = pathParent(this._path);\r\n        return parentPath === null\r\n            ? null\r\n            : new ReferenceImpl(this._repo, parentPath);\r\n    }\r\n    get root() {\r\n        let ref = this;\r\n        while (ref.parent !== null) {\r\n            ref = ref.parent;\r\n        }\r\n        return ref;\r\n    }\r\n}\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nclass DataSnapshot {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    constructor(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\r\n    get priority() {\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this._node.getPriority().val();\r\n    }\r\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\r\n    get key() {\r\n        return this.ref.key;\r\n    }\r\n    /** Returns the number of child properties of this `DataSnapshot`. */\r\n    get size() {\r\n        return this._node.numChildren();\r\n    }\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    child(path) {\r\n        const childPath = new Path(path);\r\n        const childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    }\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    exists() {\r\n        return !this._node.isEmpty();\r\n    }\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    exportVal() {\r\n        return this._node.val(true);\r\n    }\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    forEach(action) {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        const childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, (key, node) => {\r\n            return action(new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    }\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    hasChild(path) {\r\n        const childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    }\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    hasChildren() {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return this.exportVal();\r\n    }\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    val() {\r\n        return this._node.val();\r\n    }\r\n}\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    const repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Returns an `OnDisconnect` object - see\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information on how to use it.\r\n *\r\n * @param ref - The reference to add OnDisconnect triggers for.\r\n */\r\nfunction onDisconnect(ref) {\r\n    ref = getModularInstance(ref);\r\n    return new OnDisconnect(ref._repo, ref._path);\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    const now = repoServerTime(parent._repo);\r\n    const name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    const thennablePushRef = child(parent, name);\r\n    const pushRef = child(parent, name);\r\n    let promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(() => pushRef);\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(node => {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nclass ValueEventRegistration {\r\n    constructor(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        return eventType === 'value';\r\n    }\r\n    createEvent(change, query) {\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, null);\r\n        }\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    }\r\n    hasAnyCallback() {\r\n        return this.callbackContext !== null;\r\n    }\r\n}\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nclass ChildEventRegistration {\r\n    constructor(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        let eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    createEvent(change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        const childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    }\r\n    hasAnyCallback() {\r\n        return !!this.callbackContext;\r\n    }\r\n}\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    let cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        const userCallback = callback;\r\n        const onceCallback = (dataSnapshot, previousChildName) => {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    const callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    const container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    let container = null;\r\n    const expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nclass QueryConstraint {\r\n}\r\nclass QueryEndAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        const newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nclass QueryEndBeforeConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        const newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nclass QueryStartAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        const newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value = null, key) {\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nclass QueryStartAfterConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        const newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nclass QueryLimitToFirstConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nclass QueryLimitToLastConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nclass QueryOrderByChildConstraint extends QueryConstraint {\r\n    constructor(_path) {\r\n        super();\r\n        this._path = _path;\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        const parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        const index = new PathIndex(parsedPath);\r\n        const newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nclass QueryOrderByKeyConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nclass QueryOrderByValueConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nclass QueryEqualToValueConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query, ...queryConstraints) {\r\n    let queryImpl = getModularInstance(query);\r\n    for (const constraint of queryConstraints) {\r\n        queryImpl = constraint._apply(queryImpl);\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase Node.js Admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches `Repo` instances.\r\n */\r\nconst repos = {};\r\n/**\r\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\r\n */\r\nlet useRestClient = false;\r\n/**\r\n * Update an existing `Repo` in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(`${host}:${port}`, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    let dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\r\n    }\r\n    let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    let repoInfo = parsedUrl.repoInfo;\r\n    let isEmulator;\r\n    let dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined' && process.env) {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    const authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    const repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    const appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    let appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    let repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nclass Database {\r\n    /** @hideconstructor */\r\n    constructor(_repoInternal, \r\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a `Database` instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    get _repo() {\r\n        if (!this._instanceStarted) {\r\n            repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n            this._instanceStarted = true;\r\n        }\r\n        return this._repoInternal;\r\n    }\r\n    get _root() {\r\n        if (!this._rootInternal) {\r\n            this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n        }\r\n        return this._rootInternal;\r\n    }\r\n    _delete() {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _checkNotDeleted(apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns the instance of the Realtime Database SDK that is associated\r\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\r\n * with default settings if no instance exists or if the existing instance uses\r\n * a custom database URL.\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\r\n * Database instance is associated with.\r\n * @param url - The URL of the Realtime Database instance to connect to. If not\r\n * provided, the SDK connects to the default instance of the Firebase App.\r\n * @returns The `Database` instance of the provided app.\r\n */\r\nfunction getDatabase(app = getApp(), url) {\r\n    return _getProvider(app, 'database').getImmediate({\r\n        identifier: url\r\n    });\r\n}\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options = {}) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    const repo = db._repoInternal;\r\n    let tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        const token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging(logger, persistent) {\r\n    enableLogging$1(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerDatabase(variant) {\r\n    setSDKVersion(SDK_VERSION$1);\r\n    _registerComponent(new Component('database', (container, { instanceIdentifier: url }) => {\r\n        const app = container.getProvider('app').getImmediate();\r\n        const authProvider = container.getProvider('auth-internal');\r\n        const appCheckProvider = container.getProvider('app-check-internal');\r\n        return repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    registerVersion(name, version, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of {@link runTransaction}.\r\n */\r\nclass TransactionResult {\r\n    /** @hideconstructor */\r\n    constructor(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    toJSON() {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    }\r\n}\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `runTransaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `runTransaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    const applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    const deferred = new Deferred();\r\n    const promiseComplete = (error, committed, node) => {\r\n        let dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    const unwatcher = onValue(ref, () => { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nPersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nConnection;\r\n/**\r\n * @internal\r\n */\r\nconst hijackHash = function (newHash) {\r\n    const oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nRepoInfo;\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n * @internal\r\n */\r\nconst forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\n/**\r\n * Firebase Realtime Database\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterDatabase();\n\nexport { DataSnapshot, Database, OnDisconnect, QueryConstraint, TransactionResult, QueryImpl as _QueryImpl, QueryParams as _QueryParams, ReferenceImpl as _ReferenceImpl, forceRestClient as _TEST_ACCESS_forceRestClient, hijackHash as _TEST_ACCESS_hijackHash, repoManagerDatabaseFromApp as _repoManagerDatabaseFromApp, setSDKVersion as _setSDKVersion, validatePathString as _validatePathString, validateWritablePath as _validateWritablePath, child, connectDatabaseEmulator, enableLogging, endAt, endBefore, equalTo, get, getDatabase, goOffline, goOnline, increment, limitToFirst, limitToLast, off, onChildAdded, onChildChanged, onChildMoved, onChildRemoved, onDisconnect, onValue, orderByChild, orderByKey, orderByPriority, orderByValue, push, query, ref, refFromURL, remove, runTransaction, serverTimestamp, set, setPriority, setWithPriority, startAfter, startAt, update };\n//# sourceMappingURL=index.esm2017.js.map\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vacants.vue?vue&type=style&index=0&id=31552d64&scoped=true&lang=css&\"","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","var call = require('../internals/function-call');\nvar getBuiltIn = require('../internals/get-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar redefine = require('../internals/redefine');\n\nmodule.exports = function () {\n  var Symbol = getBuiltIn('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    redefine(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call(valueOf, this);\n    });\n  }\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var global = require('../internals/global');\nvar isRegExp = require('../internals/is-regexp');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var $ = require('../internals/export');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar fails = require('../internals/fails');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar toObject = require('../internals/to-object');\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$({ target: 'Object', stat: true, forced: FORCED }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];\n  }\n});\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","export * from '@firebase/database';\n//# sourceMappingURL=index.esm.js.map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"list\"},_vm._l((_vm.list),function(item){return _c('div',{key:item.id,staticClass:\"item\",on:{\"click\":function () { return _vm.setSelectedId(item.id); }}},[_c('div',[_vm._v(_vm._s(item.title))])])}),0),_c('div',{staticClass:\"data\"},[(_vm.selectedId)?_c('div',[_c('div',{staticClass:\"buttons\"},[_c('b-button',{attrs:{\"variant\":\"danger\"},on:{\"click\":function () { return _vm.deleteData(_vm.selectedData.id); }}},[_vm._v(\"Удалить\")])],1),_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.selectedData.title))]),_c('div',{staticClass:\"caption\"},[_vm._v(_vm._s(_vm.selectedData.caption))]),_c('div',{staticClass:\"nameCategory\"},[_vm._v(\"Что вам предстоит\")]),_c('div',{staticClass:\"caption\"},[_vm._v(_vm._s(_vm.selectedData.responsibilities))]),_c('div',{staticClass:\"nameCategory\"},[_vm._v(\"Что от вас требуется\")]),_c('div',{staticClass:\"caption\"},[_vm._v(_vm._s(_vm.selectedData.expectations))]),_c('div',{staticClass:\"nameCategory\"},[_vm._v(\"Что мы вам предоставим\")]),_c('div',{staticClass:\"caption\"},[_vm._v(_vm._s(_vm.selectedData.benefits))])]):_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/empty.jpg\")}})])]),_c('div',{staticClass:\"add\"},[_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-1\",modifiers:{\"modal-1\":true}}],attrs:{\"variant\":\"success\"}},[_c('b-icon',{attrs:{\"icon\":\"plus-lg\"}})],1)],1),_c('b-modal',{attrs:{\"id\":\"modal-1\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('h5',[_vm._v(\"Создать новую вакансию\")])]},proxy:true},{key:\"default\",fn:function(){return [_c('p',[_vm._v(\"Заполните все поля новой вакансии\")]),_c('b-form-input',{attrs:{\"placeholder\":\"Название вакансии\"},model:{value:(_vm.newVacantion.title),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"title\", $$v)},expression:\"newVacantion.title\"}}),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Описание вакансии\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newVacantion.caption),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"caption\", $$v)},expression:\"newVacantion.caption\"}}),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Обязанности будущего кандидата\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newVacantion.responsibilities),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"responsibilities\", $$v)},expression:\"newVacantion.responsibilities\"}}),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Требования, выдвигаемые к кандидату\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newVacantion.expectations),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"expectations\", $$v)},expression:\"newVacantion.expectations\"}}),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Условия работы\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newVacantion.benefits),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"benefits\", $$v)},expression:\"newVacantion.benefits\"}})]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function () { return _vm.saveData(ok); }}},[_vm._v(\" Сохранить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"list\">\r\n      <div @click=\"() => setSelectedId(item.id)\" v-for=\"item in list\" :key=\"item.id\" class=\"item\">\r\n        <div>{{item.title}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"data\">\r\n      <div v-if=\"selectedId\">\r\n        <div class=\"buttons\">\r\n          <b-button variant=\"danger\" @click=\"() => deleteData(selectedData.id)\">Удалить</b-button>\r\n        </div>\r\n        <div class=\"title\">{{selectedData.title}}</div>\r\n        <div class=\"caption\">{{selectedData.caption}}</div>\r\n        <div class=\"nameCategory\">Что вам предстоит</div>\r\n        <div class=\"caption\">{{selectedData.responsibilities}}</div>\r\n        <div class=\"nameCategory\">Что от вас требуется</div>\r\n        <div class=\"caption\">{{selectedData.expectations}}</div>\r\n        <div class=\"nameCategory\">Что мы вам предоставим</div>\r\n        <div class=\"caption\">{{selectedData.benefits}}</div>\r\n      </div>\r\n      <div v-else>\r\n        <img src=\"../assets/empty.jpg\">\r\n      </div>\r\n    </div>\r\n    <div class=\"add\">\r\n      <b-button v-b-modal.modal-1 variant=\"success\">\r\n        <b-icon icon=\"plus-lg\"></b-icon>\r\n      </b-button>\r\n    </div>\r\n    <b-modal id=\"modal-1\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <h5>Создать новую вакансию</h5>\r\n      </template>\r\n\r\n      <template class=\"content\" #default>\r\n        <p>Заполните все поля новой вакансии</p>\r\n        <b-form-input v-model=\"newVacantion.title\" placeholder=\"Название вакансии\"></b-form-input>\r\n        <b-form-textarea\r\n          id=\"textarea\"\r\n          v-model=\"newVacantion.caption\"\r\n          placeholder=\"Описание вакансии\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea>\r\n        <b-form-textarea\r\n          id=\"textarea\"\r\n          v-model=\"newVacantion.responsibilities\"\r\n          placeholder=\"Обязанности будущего кандидата\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea>\r\n        <b-form-textarea\r\n          id=\"textarea\"\r\n          v-model=\"newVacantion.expectations\"\r\n          placeholder=\"Требования, выдвигаемые к кандидату\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea>\r\n        <b-form-textarea\r\n          id=\"textarea\"\r\n          v-model=\"newVacantion.benefits\"\r\n          placeholder=\"Условия работы\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"() => saveData(ok)\">\r\n          Сохранить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDatabase, ref, child, get, set } from 'firebase/database'\r\nexport default {\r\n  mounted () {\r\n    if (!this.$store.getters.getEmail) {\r\n      this.$router.push('/')\r\n    }\r\n    this.loadData()\r\n  },\r\n  computed: {\r\n    selectedData () {\r\n      return this.list.find((item) => item.id.toString() === this.selectedId.toString())\r\n    }\r\n  },\r\n  methods: {\r\n    setSelectedId (id) {\r\n      this.selectedId = id.toString()\r\n    },\r\n    async deleteData (id) {\r\n      const db = getDatabase()\r\n      await set(ref(db, 'vacancies/' + id), null)\r\n      this.selectedId = 0\r\n      this.loadData()\r\n    },\r\n    loadData () {\r\n      const dbRef = ref(getDatabase())\r\n      get(child(dbRef, 'vacancies')).then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          const data = Object.values(snapshot.val())\r\n          this.list = data || []\r\n        } else {\r\n          console.log('No data available')\r\n        }\r\n      }).catch((error) => {\r\n        console.error(error)\r\n      })\r\n    },\r\n    saveData (func) {\r\n      const db = getDatabase()\r\n      const id = Number(new Date())\r\n      set(ref(db, 'vacancies/' + id), {\r\n        id: id,\r\n        ...this.newVacantion\r\n      })\r\n      func()\r\n      this.clearData()\r\n      this.loadData()\r\n    },\r\n    clearData () {\r\n      this.newVacantion = {\r\n        title: '',\r\n        caption: '',\r\n        responsibilities: '',\r\n        expectations: '',\r\n        benefits: ''\r\n      }\r\n    }\r\n  },\r\n  data: () => ({\r\n    list: [],\r\n    selectedId: 0,\r\n    newVacantion: {\r\n      title: '',\r\n      caption: '',\r\n      responsibilities: '',\r\n      expectations: '',\r\n      benefits: ''\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n}\r\n\r\n.list {\r\n  height: calc(100vh - 100px);\r\n  width: 30%;\r\n  overflow: auto;\r\n  box-shadow: 6px 1px 13px -3px rgba(34, 60, 80, 0.17);\r\n}\r\n\r\n.data {\r\n  height: calc(100vh - 100px);\r\n  padding: 20px;\r\n  overflow: auto;\r\n  width: 100%;\r\n}\r\n\r\n.item {\r\n  display: flex;\r\n  font-size: 13px;\r\n  padding: 5px;\r\n  font-weight: bolder;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #c1c1c1;\r\n  transition: .1s;\r\n}\r\n\r\n.item:hover {\r\n  background-color: #faeaff;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.title {\r\n  font-weight: bolder;\r\n  font-size: 30px;\r\n}\r\n\r\n.caption {\r\n  text-align: left;\r\n  color: #858585;\r\n}\r\n\r\n.nameCategory {\r\n  text-align: left;\r\n  font-weight: bolder;\r\n  font-size: 16px;\r\n  margin: 12px 0;\r\n}\r\n\r\n.add {\r\n  position: absolute;\r\n  bottom: 30px;\r\n  right: 30px;\r\n}\r\n\r\n#textarea {\r\n  margin: 10px 0;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vacants.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vacants.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Vacants.vue?vue&type=template&id=31552d64&scoped=true&\"\nimport script from \"./Vacants.vue?vue&type=script&lang=js&\"\nexport * from \"./Vacants.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Vacants.vue?vue&type=style&index=0&id=31552d64&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"31552d64\",\n  null\n  \n)\n\nexport default component.exports","var DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\nvar propertyIsEnumerable = uncurryThis($propertyIsEnumerable);\nvar push = uncurryThis([].push);\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {\n        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","var isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.symbol.constructor');\nrequire('../modules/es.symbol.for');\nrequire('../modules/es.symbol.key-for');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.object.get-own-property-symbols');\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar arraySlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = arraySlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n    var dummy = this;\n    // check on 1..constructor(foo) case\n    return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })\n      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar functionToString = uncurryThis(FunctionPrototype.toString);\nvar nameRE = /function\\b(?:\\s|\\/\\*[\\S\\s]*?\\*\\/|\\/\\/[^\\n\\r]*[\\n\\r]+)*([^\\s(/]*)/;\nvar regExpExec = uncurryThis(nameRE.exec);\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return regExpExec(nameRE, functionToString(this))[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/native-symbol-registry');\n\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  'for': function (key) {\n    var string = toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  }\n});\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","var bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_vm._m(0),(_vm.isShowLogin)?_c('Login',{on:{\"toggleShow\":_vm.toggleShowLogin}}):_c('Signup',{on:{\"toggleShow\":_vm.toggleShowLogin}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"img\"},[_c('img',{attrs:{\"alt\":\"BackGround Icon\",\"src\":require(\"../assets/login.jpg\")}})])}]\n\nexport { render, staticRenderFns }","var render = function () {\nvar this$1 = this;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"label\"},[_vm._v(\"Авторизация\")]),_c('b-form-input',{attrs:{\"type\":\"text\",\"placeholder\":\"Введите почту\"},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}}),_c('b-form-input',{attrs:{\"type\":\"password\",\"placeholder\":\"Введите пароль\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('div',{staticClass:\"buttons\"},[_c('b-button',{staticClass:\"login\",attrs:{\"variant\":\"success\"},on:{\"click\":_vm.login}},[_vm._v(\"Войти\")]),_c('b-button',{on:{\"click\":function () { return this$1.$emit('toggleShow'); }}},[_vm._v(\"Регистрация\")])],1)],1),_c('b-alert',{staticClass:\"alert\",attrs:{\"show\":_vm.isError,\"variant\":\"danger\"}},[_vm._v(\"Неверный логин или пароль\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"label\">Авторизация</div>\r\n      <b-form-input v-model=\"email\" type=\"text\" placeholder=\"Введите почту\"></b-form-input>\r\n      <b-form-input v-model=\"password\" type=\"password\" placeholder=\"Введите пароль\"></b-form-input>\r\n      <div class=\"buttons\">\r\n        <b-button class=\"login\" @click=\"login\" variant=\"success\">Войти</b-button>\r\n        <b-button @click=\"() => this.$emit('toggleShow')\" >Регистрация</b-button>\r\n      </div>\r\n    </div>\r\n    <b-alert :show=\"isError\" class=\"alert\" variant=\"danger\">Неверный логин или пароль</b-alert>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data: () => ({\r\n    email: '',\r\n    password: '',\r\n    isError: false\r\n  }),\r\n  methods: {\r\n    async login () {\r\n      const formData = {\r\n        email: this.email,\r\n        password: this.password\r\n      }\r\n      try {\r\n        await this.$store.dispatch('login', formData)\r\n        this.$router.push('/vacancies')\r\n      } catch (e) {\r\n        this.isError = true\r\n        // eslint-disable-next-line no-return-assign\r\n        setTimeout(() => this.isError = false, 2000)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.wrapper {\r\n  height: calc(100vh - 100px);\r\n  background-color: #AF7AC4;\r\n  display: flex;\r\n  gap: 24px;\r\n  box-sizing: border-box;\r\n  padding: 24px 70px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.label {\r\n  width: 100%;\r\n  font-size: 22px;\r\n  font-weight: bolder;\r\n  color: black;\r\n  margin-top: 50px;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  gap: 16px;\r\n  justify-content: center;\r\n}\r\n\r\n.login {\r\n  width: 150px;\r\n  background-color: #8E44AD;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.login:hover, .login:focus {\r\n  background-color: #9a3fbe;\r\n}\r\n\r\n.login:focus {\r\n  background-color: #9a3fbe;\r\n}\r\n\r\n.alert {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 10px 20px;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=0678ed4f&scoped=true&\"\nimport script from \"./Login.vue?vue&type=script&lang=js&\"\nexport * from \"./Login.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=0678ed4f&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0678ed4f\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {\nvar this$1 = this;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"label\"},[_vm._v(\"Регистрация\")]),_c('b-form-input',{attrs:{\"type\":\"text\",\"placeholder\":\"Введите почту\"},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}}),_c('b-form-input',{attrs:{\"type\":\"password\",\"placeholder\":\"Введите пароль\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('b-form-input',{attrs:{\"type\":\"password\",\"placeholder\":\"Повторите пароль\"},model:{value:(_vm.password2),callback:function ($$v) {_vm.password2=$$v},expression:\"password2\"}}),_c('div',{staticClass:\"buttons\"},[_c('b-button',{staticClass:\"login\",attrs:{\"variant\":\"success\"},on:{\"click\":_vm.signup}},[_vm._v(\"Зарегестрироваться\")]),_c('b-button',{on:{\"click\":function () { return this$1.$emit('toggleShow'); }}},[_vm._v(\"Войти\")])],1)],1),_c('b-alert',{staticClass:\"alert\",attrs:{\"show\":_vm.isError,\"variant\":\"danger\"}},[_vm._v(\"Ошибка авторизации\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"label\">Регистрация</div>\r\n      <b-form-input v-model=\"email\" type=\"text\" placeholder=\"Введите почту\"></b-form-input>\r\n      <b-form-input v-model=\"password\" type=\"password\" placeholder=\"Введите пароль\"></b-form-input>\r\n      <b-form-input v-model=\"password2\" type=\"password\" placeholder=\"Повторите пароль\"></b-form-input>\r\n      <div class=\"buttons\">\r\n        <b-button class=\"login\"  @click=\"signup\" variant=\"success\">Зарегестрироваться</b-button>\r\n        <b-button @click=\"() => this.$emit('toggleShow')\">Войти</b-button>\r\n      </div>\r\n    </div>\r\n    <b-alert :show=\"isError\" class=\"alert\" variant=\"danger\">Ошибка авторизации</b-alert>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Signup',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data: () => ({\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    isError: false\r\n  }),\r\n  methods: {\r\n    async signup () {\r\n      if (this.password !== this.password2) {\r\n        this.showAlert()\r\n      }\r\n\r\n      const formData = {\r\n        email: this.email,\r\n        password: this.password\r\n      }\r\n      try {\r\n        await this.$store.dispatch('signup', formData)\r\n        this.$router.push('/')\r\n      } catch (e) {\r\n        this.showAlert()\r\n      }\r\n    },\r\n    showAlert () {\r\n      this.isError = true\r\n      // eslint-disable-next-line no-return-assign\r\n      setTimeout(() => this.isError = false, 2000)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.wrapper {\r\n  height: calc(100vh - 100px);\r\n  background-color: #AF7AC4;\r\n  display: flex;\r\n  gap: 24px;\r\n  box-sizing: border-box;\r\n  padding: 24px 70px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.label {\r\n  width: 100%;\r\n  font-size: 22px;\r\n  font-weight: bolder;\r\n  color: black;\r\n  margin-top: 50px;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  gap: 16px;\r\n  justify-content: center;\r\n}\r\n\r\n.login {\r\n  background-color: #8E44AD;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.login:hover, .login:focus {\r\n  background-color: #9a3fbe;\r\n}\r\n\r\n.login:focus {\r\n  background-color: #9a3fbe;\r\n}\r\n\r\n.alert {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 10px 20px;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Signup.vue?vue&type=template&id=4073be30&scoped=true&\"\nimport script from \"./Signup.vue?vue&type=script&lang=js&\"\nexport * from \"./Signup.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Signup.vue?vue&type=style&index=0&id=4073be30&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4073be30\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"img\">\r\n      <img alt=\"BackGround Icon\" src=\"../assets/login.jpg\">\r\n    </div>\r\n    <Login @toggleShow=\"toggleShowLogin\" v-if=\"isShowLogin\"/>\r\n    <Signup @toggleShow=\"toggleShowLogin\" v-else/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\n\r\nimport Login from '@/components/Login'\r\nimport Signup from '@/components/Signup'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  components: {\r\n    Login,\r\n    Signup\r\n  },\r\n  data: () => ({\r\n    isShowLogin: true\r\n  }),\r\n  methods: {\r\n    toggleShowLogin () {\r\n      this.isShowLogin = !this.isShowLogin\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n  height: calc(100vh - 100px);\r\n}\r\n\r\n.img {\r\n  margin-top: 50px;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=409c4974&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=409c4974&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"409c4974\",\n  null\n  \n)\n\nexport default component.exports","var $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/native-symbol-registry');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput.vue?vue&type=style&index=0&id=f9b355e8&scoped=true&lang=css&\"","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","module.exports = __webpack_public_path__ + \"img/login.bdf917b0.jpg\";","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\n\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar TypeError = global.TypeError;\nvar QObject = global.QObject;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar push = uncurryThis([].push);\n\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar WellKnownSymbolsStore = shared('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      push(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  redefine(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es-x/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')();\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) != '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) != '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) != '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = replacer;\n  if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n  if (!isArray(replacer)) replacer = function (key, value) {\n    if (isCallable($replacer)) value = call($replacer, this, key, value);\n    if (!isSymbol(value)) return value;\n  };\n  args[1] = replacer;\n  return apply($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({ target: 'JSON', stat: true, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"list\"},[_c('b-form-input',{staticClass:\"searchName\",attrs:{\"placeholder\":\"Поиск по имени\"},model:{value:(_vm.searchUser),callback:function ($$v) {_vm.searchUser=$$v},expression:\"searchUser\"}}),_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('b-form-select',{staticClass:\"form-control\",staticStyle:{\"width\":\"84%\",\"margin\":\"8px\"},attrs:{\"options\":_vm.jobList,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},model:{value:(_vm.filterJob),callback:function ($$v) {_vm.filterJob=$$v},expression:\"filterJob\"}}),_c('b-icon',{staticStyle:{\"fill\":\"red\",\"right\":\"20px\",\"position\":\"absolute\",\"margin-top\":\"-34px\"},attrs:{\"icon\":\"x-square-fill\",\"variant\":\"error\"},on:{\"click\":function () { return _vm.filterJob = 0; }}})],1),_vm._l((_vm.filteredList),function(item){return _c('div',{key:item.id,staticClass:\"item\",on:{\"click\":function () { return _vm.setSelectedId(item.id); }}},[_c('b-avatar',{attrs:{\"variant\":\"info\",\"src\":item.avatar}}),_c('div',[_vm._v(_vm._s(item.name))]),(item.status === '8')?_c('div',{staticClass:\"success\"}):(item.status === '9')?_c('div',{staticClass:\"fail\"}):_c('div',{staticClass:\"progress\"})],1)})],2),_c('div',{staticClass:\"data\"},[(_vm.selectedId)?_c('div',[_c('div',{staticClass:\"buttons\"},[_c('b-form-select',{staticClass:\"form-control\",staticStyle:{\"width\":\"250px\"},attrs:{\"options\":_vm.statusOptions,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},on:{\"change\":_vm.setStatus},model:{value:(_vm.selectedData.status),callback:function ($$v) {_vm.$set(_vm.selectedData, \"status\", $$v)},expression:\"selectedData.status\"}}),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-2\",modifiers:{\"modal-2\":true}}],attrs:{\"size\":\"sm\",\"variant\":\"outline-primary\"}},[_c('b-icon',{attrs:{\"icon\":\"envelope\",\"aria-hidden\":\"true\"}}),_vm._v(\" Написать \")],1),_c('b-button',{attrs:{\"variant\":\"danger\"},on:{\"click\":function () { return _vm.deleteData(_vm.selectedData.id); }}},[_vm._v(\"Удалить\")])],1),_c('div',{staticClass:\"mainInfo\"},[_c('div',{staticClass:\"photo\"},[_c('img',{attrs:{\"src\":_vm.selectedData.avatar}})]),_c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.selectedData.name))]),_c('div',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.age)+\" года, \"+_vm._s(_vm.selectedData.city))]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Пол:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.male))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Почта:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.email))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Телефон:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.phone))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Образование:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.education))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"HR-сотрудник:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.hrEmail))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Вакансия:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.vacation))])])])]),_c('div',{staticClass:\"user-about\"},[_vm._v(\" \"+_vm._s(_vm.selectedData.about)+\" \")])]):_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/empty.jpg\")}})])]),_c('div',{staticClass:\"add\"},[_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-1\",modifiers:{\"modal-1\":true}}],attrs:{\"variant\":\"success\"}},[_c('b-icon',{attrs:{\"icon\":\"plus-lg\"}})],1)],1),_c('b-modal',{attrs:{\"id\":\"modal-1\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('div',{staticClass:\"head\"},[_c('h5',[_vm._v(\"Создать нового кандидата\")])])]},proxy:true},{key:\"default\",fn:function(){return [_c('div',{staticClass:\"content\"},[_c('FileInput',{on:{\"change\":_vm.saveAvatar}}),_c('div',{staticClass:\"row\"},[_c('b-form-input',{staticStyle:{\"width\":\"355px\"},attrs:{\"placeholder\":\"ФИО кандидата\"},model:{value:(_vm.newUser.name),callback:function ($$v) {_vm.$set(_vm.newUser, \"name\", $$v)},expression:\"newUser.name\"}}),_c('b-form-select',{staticClass:\"form-control\",staticStyle:{\"width\":\"100px\"},attrs:{\"options\":_vm.optionsMale,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},model:{value:(_vm.newUser.male),callback:function ($$v) {_vm.$set(_vm.newUser, \"male\", $$v)},expression:\"newUser.male\"}})],1),_c('div',{staticClass:\"row\"},[_c('b-form-input',{attrs:{\"type\":\"number\",\"placeholder\":\"Возраст\"},model:{value:(_vm.newUser.age),callback:function ($$v) {_vm.$set(_vm.newUser, \"age\", $$v)},expression:\"newUser.age\"}}),_c('b-form-input',{attrs:{\"placeholder\":\"Город проживания\"},model:{value:(_vm.newUser.city),callback:function ($$v) {_vm.$set(_vm.newUser, \"city\", $$v)},expression:\"newUser.city\"}})],1),_c('div',{staticClass:\"row\"},[_c('b-form-input',{attrs:{\"type\":\"email\",\"placeholder\":\"Почта\"},model:{value:(_vm.newUser.email),callback:function ($$v) {_vm.$set(_vm.newUser, \"email\", $$v)},expression:\"newUser.email\"}}),_c('b-form-input',{attrs:{\"type\":\"tel\",\"placeholder\":\"Номер телефона\"},model:{value:(_vm.newUser.phone),callback:function ($$v) {_vm.$set(_vm.newUser, \"phone\", $$v)},expression:\"newUser.phone\"}})],1),_c('b-form-input',{attrs:{\"placeholder\":\"Образование\"},model:{value:(_vm.newUser.education),callback:function ($$v) {_vm.$set(_vm.newUser, \"education\", $$v)},expression:\"newUser.education\"}}),_c('b-form-input',{attrs:{\"placeholder\":\"О себе\"},model:{value:(_vm.newUser.about),callback:function ($$v) {_vm.$set(_vm.newUser, \"about\", $$v)},expression:\"newUser.about\"}}),_c('div',{staticClass:\"label\"},[_vm._v(\"Вакансия, на которую претендует кандидат\")]),_c('b-form-select',{staticClass:\"form-control\",attrs:{\"options\":_vm.jobList,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},model:{value:(_vm.newUser.vacation),callback:function ($$v) {_vm.$set(_vm.newUser, \"vacation\", $$v)},expression:\"newUser.vacation\"}})],1)]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function () { return _vm.saveData(ok); }}},[_vm._v(\" Сохранить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])}),_c('b-modal',{attrs:{\"id\":\"modal-2\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('div',{staticClass:\"head\"},[_c('h5',[_vm._v(\"Отправить письмо на почту\")])])]},proxy:true},{key:\"default\",fn:function(){return [_c('div',[_c('b-form-textarea',{attrs:{\"placeholder\":\"Введите сообщение\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.mailText),callback:function ($$v) {_vm.mailText=$$v},expression:\"mailText\"}}),_c('span',{staticStyle:{\"color\":\"#858585\"}},[_vm._v(\"Сообщение может попасть в спам!\")])],1)]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function () {_vm.sendMailTo(); ok()}}},[_vm._v(\" Отправить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('label',{attrs:{\"for\":_vm.fileKey,\"title\":\"Загрузить фотографию\"}},[_c('b-avatar',{staticClass:\"fileLabel\",attrs:{\"src\":_vm.avatar,\"size\":\"6rem\"}})],1),_c('input',{ref:_vm.fileKey,staticClass:\"fileInput\",attrs:{\"type\":\"file\",\"id\":_vm.fileKey,\"name\":_vm.fileKey},on:{\"change\":_vm.handlerInputFile}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <label :for=\"fileKey\" title=\"Загрузить фотографию\">\r\n      <b-avatar :src='avatar' class=\"fileLabel\" size=\"6rem\"></b-avatar>\r\n    </label>\r\n    <input\r\n      :ref=\"fileKey\"\r\n      type=\"file\"\r\n      :id=\"fileKey\"\r\n      :name=\"fileKey\"\r\n      class=\"fileInput\"\r\n      @change=\"handlerInputFile\"\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FileInput',\r\n\r\n  data: () => ({\r\n    fileKey: Math.random(),\r\n    avatar: 'photo.png'\r\n  }),\r\n\r\n  methods: {\r\n    handlerInputFile () {\r\n      const file = this.$refs[this.fileKey].files[0]\r\n\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onload = () => {\r\n        this.avatar = reader.result\r\n      }\r\n      this.$emit('change', file)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.fileInput {\r\n  display: none;\r\n}\r\n\r\n.fileLabel {\r\n  transition: .1s;\r\n  cursor: pointer;\r\n}\r\n\r\n.fileLabel:hover {\r\n  box-shadow: 2px 4px 19px 0 rgba(34, 60, 80, 0.2);\r\n  opacity: .8;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileInput.vue?vue&type=template&id=f9b355e8&scoped=true&\"\nimport script from \"./FileInput.vue?vue&type=script&lang=js&\"\nexport * from \"./FileInput.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FileInput.vue?vue&type=style&index=0&id=f9b355e8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f9b355e8\",\n  null\n  \n)\n\nexport default component.exports","export function sendEmail (text, email) {\r\n  const baseUrl = 'https://api.unisender.com/ru/api/sendEmail?format=json&api_key=61695smjxb8jcdcjeq3zu7prbzx55386xgtsanna'\r\n  const emailTo = 'email=' + email\r\n  const sender = 'sender_name=HuntFlow&sender_email=hantflow2022@gmail.com&subject=Sample+Subject'\r\n  const text2 = 'body=' + text\r\n  const url = baseUrl + '&' + emailTo + '&' + sender + '&' + text2 + '&list_id=1'\r\n  fetch(url)\r\n}\r\n\r\nexport function sendUpdatedStatus (id, email) {\r\n  const text = {\r\n    1: 'Вас внесли в систему в huntflow. Ваше резюме рассматривается руководством!',\r\n    2: 'Вам необходимо пройти тестирование! Результаты отправьте своему HR! Удачи! https://drive.google.com/file/d/1PXAdPQIqqam4RoMuiNQ9QDhpYKMqzp-T/view?usp=sharing',\r\n    3: 'Вы успешно прошли тестирование, в ближайшее время с Вами свяжется HR для индивидуального разговора!',\r\n    4: 'Вы успешно прошли предыдущие этапы. В ближайшее время у Вас будет собеседование с руководителем!',\r\n    5: 'Вы успешно прошли предыдущие этапы! Теперь вас проверяет отдел ИБ!',\r\n    6: 'Вы успешно прошли все предыдущие этапы! Теперь вам необходимо пройти мед. комиссию!',\r\n    7: 'Вы успешно прошли предыдущие этапы! С вами свяжется hr для выставления оффера!',\r\n    8: 'Вы приняты на работу! Поздравляем!',\r\n    9: 'К сожалению, наша компания не готова вас принять!'\r\n  }\r\n\r\n  sendEmail(text[id], email)\r\n}\r\n","<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"list\">\r\n      <b-form-input class=\"searchName\" v-model=\"searchUser\" placeholder=\"Поиск по имени\"></b-form-input>\r\n      <div style=\"position: relative\">\r\n        <b-form-select\r\n          class=\"form-control\"\r\n          style=\"width: 84%; margin: 8px\"\r\n          v-model=\"filterJob\"\r\n          :options=\"jobList\"\r\n          value-field=\"item\"\r\n          text-field=\"name\"\r\n          disabled-field=\"notEnabled\"\r\n        ></b-form-select>\r\n        <b-icon @click=\"() => filterJob = 0\" icon=\"x-square-fill\" variant=\"error\" style=\"fill: red; right: 20px; position: absolute; margin-top: -34px;\"></b-icon>\r\n      </div>\r\n      <div @click=\"() => setSelectedId(item.id)\" v-for=\"item in filteredList\" :key=\"item.id\" class=\"item\">\r\n        <b-avatar variant=\"info\" :src=\"item.avatar\"></b-avatar>\r\n        <div>{{item.name}}</div>\r\n        <div v-if=\"item.status === '8'\" class=\"success\"></div>\r\n        <div v-else-if=\"item.status === '9'\" class=\"fail\"></div>\r\n        <div v-else class=\"progress\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"data\">\r\n      <div v-if=\"selectedId\">\r\n        <div class=\"buttons\">\r\n          <b-form-select\r\n            class=\"form-control\"\r\n            style=\"width: 250px\"\r\n            v-model=\"selectedData.status\"\r\n            :options=\"statusOptions\"\r\n            @change=\"setStatus\"\r\n            value-field=\"item\"\r\n            text-field=\"name\"\r\n            disabled-field=\"notEnabled\"\r\n          ></b-form-select>\r\n          <b-button size=\"sm\"  v-b-modal.modal-2 variant=\"outline-primary\">\r\n            <b-icon icon=\"envelope\" aria-hidden=\"true\"></b-icon> Написать\r\n          </b-button>\r\n          <b-button variant=\"danger\" @click=\"() => deleteData(selectedData.id)\">Удалить</b-button>\r\n        </div>\r\n        <div class=\"mainInfo\">\r\n          <div class=\"photo\">\r\n            <img :src=\"selectedData.avatar\">\r\n          </div>\r\n          <div style=\"text-align: left\">\r\n            <div class=\"name\">{{selectedData.name}}</div>\r\n            <div class=\"age\">{{selectedData.age}} года, {{selectedData.city}}</div>\r\n            <div>\r\n              <span class=\"userLabel\">Пол:</span>\r\n              <span class=\"age\">{{selectedData.male}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">Почта:</span>\r\n              <span class=\"age\">{{selectedData.email}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">Телефон:</span>\r\n              <span class=\"age\">{{selectedData.phone}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">Образование:</span>\r\n              <span class=\"age\">{{selectedData.education}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">HR-сотрудник:</span>\r\n              <span class=\"age\">{{selectedData.hrEmail}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">Вакансия:</span>\r\n              <span class=\"age\">{{selectedData.vacation}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"user-about\">\r\n          {{selectedData.about}}\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <img src=\"../assets/empty.jpg\">\r\n      </div>\r\n    </div>\r\n    <div class=\"add\">\r\n      <b-button v-b-modal.modal-1 variant=\"success\">\r\n        <b-icon icon=\"plus-lg\"></b-icon>\r\n      </b-button>\r\n    </div>\r\n    <b-modal id=\"modal-1\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <div class=\"head\"><h5>Создать нового кандидата</h5></div>\r\n      </template>\r\n\r\n      <template #default>\r\n        <div class=\"content\">\r\n          <FileInput @change=\"saveAvatar\"/>\r\n          <div class=\"row\">\r\n            <b-form-input style=\"width: 355px\" v-model=\"newUser.name\" placeholder=\"ФИО кандидата\"></b-form-input>\r\n            <b-form-select\r\n              class=\"form-control\"\r\n              style=\"width: 100px\"\r\n              v-model=\"newUser.male\"\r\n              :options=\"optionsMale\"\r\n              value-field=\"item\"\r\n              text-field=\"name\"\r\n              disabled-field=\"notEnabled\"\r\n            ></b-form-select>\r\n          </div>\r\n          <div class=\"row\">\r\n            <b-form-input v-model=\"newUser.age\"  type=\"number\" placeholder=\"Возраст\"></b-form-input>\r\n            <b-form-input v-model=\"newUser.city\" placeholder=\"Город проживания\"></b-form-input>\r\n          </div>\r\n          <div class=\"row\">\r\n            <b-form-input v-model=\"newUser.email\" type=\"email\" placeholder=\"Почта\"></b-form-input>\r\n            <b-form-input v-model=\"newUser.phone\" type=\"tel\" placeholder=\"Номер телефона\"></b-form-input>\r\n          </div>\r\n          <b-form-input v-model=\"newUser.education\" placeholder=\"Образование\"></b-form-input>\r\n          <b-form-input v-model=\"newUser.about\" placeholder=\"О себе\"></b-form-input>\r\n          <div class=\"label\">Вакансия, на которую претендует кандидат</div>\r\n          <b-form-select\r\n            class=\"form-control\"\r\n            v-model=\"newUser.vacation\"\r\n            :options=\"jobList\"\r\n            value-field=\"item\"\r\n            text-field=\"name\"\r\n            disabled-field=\"notEnabled\"\r\n          ></b-form-select>\r\n        </div>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"() => saveData(ok)\">\r\n          Сохранить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal id=\"modal-2\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <div class=\"head\"><h5>Отправить письмо на почту</h5></div>\r\n      </template>\r\n\r\n      <template #default>\r\n        <div>\r\n          <b-form-textarea\r\n            v-model=\"mailText\"\r\n            placeholder=\"Введите сообщение\"\r\n            rows=\"3\"\r\n            max-rows=\"6\"\r\n          ></b-form-textarea>\r\n          <span style=\"color: #858585\">Сообщение может попасть в спам!</span>\r\n        </div>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"() => {sendMailTo(); ok()}\">\r\n          Отправить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDatabase, ref, child, get, set, update } from 'firebase/database'\r\nimport FileInput from '@/components/FileInput'\r\nimport { sendEmail, sendUpdatedStatus } from '@/helpers/sendEmail'\r\nexport default {\r\n  mounted () {\r\n    if (!this.$store.getters.getEmail) {\r\n      this.$router.push('/')\r\n    }\r\n    this.loadData()\r\n  },\r\n  components: {\r\n    FileInput\r\n  },\r\n  computed: {\r\n    filteredList () {\r\n      const filterName = this.searchUser\r\n        ? this.list.filter((item) => item.name.includes(this.searchUser))\r\n        : this.list\r\n      const filterJob = this.filterJob\r\n        ? filterName.filter((item) => item.vacation === this.filterJob)\r\n        : filterName\r\n      return filterJob\r\n    },\r\n    selectedData () {\r\n      return this.list.find((item) => item.id.toString() === this.selectedId.toString())\r\n    }\r\n  },\r\n  methods: {\r\n    setSelectedId (id) {\r\n      this.selectedId = id.toString()\r\n    },\r\n    sendMailTo () {\r\n      sendEmail(this.mailText, this.selectedData.email)\r\n    },\r\n    setStatus () {\r\n      sendUpdatedStatus(this.selectedData.status, this.selectedData.email)\r\n      const db = getDatabase()\r\n      update(ref(db, 'candidates/' + this.selectedData.id), {\r\n        ...this.selectedData\r\n      })\r\n    },\r\n    async deleteData (id) {\r\n      const db = getDatabase()\r\n      await set(ref(db, 'candidates/' + id), null)\r\n      this.selectedId = 0\r\n      this.loadData()\r\n    },\r\n    loadData () {\r\n      const dbRef = ref(getDatabase())\r\n      get(child(dbRef, 'candidates')).then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          const data = Object.values(snapshot.val())\r\n          this.list = data || []\r\n        } else {\r\n          console.log('No data available')\r\n        }\r\n      }).catch((error) => {\r\n        console.error(error)\r\n      })\r\n      get(child(dbRef, 'vacancies')).then((snapshot) => {\r\n        const data = Object.values(snapshot.val()).map((item) => ({\r\n          item: item.title,\r\n          name: item.title\r\n        }))\r\n        this.jobList = data || []\r\n      })\r\n    },\r\n    saveData (func) {\r\n      const db = getDatabase()\r\n      const id = Number(new Date())\r\n      set(ref(db, 'candidates/' + id), {\r\n        id: id,\r\n        ...this.newUser,\r\n        hrEmail: this.$store.getters.getEmail\r\n      })\r\n      func()\r\n      this.clearData()\r\n      this.loadData()\r\n    },\r\n    saveAvatar (file) {\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onload = () => {\r\n        this.newUser.avatar = reader.result\r\n      }\r\n    },\r\n    clearData () {\r\n      this.newUser = {\r\n        avatar: undefined,\r\n        name: '',\r\n        email: '',\r\n        male: '',\r\n        age: '',\r\n        city: '',\r\n        phone: '',\r\n        education: '',\r\n        about: '',\r\n        hrEmail: '',\r\n        status: '',\r\n        vacation: ''\r\n      }\r\n    }\r\n  },\r\n  data: () => ({\r\n    list: [],\r\n    jobList: [],\r\n    searchUser: '',\r\n    filterJob: '',\r\n    selectedId: 0,\r\n    optionsMale: [\r\n      { item: 'Мужской', name: 'Мужской' },\r\n      { item: 'Женский', name: 'Женский' }\r\n    ],\r\n    statusOptions: [\r\n      { item: '1', name: 'Откликнулся' },\r\n      { item: '2', name: 'Тестирование' },\r\n      { item: '3', name: 'Интерьвю с HR' },\r\n      { item: '4', name: 'Интерьвю с руководителем' },\r\n      { item: '5', name: 'Проверка ИБ' },\r\n      { item: '6', name: 'Мед. комиисия' },\r\n      { item: '7', name: 'Выставление оффера' },\r\n      { item: '8', name: 'Принят' },\r\n      { item: '9', name: 'Отклонен' }\r\n    ],\r\n    newUser: {\r\n      avatar: undefined,\r\n      name: '',\r\n      email: '',\r\n      male: '',\r\n      age: '',\r\n      city: '',\r\n      phone: '',\r\n      education: '',\r\n      about: '',\r\n      hrEmail: '',\r\n      status: 1,\r\n      vacation: ''\r\n    },\r\n    mailText: ''\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n}\r\n\r\n.list {\r\n  height: calc(100vh - 100px);\r\n  width: 30%;\r\n  overflow: auto;\r\n  box-shadow: 6px 1px 13px -3px rgba(34, 60, 80, 0.17);\r\n}\r\n\r\n.data {\r\n  height: calc(100vh - 100px);\r\n  padding: 20px;\r\n  overflow: auto;\r\n  width: 100%;\r\n}\r\n\r\n.item {\r\n  position: relative;\r\n  display: flex;\r\n  font-size: 13px;\r\n  padding: 5px;\r\n  font-weight: bolder;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  gap: 16px;\r\n  border-bottom: 1px solid #c1c1c1;\r\n  transition: .1s;\r\n}\r\n\r\n.item:hover {\r\n  background-color: #faeaff;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 20px;\r\n}\r\n\r\n.add {\r\n  position: absolute;\r\n  bottom: 30px;\r\n  right: 30px;\r\n}\r\n\r\n.avatar img {\r\n  width: 100px;\r\n}\r\n\r\n.content {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.head {\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  gap: 8px;\r\n  width: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  flex-direction: row;\r\n}\r\n\r\n.row input {\r\n  width: 49%;\r\n}\r\n\r\n.form-control {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.375rem 0.75rem;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  color: #212529;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid #ced4da;\r\n  appearance: none;\r\n  border-radius: 0.25rem;\r\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n\r\n.mainInfo {\r\n  display: flex;\r\n  gap: 50px;\r\n}\r\n\r\n.photo {\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n}\r\n.photo img {\r\n  width: 100%;\r\n}\r\n\r\n.name {\r\n  text-align: left;\r\n  font-size: 30px;\r\n  font-weight: bolder;\r\n}\r\n\r\n.age {\r\n  text-align: left;\r\n  color: #858585;\r\n}\r\n\r\n.userLabel {\r\n  font-weight: bolder;\r\n  margin-right: 8px;\r\n}\r\n\r\n.user-about {\r\n  text-align: left;\r\n  margin-top: 16px;\r\n  color: #858585;\r\n}\r\n\r\n.searchName {\r\n  margin: 8px;\r\n  width: 95%;\r\n}\r\n\r\n.success {\r\n  width: 4px;\r\n  height: 50px;\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #198754;\r\n}\r\n\r\n.fail {\r\n  width: 4px;\r\n  height: 50px;\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #dc3545;\r\n}\r\n\r\n.progress {\r\n  width: 4px;\r\n  height: 50px;\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #858585;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Users.vue?vue&type=template&id=3c5b6a14&scoped=true&\"\nimport script from \"./Users.vue?vue&type=script&lang=js&\"\nexport * from \"./Users.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Users.vue?vue&type=style&index=0&id=3c5b6a14&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3c5b6a14\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}