{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.regexp.test.js","webpack:///./src/components/Login.vue?a020","webpack:///./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./src/components/FileInput-2.vue?4ac5","webpack:///./node_modules/core-js/internals/array-species-constructor.js","webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./node_modules/core-js/internals/regexp-unsupported-ncg.js","webpack:///./src/components/Signup.vue?6032","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./src/views/Home.vue?e275","webpack:///./node_modules/core-js/internals/native-symbol-registry.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./src/assets/empty.jpg","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/core-js/modules/es.string.match.js","webpack:///./node_modules/core-js/internals/array-slice-simple.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./node_modules/@firebase/database/dist/index.esm2017.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./src/views/Vacants.vue?5e68","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/core-js/internals/symbol-define-to-primitive.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-symbols.js","webpack:///./src/views/Users.vue?bed2","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./src/views/Vacants.vue?6fbc","webpack:///src/views/Vacants.vue","webpack:///./src/views/Vacants.vue?0028","webpack:///./src/views/Vacants.vue","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/core-js/internals/define-well-known-symbol.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/regexp-get-flags.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.symbol.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/downloadjs/download.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/modules/es.symbol.for.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./src/views/Home.vue?2ebc","webpack:///./src/components/Login.vue?f597","webpack:///src/components/Login.vue","webpack:///./src/components/Login.vue?c847","webpack:///./src/components/Login.vue","webpack:///./src/components/Signup.vue?9a01","webpack:///src/components/Signup.vue","webpack:///./src/components/Signup.vue?c2ad","webpack:///./src/components/Signup.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?73d4","webpack:///./src/views/Home.vue","webpack:///./node_modules/core-js/modules/es.symbol.key-for.js","webpack:///./src/components/FileInput.vue?0b1e","webpack:///./node_modules/core-js/modules/es.array.includes.js","webpack:///./src/assets/login.jpg","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/modules/es.symbol.constructor.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptors.js","webpack:///./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/modules/es.json.stringify.js","webpack:///./src/views/Users.vue?cd6a","webpack:///./src/components/FileInput.vue?1b2f","webpack:///src/components/FileInput.vue","webpack:///./src/components/FileInput.vue?9fe6","webpack:///./src/components/FileInput.vue","webpack:///./src/components/FileInput-2.vue?537d","webpack:///src/components/FileInput-2.vue","webpack:///./src/components/FileInput-2.vue?b356","webpack:///./src/components/FileInput-2.vue","webpack:///./src/helpers/sendEmail.js","webpack:///src/views/Users.vue","webpack:///./src/views/Users.vue?52be","webpack:///./src/views/Users.vue","webpack:///./node_modules/core-js/modules/es.array.slice.js","webpack:///./node_modules/core-js/internals/regexp-unsupported-dot-all.js"],"names":["$","global","call","uncurryThis","isCallable","isObject","DELEGATES_TO_EXEC","execCalled","re","exec","apply","this","arguments","test","Error","un$Test","target","proto","forced","str","result","classof","toIndexedObject","$getOwnPropertyNames","f","arraySlice","windowNames","window","Object","getOwnPropertyNames","getWindowNames","it","error","module","exports","$values","values","stat","O","isArray","isConstructor","wellKnownSymbol","SPECIES","Array","originalArray","C","constructor","prototype","undefined","toObject","floor","Math","charAt","replace","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","matched","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","match","ch","capture","n","fails","$RegExp","RegExp","groups","a","anObject","regexpExec","TypeError","R","S","DOMIterables","DOMTokenListPrototype","forEach","createNonEnumerableProperty","handlePrototype","CollectionPrototype","COLLECTION_NAME","$forEach","arrayMethodIsStrict","STRICT_METHOD","callbackfn","V8_VERSION","METHOD_NAME","array","foo","Boolean","notARegExp","requireObjectCoercible","toString","correctIsRegExpLogic","stringIndexOf","indexOf","includes","searchString","PROPER_FUNCTION_NAME","PROPER","redefine","$toString","getRegExpFlags","TO_STRING","RegExpPrototype","n$ToString","NOT_GENERIC","source","flags","INCORRECT_NAME","name","pattern","unsafe","NATIVE_SYMBOL","Symbol","keyFor","valueOf","MATCH","isRegExp","fixRegExpWellKnownSymbolLogic","toLength","getMethod","advanceStringIndex","regExpExec","nativeMatch","maybeCallNative","regexp","matcher","string","rx","res","done","value","fullUnicode","unicode","lastIndex","A","matchStr","toAbsoluteIndex","lengthOfArrayLike","createProperty","max","start","end","k","fin","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","version","SDK_VERSION","setSDKVersion","DOMStorageWrapper","domStorage_","prefix_","key","removeItem","prefixedName_","setItem","storedVal","getItem","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","id","sha1","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","message","i","arg","logger","firstLog_","enableLogging$1","logger_","persistent","logLevel","VERBOSE","log","bind","set","remove","get","logWrapper","prefix","fatal","warn","warnIfPageIsSecure","location","protocol","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called","wrappedFn","body","setTimeout","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","href","isWindowsStoreApp","Windows","UI","INTEGER_REGEXP_","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getImmediate","optional","then","forceRefresh","getToken","Promise","resolve","reject","listener","_a","addTokenListener","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","code","addAuthTokenListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","newHost","isCacheableHost","toURLString","query","repoInfoNeedsQueryParam","repoInfo","isCustomHost","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","counters_","amount","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","responseNum","callback","requestNum","toProcess","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","closeAfter","pN","handleResponse","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow_","forceDisallow_","createElement","close","myDisconnFrame","removeChild","shutdown_","dataStr","incrementCounter","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","open","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript","async","onload","onreadystatechange","rstate","parentNode","onerror","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","parseFloat","fullMess","jsonMess","frameCount","isNaN","handleNewFrameCount_","mess","resetKeepAlive","appendFrame_","remainingData","extractFrameCount_","sendString_","String","clearInterval","setInterval","send","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","transport","ALL_TRANSPORTS","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","markConnectionHealthy","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","msg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","closeConnections_","reason","ServerActions","pathString","onComplete","hash","token","stats","EventEmitter","allowedEvents_","listeners_","eventType","listeners","context","validateEventType_","eventData","getInitialEvent","splice","find","et","OnlineMonitor","super","online_","trigger","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","getInstance","on","onVisible_","onOnline_","action","onResponse","curReqNum","r","sendRequest","initConnection_","deferred","request","p","_path","q","_queryObject","outstandingGet","index","sendGet_","promise","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","tryAppCheck","authMethod","requestData","cred","onAuthRevoked_","onAppCheckRevoked_","listen","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","scheduleConnect_","online","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onRealtimeDisconnect_","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","all","interrupt","delta","serverTimeOffset","put","map","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","queries","clientName","reportStats","currentlyOnline","NamedNode","node","Index","compare","oldNode","newNode","oldWrapped","newWrapped","MIN","__EMPTY_NODE","KeyIndex","val","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","isEmpty","LLRBNode","color","RED","SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","maxKey","copy","insert","fixUp_","isRed_","moveRedLeft_","removeMin_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","rightParent","minKey","resultGenerator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","setMaxNode$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","LeafNode","value_","priorityNode_","lazyHash_","newPriorityNode","childName","childNode","newChildNode","updatePriority","updateImmediateChild","front","updateChild","exportFormat","getValue","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","setNodeFromJSON","setMaxNode","PriorityIndex","aPriority","bPriority","indexCmp","compareTo","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","nextBitIsOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","indexDefinition","existingChildren","sawIndexedValue","iter","getIterator","Wrap","newIndex","next","getNext","isDefinedOn","getCompare","indexName","newIndexSet","assign","newIndexes","indexedChildren","existingSnap","newChildren","ChildrenNode","children_","indexMap_","Default","getImmediateChild","getChild","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","childHash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","iterator","peek","getReverseIteratorFrom","maxPost","endPost","MAX_NODE","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON","json","jsonLeaf","childData","children","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","PathIndex","indexPath_","snap","aChild","extractChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","lastPushTime","lastRandChars","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","isIndexed","oldChild","hasChild","trackChildChange","withIndex","newSnap","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","updateFullNode","hasStart","startName","getIndexStartName","makePost","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","numChildren","getIndexedFilter","fullLimitUpdateChild_","hasNext","inRange","getReverseIterator","indexCompare","foundStartPost","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","getFirstChild","getLastChild","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","queryParamsGetNodeFilter","queryParams","hasLimit","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","tree","StatsListener","collection_","last_","newStats","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","subtree","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","indexedValueChanged","eventGeneratorGenerateEventsForType","registrations","filteredChanges","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","getPredecessorChildName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","getNode","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","childPath","relativePath","predicate","childExistingPathAndValue","findRootMostMatchingPathAndValue","fullPath","toSet","newTree","setTree","fold_","pathSoFar","accum","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach_","CompoundWrite","writeTree_","compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","empty","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","mergeAtPath","layeredCache","subMerge","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","from","NoCompleteChildSource_","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","isFiltered","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorRevertUserWrite","viewProcessorAckUserWrite","LISTEN_COMPLETE","viewProcessorListenComplete","getChanges","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","filtersNodes","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","isCompleteForPath","getCompleteChild","newEventSnap","viewProcessorCacheHasChild","curViewCache","foreach","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteNode","view","viewGetCompleteServerCache","cache","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistration","referenceConstructor$1","referenceConstructor","SyncPoint","views","syncPointSetReferenceConstructor","syncPointApplyOperation","syncPoint","optCompleteServerCache","concat","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointGetCompleteServerCache","syncTreeSetReferenceConstructor","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","fromObject","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyTaggedQueryOverwrite","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedQueryMerge","syncTreeCalcCompleteEventCache","includeHiddenSets","findOnPath","syncTreeGetServerValue","foreachOnPath","pathToSyncPoint","sp","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","childWritesCache","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","existing","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue","hasActualChild","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePathString","argumentName","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","addTokenChangeListener","refreshAuthToken","refreshAppCheckToken","statsReporter_","infoData_","infoSyncTree_","startListening","infoEvents","stopListening","repoUpdateInfo","serverSyncTree_","unlisten","repoServerTime","offsetNode","offset","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoRunOnDisconnectEvents","updateSnapshot","repoGetNextWriteId","repoGetValue","cached","err","repoLog","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","resolvedOnDisconnectTree","resolved","repoInterrupt","toUpperCase","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","transaction","repoSendTransactionQueue","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","currentNode","currentInputSnapshot","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","applyLocally","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","QueryImpl","_repo","_orderByCalled","ReferenceImpl","sameRepo","samePath","sameQueryIdentifier","parentPath","ref","DataSnapshot","_node","_index","childRef","exportVal","db","_checkNotDeleted","_root","wrapCallback","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","Database","repoManagerDeleteRepo","appName","appRepos","_repoInternal","_instanceStarted","_rootInternal","apiName","getDatabase","identifier","registerDatabase","variant","container","instanceIdentifier","getProvider","setMultipleInstances","simpleListen","echo","onEcho","toIntegerOrInfinity","getSubstitution","REPLACE","maybeToString","REPLACE_KEEPS_$0","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","_","nativeReplace","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","functionalReplace","accumulatedResult","nextSourcePosition","replacerArgs","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","getBuiltIn","SymbolPrototype","TO_PRIMITIVE","hint","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","trim","getOwnPropertySymbolsModule","FORCED","$getOwnPropertySymbols","arraySpeciesConstructor","render","_vm","_h","$createElement","_c","_self","staticClass","_l","item","setSelectedId","_v","_s","title","attrs","deleteData","selectedData","caption","responsibilities","expectations","benefits","directives","rawName","modifiers","scopedSlots","_u","model","newVacantion","$$v","$set","expression","ok","cancel","saveData","$event","staticRenderFns","mounted","$store","getters","getEmail","$router","loadData","computed","list","methods","selectedId","snapshot","exists","clearData","component","DESCRIPTORS","objectKeys","$propertyIsEnumerable","propertyIsEnumerable","TO_ENTRIES","entries","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","hasOwn","wrappedWellKnownSymbolModule","NAME","$find","addToUnscopables","FIND","SKIPS_HOLES","toPropertyKey","definePropertyModule","createPropertyDescriptor","propertyKey","isPrototypeOf","regExpFlags","regexpFlags","stickyHelpers","shared","create","getInternalState","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","nativeExec","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","group","state","sticky","charsAdded","strCopy","multiline","input","MISSED_STICKY","IndexedObject","un$Join","ES3_STRINGS","separator","argument","method","isForced","inheritIfRequired","isSymbol","toPrimitive","thisNumberValue","NUMBER","NativeNumber","NumberPrototype","charCodeAt","toNumeric","primValue","toNumber","first","third","radix","maxCode","digits","NaN","NumberWrapper","error1","error2","that","hasIndices","ignoreCase","dotAll","factory","download","strFileName","strMimeType","blob","reader","defaultMime","mimeType","anchor","myBlob","Blob","MozBlob","WebKitBlob","fileName","ajax","responseType","msSaveBlob","dataUrlToBlob","saver","tempUiArr","Uint8Array","mx","strUrl","parts","decoder","atob","binData","uiArr","winMode","setAttribute","className","click","URL","revokeObjectURL","confirm","createObjectURL","btoa","y","FileReader","readAsDataURL","FUNCTION_NAME_EXISTS","EXISTS","FunctionPrototype","Function","functionToString","nameRE","NATIVE_SYMBOL_REGISTRY","StringToSymbolRegistry","SymbolToStringRegistry","symbol","nativeKeys","FAILS_ON_PRIMITIVES","arraySpeciesCreate","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","specificCreate","boundFunction","some","filterReject","_m","toggleShowLogin","this$1","email","login","$emit","isError","props","formData","password2","signup","showAlert","components","Login","Signup","isShowLogin","tryToString","$includes","el","KEY","SHAM","SYMBOL","DELEGATES_TO_SYMBOL","uncurriedNativeRegExpMethod","nativeMethod","forceStringMethod","uncurriedNativeMethod","$exec","$map","IS_PURE","nativeObjectCreate","getOwnPropertyNamesModule","getOwnPropertyNamesExternal","getOwnPropertyDescriptorModule","definePropertiesModule","propertyIsEnumerableModule","sharedKey","hiddenKeys","uid","defineWellKnownSymbol","defineSymbolToPrimitive","setToStringTag","InternalStateModule","HIDDEN","PROTOTYPE","setInternalState","getterFor","ObjectPrototype","$Symbol","QObject","nativeGetOwnPropertyDescriptor","nativeDefineProperty","nativeGetOwnPropertyNames","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","WellKnownSymbolsStore","USE_SETTER","findChild","setSymbolDescriptor","P","Attributes","ObjectPrototypeDescriptor","wrap","description","$defineProperty","$defineProperties","Properties","properties","$create","V","$getOwnPropertyDescriptor","descriptor","names","IS_OBJECT_PROTOTYPE","setter","sham","useSetter","useSimple","$stringify","numberToString","tester","hi","WRONG_SYMBOLS_CONVERSION","ILL_FORMED_UNICODE","stringifyWithSymbolsFix","$replacer","fixIllFormed","prev","space","searchUser","staticStyle","jobList","filterJob","statusOptions","filterStatus","avatar","downloadResume","age","city","male","phone","education","hrEmail","vacation","about","saveAvatar","saveResume","newUser","optionsMale","mailText","sendMailTo","setStatus","updateData","saveTest","downloadTest","_e","fileKey","handlerInputFile","file","sendEmail","text","baseUrl","emailTo","sender","text2","fetch","sendUpdatedStatus","1","2","3","4","5","6","7","8","9","FileInput","FileInputTwo","filteredList","filterName","filteredStatus","reader2","autoInputData","autoMail","autoPhone","comment","resume","un$Slice","Constructor"],"mappings":"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","file":"js/about.ddddf423.js","sourcesContent":["'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar DELEGATES_TO_EXEC = function () {\n  var execCalled = false;\n  var re = /[ac]/;\n  re.exec = function () {\n    execCalled = true;\n    return /./.exec.apply(this, arguments);\n  };\n  return re.test('abc') === true && execCalled;\n}();\n\nvar Error = global.Error;\nvar un$Test = uncurryThis(/./.test);\n\n// `RegExp.prototype.test` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.test\n$({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {\n  test: function (str) {\n    var exec = this.exec;\n    if (!isCallable(exec)) return un$Test(this, str);\n    var result = call(exec, this, str);\n    if (result !== null && !isObject(result)) {\n      throw new Error('RegExp exec method returned something other than an Object or null');\n    }\n    return !!result;\n  }\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=style&index=0&id=0678ed4f&scoped=true&lang=css&\"","/* eslint-disable es-x/no-object-getownpropertynames -- safe */\nvar classof = require('../internals/classof-raw');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar arraySlice = require('../internals/array-slice-simple');\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return arraySlice(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && classof(it) == 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput-2.vue?vue&type=style&index=0&id=07114e76&scoped=true&lang=css&\"","var global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('(?<a>b)', 'g');\n  return re.exec('b').groups.a !== 'b' ||\n    'b'.replace(re, '$<a>c') !== 'bc';\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signup.vue?vue&type=style&index=0&id=4073be30&scoped=true&lang=css&\"","var global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar regexpExec = require('../internals/regexp-exec');\n\nvar TypeError = global.TypeError;\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (isCallable(exec)) {\n    var result = call(exec, R, S);\n    if (result !== null) anObject(result);\n    return result;\n  }\n  if (classof(R) === 'RegExp') return call(regexpExec, R, S);\n  throw TypeError('RegExp#exec called on incompatible receiver');\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es-x/no-array-prototype-foreach -- safe\n} : [].forEach;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","'use strict';\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar n$ToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var pattern = $toString(R.source);\n    var flags = $toString(getRegExpFlags(R));\n    return '/' + pattern + '/' + flags;\n  }, { unsafe: true });\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=409c4974&scoped=true&lang=css&\"","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\n/* eslint-disable es-x/no-symbol -- safe */\nmodule.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;\n","var uncurryThis = require('../internals/function-uncurry-this');\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = uncurryThis(1.0.valueOf);\n","module.exports = __webpack_public_path__ + \"img/empty.bffdac8c.jpg\";","var global = require('../internals/global');\n\nmodule.exports = global;\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar getMethod = require('../internals/get-method');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);\n      return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","var global = require('../internals/global');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar Array = global.Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import { getApp, _getProvider, SDK_VERSION as SDK_VERSION$1, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nconst name = \"@firebase/database\";\nconst version = \"0.12.8\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nlet SDK_VERSION = '';\r\n/**\r\n * SDK_VERSION should be set before any database instance is created\r\n * @internal\r\n */\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nclass DOMStorageWrapper {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    constructor(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    set(key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    }\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    get(key) {\r\n        const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    }\r\n    remove(key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    }\r\n    prefixedName_(name) {\r\n        return this.prefix_ + name;\r\n    }\r\n    toString() {\r\n        return this.domStorage_.toString();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    set(key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    }\r\n    get(key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    }\r\n    remove(key) {\r\n        delete this.cache_[key];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nconst createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            const domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nconst PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nconst SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nconst LUIDGenerator = (function () {\r\n    let id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nconst sha1 = function (str) {\r\n    const utf8Bytes = stringToByteArray(str);\r\n    const sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    const sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nconst buildLogMessage_ = function (...varArgs) {\r\n    let message = '';\r\n    for (let i = 0; i < varArgs.length; i++) {\r\n        const arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nlet logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nlet firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nconst enableLogging$1 = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nconst log = function (...varArgs) {\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging$1(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        const message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nconst logWrapper = function (prefix) {\r\n    return function (...varArgs) {\r\n        log(prefix, ...varArgs);\r\n    };\r\n};\r\nconst error = function (...varArgs) {\r\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\r\n    logClient.error(message);\r\n};\r\nconst fatal = function (...varArgs) {\r\n    const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nconst warn = function (...varArgs) {\r\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nconst warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nconst isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nconst executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        let called = false;\r\n        const wrappedFn = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called) {\r\n                called = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', () => {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nconst MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nconst MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nconst nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nconst stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nconst requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nconst ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    const keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (const k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    let key = '{';\r\n    for (let i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nconst splitStringBySize = function (str, segsize) {\r\n    const len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    const dataSegs = [];\r\n    for (let c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nconst doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    const ebits = 11, fbits = 52;\r\n    const bias = (1 << (ebits - 1)) - 1;\r\n    let s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    const bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    const str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    let hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nconst isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nconst isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    let reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    const error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nconst INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nconst tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        const intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nconst exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(() => {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            const stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nconst beingCrawled = function () {\r\n    const userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nconst setTimeoutNonBlocking = function (fn, time) {\r\n    const timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nclass AppCheckTokenProvider {\r\n    constructor(appName_, appCheckProvider) {\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(appCheck => (this.appCheck = appCheck));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.appCheck) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.appCheck) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(appCheck => appCheck.addTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        warn(`Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nclass FirebaseAuthTokenProvider {\r\n    constructor(appName_, firebaseOptions_, authProvider_) {\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(auth => (this.auth_ = auth));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.auth_) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.auth_) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(error => {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(auth => auth.addAuthTokenListener(listener));\r\n        }\r\n    }\r\n    removeTokenChangeListener(listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(auth => auth.removeAuthTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        let errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    }\r\n}\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nclass EmulatorTokenProvider {\r\n    constructor(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    getToken(forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    }\r\n    removeTokenChangeListener(listener) { }\r\n    notifyForInvalidToken() { }\r\n}\r\n/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\nEmulatorTokenProvider.OWNER = 'owner';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PROTOCOL_VERSION = '5';\r\nconst VERSION_PARAM = 'v';\r\nconst TRANSPORT_SESSION_PARAM = 's';\r\nconst REFERER_PARAM = 'r';\r\nconst FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nconst FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nconst LAST_SESSION_PARAM = 'ls';\r\nconst APPLICATION_ID_PARAM = 'p';\r\nconst APP_CHECK_TOKEN_PARAM = 'ac';\r\nconst WEBSOCKET = 'websocket';\r\nconst LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nclass RepoInfo {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    constructor(host, secure, namespace, webSocketOnly, nodeAdmin = false, persistenceKey = '', includeNamespaceInQueryParams = false) {\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    isCacheableHost() {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    }\r\n    isCustomHost() {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    }\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this._host, this.internalHost);\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        let str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    }\r\n    toURLString() {\r\n        const protocol = this.secure ? 'https://' : 'http://';\r\n        const query = this.includeNamespaceInQueryParams\r\n            ? `?ns=${this.namespace}`\r\n            : '';\r\n        return `${protocol}${this.host}/${query}`;\r\n    }\r\n}\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    let connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    const pairs = [];\r\n    each(params, (key, value) => {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nclass StatsCollection {\r\n    constructor() {\r\n        this.counters_ = {};\r\n    }\r\n    incrementCounter(name, amount = 1) {\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    }\r\n    get() {\r\n        return deepCopy(this.counters_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst collections = {};\r\nconst reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    const hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    const hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nclass PacketReceiver {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    constructor(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    closeAfter(responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    }\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    handleResponse(requestNum, data) {\r\n        this.pendingResponses[requestNum] = data;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            const toProcess = this.pendingResponses[this.currentResponseNum];\r\n            delete this.pendingResponses[this.currentResponseNum];\r\n            for (let i = 0; i < toProcess.length; ++i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(() => {\r\n                        this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            }\r\n            if (this.currentResponseNum === this.closeAfterResponse) {\r\n                if (this.onClose) {\r\n                    this.onClose();\r\n                    this.onClose = null;\r\n                }\r\n                break;\r\n            }\r\n            this.currentResponseNum++;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nconst FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nconst FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nconst FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nconst FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nconst FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nconst FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nconst FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nconst FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nconst FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nconst FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nconst FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nconst FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nconst MAX_URL_DATA_SIZE = 1870;\r\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nconst LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nclass BrowserPollConnection {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = (params) => {\r\n            // Always add the token if we have one.\r\n            if (this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(() => {\r\n            this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            this.onClosed_();\r\n            this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(() => {\r\n            if (this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            this.scriptTagHolder = new FirebaseIFrameScriptHolder((...args) => {\r\n                const [command, arg1, arg2, arg3, arg4] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                if (!this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (this.connectTimeoutTimer_) {\r\n                    clearTimeout(this.connectTimeoutTimer_);\r\n                    this.connectTimeoutTimer_ = null;\r\n                }\r\n                this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    this.id = arg1;\r\n                    this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        this.myPacketOrderer.closeAfter(arg1, () => {\r\n                            this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, (...args) => {\r\n                const [pN, data] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                this.myPacketOrderer.handleResponse(pN, data);\r\n            }, () => {\r\n                this.onClosed_();\r\n            }, this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\r\n                    this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\r\n            }\r\n            if (this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\r\n            }\r\n            if (this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = this.applicationId;\r\n            }\r\n            if (this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            const connectURL = this.urlFn(urlParams);\r\n            this.log_('Connecting via long-poll to ' + connectURL);\r\n            this.scriptTagHolder.addTag(connectURL, () => {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    start() {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    }\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    static forceAllow() {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    }\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    static forceDisallow() {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    }\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    static isAvailable() {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    }\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    markConnectionHealthy() { }\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    }\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    send(data) {\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        const base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    }\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    addDisconnectPingFrame(id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        const urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    }\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    incrementIncomingBytes_(args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        const bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    }\r\n}\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nclass FirebaseIFrameScriptHolder {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    constructor(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\r\n                onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            let script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                const currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            const iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    static createIFrame_() {\r\n        const iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                const a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                const domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    }\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    close() {\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(() => {\r\n                if (this.myIFrame !== null) {\r\n                    document.body.removeChild(this.myIFrame);\r\n                    this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        const onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    startLongPoll(id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    }\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    newRequest_() {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            let theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            let curDataString = '';\r\n            let i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                const nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    const theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    enqueueSegment(segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    }\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    addLongPollTag_(url, serial) {\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        const doNewRequest = () => {\r\n            this.outstandingRequests.delete(serial);\r\n            this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        const keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        const readyStateCB = () => {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    }\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    addTag(url, loadCB) {\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    const newScript = this.myIFrame.doc.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n                    newScript.async = true;\r\n                    newScript.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript.onload = newScript.onreadystatechange =\r\n                        function () {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            const rstate = newScript.readyState;\r\n                            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                newScript.onload = newScript.onreadystatechange = null;\r\n                                if (newScript.parentNode) {\r\n                                    newScript.parentNode.removeChild(newScript);\r\n                                }\r\n                                loadCB();\r\n                            }\r\n                        };\r\n                    newScript.onerror = () => {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        this.sendNewPolls = false;\r\n                        this.close();\r\n                    };\r\n                    this.myIFrame.doc.body.appendChild(newScript);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nlet WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nclass WebSocketConnection {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    static connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken) {\r\n        const urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                const device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                const options = {\r\n                    headers: {\r\n                        'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = `Bearer ${this.authToken}`;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                const env = process['env'];\r\n                const proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                const options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || '',\r\n                        'X-Firebase-AppCheck': this.appCheckToken || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = () => {\r\n            this.log_('Websocket connected.');\r\n            this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = () => {\r\n            this.log_('Websocket connection was disconnected.');\r\n            this.mySock = null;\r\n            this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = m => {\r\n            this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = e => {\r\n            this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n        };\r\n    }\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    start() { }\r\n    static forceDisallow() {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    }\r\n    static isAvailable() {\r\n        let isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    }\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    static previouslyFailed() {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    }\r\n    markConnectionHealthy() {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    }\r\n    appendFrame_(data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            const fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            const jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    }\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    handleNewFrameCount_(frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    }\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    extractFrameCount_(data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            const frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    }\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    handleIncomingFrame(mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        const data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            const remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    send(data) {\r\n        this.resetKeepAlive();\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    }\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    }\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    resetKeepAlive() {\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(() => {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (this.mySock) {\r\n                this.sendString_('0');\r\n            }\r\n            this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    }\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    sendString_(str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Number of response before we consider the connection \"healthy.\"\r\n */\r\nWebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n/**\r\n * Time to wait for the connection te become healthy before giving up.\r\n */\r\nWebSocketConnection.healthyTimeout = 30000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nclass TransportManager {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    constructor(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    static get ALL_TRANSPORTS() {\r\n        return [BrowserPollConnection, WebSocketConnection];\r\n    }\r\n    initTransports_(repoInfo) {\r\n        const isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        let isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            const transports = (this.transports_ = []);\r\n            for (const transport of TransportManager.ALL_TRANSPORTS) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports.push(transport);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    initialTransport() {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    upgradeTransport() {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nconst UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nconst MESSAGE_TYPE = 't';\r\nconst MESSAGE_DATA = 'd';\r\nconst CONTROL_SHUTDOWN = 's';\r\nconst CONTROL_RESET = 'r';\r\nconst CONTROL_ERROR = 'e';\r\nconst CONTROL_PONG = 'o';\r\nconst SWITCH_ACK = 'a';\r\nconst END_TRANSMISSION = 'n';\r\nconst PING = 'p';\r\nconst SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nclass Connection {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    constructor(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    start_() {\r\n        const conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessageReceived = this.connReceiver_(this.conn_);\r\n        const onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(() => {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        const healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(() => {\r\n                this.healthyTimeout_ = null;\r\n                if (!this.isHealthy_) {\r\n                    if (this.conn_ &&\r\n                        this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        this.isHealthy_ = true;\r\n                        this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (this.conn_ &&\r\n                        this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        this.log_('Closing unhealthy connection after timeout.');\r\n                        this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    }\r\n    nextTransportId_() {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    }\r\n    disconnReceiver_(conn) {\r\n        return everConnected => {\r\n            if (conn === this.conn_) {\r\n                this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === this.secondaryConn_) {\r\n                this.log_('Secondary connection lost.');\r\n                this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                this.log_('closing an old connection');\r\n            }\r\n        };\r\n    }\r\n    connReceiver_(conn) {\r\n        return (message) => {\r\n            if (this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === this.rx_) {\r\n                    this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === this.secondaryConn_) {\r\n                    this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    sendRequest(dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        const msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    }\r\n    tryCleanupConnection() {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    }\r\n    onSecondaryControl_(controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            const cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    }\r\n    onSecondaryMessageReceived_(parsedData) {\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    }\r\n    upgradeIfSecondaryHealthy_() {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    proceedWithUpgrade_() {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    }\r\n    onPrimaryMessageReceived_(parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    }\r\n    onPrimaryResponse_() {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    }\r\n    onControl_(controlData) {\r\n        const cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            const payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (let i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    onHandshake_(handshake) {\r\n        const timestamp = handshake.ts;\r\n        const version = handshake.v;\r\n        const host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    }\r\n    tryStartUpgrade_() {\r\n        const conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    }\r\n    startUpgrade_(conn) {\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessage = this.connReceiver_(this.secondaryConn_);\r\n        const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(() => {\r\n            if (this.secondaryConn_) {\r\n                this.log_('Timed out trying to upgrade.');\r\n                this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    }\r\n    onReset_(host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    }\r\n    onConnectionEstablished_(conn, timestamp) {\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(() => {\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    }\r\n    sendPingOnPrimaryIfNecessary_() {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    onSecondaryConnectionLost_() {\r\n        const conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    }\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    onConnectionLost_(everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    }\r\n    onConnectionShutdown_(reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    }\r\n    sendData_(data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    }\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    close() {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    closeConnections_() {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nclass ServerActions {\r\n    put(pathString, data, onComplete, hash) { }\r\n    merge(pathString, data, onComplete, hash) { }\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    refreshAuthToken(token) { }\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    refreshAppCheckToken(token) { }\r\n    onDisconnectPut(pathString, data, onComplete) { }\r\n    onDisconnectMerge(pathString, data, onComplete) { }\r\n    onDisconnectCancel(pathString, onComplete) { }\r\n    reportStats(stats) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nclass EventEmitter {\r\n    constructor(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    trigger(eventType, ...varArgs) {\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            const listeners = [...this.listeners_[eventType]];\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    }\r\n    on(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback, context });\r\n        const eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    }\r\n    off(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        const listeners = this.listeners_[eventType] || [];\r\n        for (let i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    validateEventType_(eventType) {\r\n        assert(this.allowedEvents_.find(et => {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nclass OnlineMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['online']);\r\n        this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', () => {\r\n                if (!this.online_) {\r\n                    this.online_ = true;\r\n                    this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', () => {\r\n                if (this.online_) {\r\n                    this.online_ = false;\r\n                    this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new OnlineMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    }\r\n    currentlyOnline() {\r\n        return this.online_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nconst MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nconst MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nclass Path {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    constructor(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            let copyTo = 0;\r\n            for (let i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    toString() {\r\n        let pathString = '';\r\n        for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    }\r\n}\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    let pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    let pathString = '';\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin = 0) {\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        const childPieces = childPathObj.split('/');\r\n        for (let i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    const outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    const leftKeys = pathSlice(left, 0);\r\n    const rightKeys = pathSlice(right, 0);\r\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        const cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (let i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    let i = path.pieceNum_;\r\n    let j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nclass ValidationPath {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    constructor(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (let i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n}\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    const last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass VisibilityMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['visible']);\r\n        let hidden;\r\n        let visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, () => {\r\n                const visible = !document[hidden];\r\n                if (visible !== this.visible_) {\r\n                    this.visible_ = visible;\r\n                    this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new VisibilityMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECONNECT_MIN_DELAY = 1000;\r\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\r\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nconst INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nclass PersistentConnection extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.onConnectStatus_ = onConnectStatus_;\r\n        this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        this.log_ = logWrapper('p:' + this.id + ':');\r\n        this.interruptReasons_ = {};\r\n        this.listens = new Map();\r\n        this.outstandingPuts_ = [];\r\n        this.outstandingGets_ = [];\r\n        this.outstandingPutCount_ = 0;\r\n        this.outstandingGetCount_ = 0;\r\n        this.onDisconnectRequestQueue_ = [];\r\n        this.connected_ = false;\r\n        this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        this.securityDebugCallback_ = null;\r\n        this.lastSessionId = null;\r\n        this.establishConnectionTimer_ = null;\r\n        this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        this.requestCBHash_ = {};\r\n        this.requestNumber_ = 0;\r\n        this.realtime_ = null;\r\n        this.authToken_ = null;\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = false;\r\n        this.invalidAuthTokenCount_ = 0;\r\n        this.invalidAppCheckTokenCount_ = 0;\r\n        this.firstConnection_ = true;\r\n        this.lastConnectionAttemptTime_ = null;\r\n        this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', this.onOnline_, this);\r\n        }\r\n    }\r\n    sendRequest(action, body, onResponse) {\r\n        const curReqNum = ++this.requestNumber_;\r\n        const msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    }\r\n    get(query) {\r\n        this.initConnection_();\r\n        const deferred = new Deferred();\r\n        const request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        const outstandingGet = {\r\n            action: 'g',\r\n            request,\r\n            onComplete: (message) => {\r\n                const payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        const index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(() => {\r\n                const get = this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete this.outstandingGets_[index];\r\n                this.outstandingGetCount_--;\r\n                if (this.outstandingGetCount_ === 0) {\r\n                    this.outstandingGets_ = [];\r\n                }\r\n                this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    }\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        const queryId = query._queryIdentifier;\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        const listenSpec = {\r\n            onComplete,\r\n            hashFn: currentHashFn,\r\n            query,\r\n            tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    }\r\n    sendGet_(index) {\r\n        const get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, (message) => {\r\n            delete this.outstandingGets_[index];\r\n            this.outstandingGetCount_--;\r\n            if (this.outstandingGetCount_ === 0) {\r\n                this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    }\r\n    sendListen_(listenSpec) {\r\n        const query = listenSpec.query;\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, (message) => {\r\n            const payload = message[ /*data*/'d'];\r\n            const status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            const currentListenSpec = this.listens.get(pathString) &&\r\n                this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static warnOnListenWarnings_(payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                const indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                const indexPath = query._path.toString();\r\n                warn(`Using an unspecified index. Your data will be downloaded and ` +\r\n                    `filtered on the client. Consider adding ${indexSpec} at ` +\r\n                    `${indexPath} to your security rules for better performance.`);\r\n            }\r\n        }\r\n    }\r\n    refreshAuthToken(token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, () => { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    }\r\n    reduceReconnectDelayIfAdminCredential_(credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        const isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    }\r\n    refreshAppCheckToken(token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, () => { });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    tryAuth() {\r\n        if (this.connected_ && this.authToken_) {\r\n            const token = this.authToken_;\r\n            const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\r\n            const requestData = { cred: token };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (this.authToken_ === token) {\r\n                    if (status === 'ok') {\r\n                        this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    tryAppCheck() {\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    unlisten(query, tag) {\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    }\r\n    sendUnlisten_(pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    }\r\n    onDisconnectPut(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'o',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectMerge(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'om',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectCancel(pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    sendOnDisconnect_(action, pathString, data, onComplete) {\r\n        const request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, (response) => {\r\n            if (onComplete) {\r\n                setTimeout(() => {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    }\r\n    put(pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    }\r\n    merge(pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    }\r\n    putInternal(action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        const request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action,\r\n            request,\r\n            onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        const index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    }\r\n    sendPut_(index) {\r\n        const action = this.outstandingPuts_[index].action;\r\n        const request = this.outstandingPuts_[index].request;\r\n        const onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, (message) => {\r\n            this.log_(action + ' response', message);\r\n            delete this.outstandingPuts_[index];\r\n            this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (this.outstandingPutCount_ === 0) {\r\n                this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    }\r\n    reportStats(stats) {\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            const request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, result => {\r\n                const status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    const errorReason = result[ /* data */'d'];\r\n                    this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            const reqNum = message['r'];\r\n            const onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    }\r\n    onDataPush_(action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    }\r\n    onReady_(timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    }\r\n    scheduleConnect_(timeout) {\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(() => {\r\n            this.establishConnectionTimer_ = null;\r\n            this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    }\r\n    initConnection_() {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    }\r\n    onVisible_(visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    }\r\n    onOnline_(online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    }\r\n    onRealtimeDisconnect_() {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                const timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            const timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            let reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    }\r\n    async establishConnection_() {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            const onDataMessage = this.onDataMessage_.bind(this);\r\n            const onReady = this.onReady_.bind(this);\r\n            const onDisconnect = this.onRealtimeDisconnect_.bind(this);\r\n            const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            const lastSessionId = this.lastSessionId;\r\n            let canceled = false;\r\n            let connection = null;\r\n            const closeFn = function () {\r\n                if (connection) {\r\n                    connection.close();\r\n                }\r\n                else {\r\n                    canceled = true;\r\n                    onDisconnect();\r\n                }\r\n            };\r\n            const sendRequestFn = function (msg) {\r\n                assert(connection, \"sendRequest call when we're not connected not allowed.\");\r\n                connection.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            const forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            try {\r\n                // First fetch auth and app check token, and establish connection after\r\n                // fetching the token was successful\r\n                const [authToken, appCheckToken] = await Promise.all([\r\n                    this.authTokenProvider_.getToken(forceRefresh),\r\n                    this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                ]);\r\n                if (!canceled) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    this.authToken_ = authToken && authToken.accessToken;\r\n                    this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                    connection = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect, \r\n                    /* onKill= */ reason => {\r\n                        warn(reason + ' (' + this.repoInfo_.toString() + ')');\r\n                        this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.log_('Failed to get token: ' + error);\r\n                if (!canceled) {\r\n                    if (this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    interrupt(reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    }\r\n    resume(reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    }\r\n    handleTimestamp_(timestamp) {\r\n        const delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    }\r\n    cancelSentTransactions_() {\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            const put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    }\r\n    onListenRevoked_(pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        let queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\r\n        }\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    }\r\n    removeListen_(pathString, queryId) {\r\n        const normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        let listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            const map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    }\r\n    onAuthRevoked_(statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onAppCheckRevoked_(statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onSecurityDebugPacket_(body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    }\r\n    restoreState_() {\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        for (const queries of this.listens.values()) {\r\n            for (const listenSpec of queries.values()) {\r\n                this.sendListen_(listenSpec);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            const request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (let i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    sendConnectStats_() {\r\n        const stats = {};\r\n        let clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    }\r\n    shouldReconnect_() {\r\n        const online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    }\r\n}\r\nPersistentConnection.nextPersistentConnectionId_ = 0;\r\n/**\r\n * Counter for number of connections created. Mainly used for tagging in the logs\r\n */\r\nPersistentConnection.nextConnectionId_ = 0;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass NamedNode {\r\n    constructor(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    static Wrap(name, node) {\r\n        return new NamedNode(name, node);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Index {\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    getCompare() {\r\n        return this.compare.bind(this);\r\n    }\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    indexedValueChanged(oldNode, newNode) {\r\n        const oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        const newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    }\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __EMPTY_NODE;\r\nclass KeyIndex extends Index {\r\n    static get __EMPTY_NODE() {\r\n        return __EMPTY_NODE;\r\n    }\r\n    static set __EMPTY_NODE(val) {\r\n        __EMPTY_NODE = val;\r\n    }\r\n    compare(a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    }\r\n    isDefinedOn(node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    }\r\n    makePost(indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.key';\r\n    }\r\n}\r\nconst KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nclass SortedMapIterator {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    constructor(node, startKey, comparator, isReverse_, resultGenerator_ = null) {\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        let cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getNext() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        let node = this.nodeStack_.pop();\r\n        let result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    hasNext() {\r\n        return this.nodeStack_.length > 0;\r\n    }\r\n    peek() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        const node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nclass LLRBNode {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    constructor(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return this.left.count() + 1 + this.right.count();\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    }\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    min_() {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    minKey() {\r\n        return this.min_().key;\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    maxKey() {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    }\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        let n = this;\r\n        const cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    removeMin_() {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        let n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        let n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    isRed_() {\r\n        return this.color;\r\n    }\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    fixUp_() {\r\n        let n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    moveRedLeft_() {\r\n        let n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    moveRedRight_() {\r\n        let n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    rotateLeft_() {\r\n        const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    rotateRight_() {\r\n        const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    }\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    colorFlip_() {\r\n        const left = this.left.copy(null, null, !this.left.color, null, null);\r\n        const right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    }\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    checkMaxDepth_() {\r\n        const blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    }\r\n    check_() {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        const blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    }\r\n}\r\nLLRBNode.RED = true;\r\nLLRBNode.BLACK = false;\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nclass LLRBEmptyNode {\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        return this;\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    inorderTraversal(action) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return false;\r\n    }\r\n    minKey() {\r\n        return null;\r\n    }\r\n    maxKey() {\r\n        return null;\r\n    }\r\n    check_() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    isRed_() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nclass SortedMap {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    constructor(comparator_, root_ = SortedMap.EMPTY_NODE) {\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    insert(key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    remove(key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    get(key) {\r\n        let cmp;\r\n        let node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    getPredecessorKey(key) {\r\n        let cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    }\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    isEmpty() {\r\n        return this.root_.isEmpty();\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    count() {\r\n        return this.root_.count();\r\n    }\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    minKey() {\r\n        return this.root_.minKey();\r\n    }\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    maxKey() {\r\n        return this.root_.maxKey();\r\n    }\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return this.root_.inorderTraversal(action);\r\n    }\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return this.root_.reverseTraversal(action);\r\n    }\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    getIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    }\r\n    getIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    }\r\n    getReverseIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    }\r\n    getReverseIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    }\r\n}\r\n/**\r\n * Always use the same empty node, to reduce memory.\r\n */\r\nSortedMap.EMPTY_NODE = new LLRBEmptyNode();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nconst priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nconst validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        const val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nclass LeafNode {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    constructor(value_, priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    static set __childrenNodeConstructor(val) {\r\n        __childrenNodeConstructor = val;\r\n    }\r\n    static get __childrenNodeConstructor() {\r\n        return __childrenNodeConstructor;\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return true;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    hasChild() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode) {\r\n        return null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return 0;\r\n    }\r\n    /** @inheritDoc */\r\n    forEachChild(index, action) {\r\n        return false;\r\n    }\r\n    val(exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            const type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    getValue() {\r\n        return this.value_;\r\n    }\r\n    compareTo(other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    }\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    compareToLeafNode_(otherLeaf) {\r\n        const otherLeafType = typeof otherLeaf.value_;\r\n        const thisLeafType = typeof this.value_;\r\n        const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    }\r\n    withIndex() {\r\n        return this;\r\n    }\r\n    isIndexed() {\r\n        return true;\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            const otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n/**\r\n * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n * the same type, the comparison falls back to their value\r\n */\r\nLeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet nodeFromJSON$1;\r\nlet MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nclass PriorityIndex extends Index {\r\n    compare(a, b) {\r\n        const aPriority = a.node.getPriority();\r\n        const bPriority = b.node.getPriority();\r\n        const indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getPriority().isEmpty();\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    }\r\n    makePost(indexValue, name) {\r\n        const priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.priority';\r\n    }\r\n}\r\nconst PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst LOG_2 = Math.log(2);\r\nclass Base12Num {\r\n    constructor(length) {\r\n        const logBase2 = (num) => \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parseInt((Math.log(num) / LOG_2), 10);\r\n        const bitMask = (bits) => parseInt(Array(bits + 1).join('1'), 2);\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        const mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    nextBitIsOne() {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        const result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nconst buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    const buildBalancedTree = function (low, high) {\r\n        const length = high - low;\r\n        let namedNode;\r\n        let key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const middle = parseInt((length / 2), 10) + low;\r\n            const left = buildBalancedTree(low, middle);\r\n            const right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    const buildFrom12Array = function (base12) {\r\n        let node = null;\r\n        let root = null;\r\n        let index = childList.length;\r\n        const buildPennant = function (chunkSize, color) {\r\n            const low = index - chunkSize;\r\n            const high = index;\r\n            index -= chunkSize;\r\n            const childTree = buildBalancedTree(low + 1, high);\r\n            const namedNode = childList[low];\r\n            const key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        const attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (let i = 0; i < base12.count; ++i) {\r\n            const isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            const chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    const base12 = new Base12Num(childList.length);\r\n    const root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet _defaultIndexMap;\r\nconst fallbackObject = {};\r\nclass IndexMap {\r\n    constructor(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\r\n    static get Default() {\r\n        assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n        _defaultIndexMap =\r\n            _defaultIndexMap ||\r\n                new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n        return _defaultIndexMap;\r\n    }\r\n    get(indexKey) {\r\n        const sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    }\r\n    hasIndex(indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    }\r\n    addIndex(indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        const childList = [];\r\n        let sawIndexedValue = false;\r\n        const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        let next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        let newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        const indexName = indexDefinition.toString();\r\n        const newIndexSet = Object.assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        const newIndexes = Object.assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    }\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    addToIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren, indexName) => {\r\n            const index = safeGet(this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    const childList = [];\r\n                    const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    let next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                let newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    removeFromIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren) => {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nlet EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nclass ChildrenNode {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    constructor(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    static get EMPTY_NODE() {\r\n        return (EMPTY_NODE ||\r\n            (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            const child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    }\r\n    /** @inheritDoc */\r\n    hasChild(childName) {\r\n        return this.children_.get(childName) !== null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            const namedNode = new NamedNode(childName, newChildNode);\r\n            let newChildren, newIndexMap;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            const newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            const newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return this.children_.isEmpty();\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return this.children_.count();\r\n    }\r\n    /** @inheritDoc */\r\n    val(exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        const obj = {};\r\n        let numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            const array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                const childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode, index) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            const predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    }\r\n    getFirstChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    }\r\n    getFirstChild(indexDefinition) {\r\n        const minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    getLastChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    }\r\n    getLastChild(indexDefinition) {\r\n        const maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    forEachChild(index, action) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(wrappedNode => {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    }\r\n    getIterator(indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    }\r\n    getIteratorFrom(startPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, key => key);\r\n        }\r\n        else {\r\n            const iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    getReverseIterator(indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    }\r\n    getReverseIteratorFrom(endPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, key => {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            const iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    compareTo(other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    }\r\n    withIndex(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    }\r\n    isIndexed(index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            const otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                const thisIter = this.getIterator(PRIORITY_INDEX);\r\n                const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                let thisCurrent = thisIter.getNext();\r\n                let otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    resolveIndex_(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    }\r\n}\r\nChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\nclass MaxNode extends ChildrenNode {\r\n    constructor() {\r\n        super(new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default);\r\n    }\r\n    compareTo(other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    equals(other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    }\r\n    getPriority() {\r\n        return this;\r\n    }\r\n    getImmediateChild(childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nconst MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority = null) {\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        const jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        const children = [];\r\n        let childrenHavePriority = false;\r\n        const hinzeJsonObj = json;\r\n        each(hinzeJsonObj, (key, child) => {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                const childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority =\r\n                        childrenHavePriority || !childNode.getPriority().isEmpty();\r\n                    children.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        const childSet = buildChildSet(children, NAME_ONLY_COMPARATOR, namedNode => namedNode.name, NAME_COMPARATOR);\r\n        if (childrenHavePriority) {\r\n            const sortedChildSet = buildChildSet(children, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        let node = ChildrenNode.EMPTY_NODE;\r\n        each(json, (key, childData) => {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    const childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node = node.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PathIndex extends Index {\r\n    constructor(indexPath_) {\r\n        super();\r\n        this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n    }\r\n    extractChild(snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    }\r\n    compare(a, b) {\r\n        const aChild = this.extractChild(a.node);\r\n        const bChild = this.extractChild(b.node);\r\n        const indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    }\r\n    maxPost() {\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    }\r\n    toString() {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ValueIndex extends Index {\r\n    compare(a, b) {\r\n        const indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return true;\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.value';\r\n    }\r\n}\r\nconst VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nconst PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nconst MIN_PUSH_CHAR = '-';\r\nconst MAX_PUSH_CHAR = 'z';\r\nconst MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nconst nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    let lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    const lastRandChars = [];\r\n    return function (now) {\r\n        const duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        let i;\r\n        const timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        let id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nconst successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    const keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    const next = new Array(key.length);\r\n    for (let i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    let i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    const source = next[i];\r\n    const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nconst predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    const keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    const next = new Array(key.length);\r\n    for (let i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode, childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode, childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode,\r\n        childName,\r\n        oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode, childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nclass IndexedFilter {\r\n    constructor(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        const oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        const oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    }\r\n    filtersNodes() {\r\n        return false;\r\n    }\r\n    getIndexedFilter() {\r\n        return this;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nclass RangedFilter {\r\n    constructor(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    getStartPost() {\r\n        return this.startPost_;\r\n    }\r\n    getEndPost() {\r\n        return this.endPost_;\r\n    }\r\n    matches(node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        let filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        const self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.indexedFilter_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    static getStartPost_(params) {\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    }\r\n    static getEndPost_(params) {\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nclass LimitedFilter {\r\n    constructor(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        let filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    const next = iterator.getNext();\r\n                    let inRange;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                let startPost;\r\n                let endPost;\r\n                let cmp;\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    const indexCompare = this.index_.getCompare();\r\n                    cmp = (a, b) => indexCompare(b, a);\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                let count = 0;\r\n                let foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    const next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    const inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    fullLimitUpdateChild_(snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        let cmp;\r\n        if (this.reverse_) {\r\n            const indexCmp = this.index_.getCompare();\r\n            cmp = (a, b) => indexCmp(b, a);\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        const oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        const newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        const windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        const inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            const oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            let nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            const compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            const remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                const newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                const nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n *\r\n * @internal\r\n */\r\nclass QueryParams {\r\n    constructor() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    hasStart() {\r\n        return this.startSet_;\r\n    }\r\n    hasStartAfter() {\r\n        return this.startAfterSet_;\r\n    }\r\n    hasEndBefore() {\r\n        return this.endBeforeSet_;\r\n    }\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    isViewFromLeft() {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    getIndexStartValue() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    getIndexStartName() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    }\r\n    hasEnd() {\r\n        return this.endSet_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    getIndexEndValue() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    getIndexEndName() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    }\r\n    hasLimit() {\r\n        return this.limitSet_;\r\n    }\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    hasAnchoredLimit() {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    }\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    getLimit() {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    loadsAllData() {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    }\r\n    isDefault() {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    }\r\n    copy() {\r\n        const copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    }\r\n}\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        let childKey;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    let childKey;\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    const newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    const qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    let orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    const obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        let viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nclass ReadonlyRestClient extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        this.listens_ = {};\r\n    }\r\n    reportStats(stats) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    static getListenId_(query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        const thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(this.listens_, listenId) === thisListen) {\r\n                let status;\r\n                if (!error) {\r\n                    status = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status = 'permission_denied';\r\n                }\r\n                else {\r\n                    status = 'rest_error:' + error;\r\n                }\r\n                onComplete(status, null);\r\n            }\r\n        });\r\n    }\r\n    /** @inheritDoc */\r\n    unlisten(query, tag) {\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    }\r\n    get(query) {\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        const pathString = query._path.toString();\r\n        const deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n    /** @inheritDoc */\r\n    refreshAuthToken(token) {\r\n        // no-op since we just always call getToken.\r\n    }\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    restRequest_(pathString, queryStringParameters = {}, callback) {\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            const url = (this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            this.log_('Sending REST request for ' + url);\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (callback && xhr.readyState === 4) {\r\n                    this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    let res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nclass SnapshotHolder {\r\n    constructor() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    getNode(path) {\r\n        return this.rootNode_.getChild(path);\r\n    }\r\n    updateSnapshot(path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        const child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                const value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, (key, tree) => {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            const childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                const safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\r\n            const path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach((tree, key) => {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nclass StatsListener {\r\n    constructor(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    get() {\r\n        const newStats = this.collection_.get();\r\n        const delta = Object.assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, (stat, value) => {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\r\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nclass StatsReporter {\r\n    constructor(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        const timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    reportStats_() {\r\n        const stats = this.statsListener_.get();\r\n        const reportedStats = {};\r\n        let haveStatsToReport = false;\r\n        each(stats, (stat, value) => {\r\n            if (value > 0 && contains(this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AckUserWrite {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    constructor(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    operationForChild(childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            const childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ListenComplete {\r\n    constructor(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Overwrite {\r\n    constructor(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Merge {\r\n    constructor(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            const childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    }\r\n    toString() {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nclass CacheNode {\r\n    constructor(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    isFullyInitialized() {\r\n        return this.fullyInitialized_;\r\n    }\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    isFiltered() {\r\n        return this.filtered_;\r\n    }\r\n    isCompleteForPath(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        const childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    }\r\n    isCompleteForChild(key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    }\r\n    getNode() {\r\n        return this.node_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nclass EventGenerator {\r\n    constructor(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n}\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    const events = [];\r\n    const moves = [];\r\n    changes.forEach(change => {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    const filteredChanges = changes.filter(change => change.type === eventType);\r\n    filteredChanges.sort((a, b) => eventGeneratorCompareChanges(eventGenerator, a, b));\r\n    filteredChanges.forEach(change => {\r\n        const materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(registration => {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    const aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    const bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache, serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nconst EmptyChildren = () => {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nclass ImmutableTree {\r\n    constructor(value, children = EmptyChildren()) {\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    static fromObject(obj) {\r\n        let tree = new ImmutableTree(null);\r\n        each(obj, (childPath, childSnap) => {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    }\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    isEmpty() {\r\n        return this.value === null && this.children.isEmpty();\r\n    }\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    findRootMostMatchingPathAndValue(relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(relativePath);\r\n                const child = this.children.get(front);\r\n                if (child !== null) {\r\n                    const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        const fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    findRootMostValueAndPath(relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, () => true);\r\n    }\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    subtree(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    set(relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.set(pathPopFront(relativePath), toSet);\r\n            const newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    remove(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                const newChild = child.remove(pathPopFront(relativePath));\r\n                let newChildren;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    get(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    setTree(relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            let newChildren;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    fold(fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    }\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    fold_(pathSoFar, fn) {\r\n        const accum = {};\r\n        this.children.inorderTraversal((childKey, childTree) => {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    }\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    findOnPath(path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    findOnPath_(pathToFollow, pathSoFar, f) {\r\n        const result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(pathToFollow);\r\n                const nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    foreachOnPath(path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    foreachOnPath_(pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            const front = pathGetFront(pathToFollow);\r\n            const nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    foreach(f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    }\r\n    foreach_(currentRelativePath, f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    }\r\n    foreachChild(f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nclass CompoundWrite {\r\n    constructor(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    static empty() {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    }\r\n}\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            const rootMostPath = rootmost.path;\r\n            let value = rootmost.value;\r\n            const relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            const subtree = new ImmutableTree(node);\r\n            const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    let newWrite = compoundWrite;\r\n    each(updates, (childKey, node) => {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        const newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    const children = [];\r\n    const node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        let priorityWrite = null;\r\n        writeTree.children.inorderTraversal((childKey, childTree) => {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path,\r\n        snap,\r\n        writeId,\r\n        visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path,\r\n        children: changedChildren,\r\n        writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (let i = 0; i < writeTree.allWrites.length; i++) {\r\n        const record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    const idx = writeTree.allWrites.findIndex(s => {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    const writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    let removedWriteWasVisible = writeToRemove.visible;\r\n    let removedWriteOverlapsWithOtherWrites = false;\r\n    let i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        const currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            const children = writeToRemove.children;\r\n            each(children, (childName) => {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (const childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    let compoundWrite = CompoundWrite.empty();\r\n    for (let i = 0; i < writes.length; ++i) {\r\n        const write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            const writePath = write.path;\r\n            let relativePath;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        const child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            const deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            const subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                const filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                const mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    let completeChildren = ChildrenNode.EMPTY_NODE;\r\n    const topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const node = compoundWriteApply(compoundWriteChildCompoundWrite(merge, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    const path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    const path = pathChild(treePath, childKey);\r\n    const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    let toIterate;\r\n    const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        const nodes = [];\r\n        const cmp = index.getCompare();\r\n        const iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        let next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ChildChangeAccumulator {\r\n    constructor() {\r\n        this.changeMap = new Map();\r\n    }\r\n    trackChildChange(change) {\r\n        const type = change.type;\r\n        const childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        const oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            const oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changeMap.values());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nclass NoCompleteChildSource_ {\r\n    getCompleteChild(childKey) {\r\n        return null;\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Singleton instance.\r\n */\r\nconst NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nclass WriteTreeCompleteChildSource {\r\n    constructor(writes_, viewCache_, optCompleteServerCache_ = null) {\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    getCompleteChild(childKey) {\r\n        const node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            const serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        const completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        const nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    const accumulator = new ChildChangeAccumulator();\r\n    let newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        const overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        const merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        const ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    const changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    const eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        const isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    const oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        let newEventCache, serverNode;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                const serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                const completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                const completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                const completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                const oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                const childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                let newEventChild;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    const eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    const oldServerSnap = oldViewCache.serverCache;\r\n    let newServerCache;\r\n    const serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        const newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        const childChangePath = pathPopFront(changePath);\r\n        const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        const newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    const newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    const source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    const oldEventSnap = oldViewCache.eventCache;\r\n    let newViewCache, newEventCache;\r\n    const source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            const childChangePath = pathPopFront(changePath);\r\n            const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            let newChild;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                const childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                const newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach((relativePath, childNode) => {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    let viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    const serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\r\n        if (serverNode.hasChild(childKey)) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\r\n        const isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    const filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    const serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            let changedChildren = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\r\n                changedChildren = changedChildren.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        let changedChildren = new ImmutableTree(null);\r\n        affectedTree.foreach((mergePath, value) => {\r\n            const serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren = changedChildren.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    const oldServerNode = viewCache.serverCache;\r\n    const newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    let complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        const source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        const oldEventCache = viewCache.eventCache.getNode();\r\n        let newEventCache;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            let newNode;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                const serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(path);\r\n            let newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nclass View {\r\n    constructor(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        const params = this.query_._queryParams;\r\n        const indexFilter = new IndexedFilter(params.getIndex());\r\n        const filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        const initialServerCache = initialViewCache.serverCache;\r\n        const initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        const serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        const eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        const newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        const newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    get query() {\r\n        return this.query_;\r\n    }\r\n}\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    const cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        const path = view.query._path;\r\n        view.eventRegistrations_.forEach(registration => {\r\n            const maybeEvent = registration.createCancelEvent(cancelError, path);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        let remaining = [];\r\n        for (let i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            const existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    const oldViewCache = view.viewCache_;\r\n    const result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    const eventSnap = view.viewCache_.eventCache;\r\n    const initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        const eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    const registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nclass SyncPoint {\r\n    constructor() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n}\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    const queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        const view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        let events = [];\r\n        for (const view of syncPoint.views.values()) {\r\n            events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    const queryId = query._queryIdentifier;\r\n    const view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        let eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        let eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        const viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    const queryId = query._queryIdentifier;\r\n    const removed = [];\r\n    let cancelEvents = [];\r\n    const hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        // When you do ref.off(...), we search all views for the registration to remove.\r\n        for (const [viewQueryId, view] of syncPoint.views.entries()) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(viewQueryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        const view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    const result = [];\r\n    for (const view of syncPoint.views.values()) {\r\n        if (!view.query._queryParams.loadsAllData()) {\r\n            result.push(view);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    let serverCache = null;\r\n    for (const view of syncPoint.views.values()) {\r\n        serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    const params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        const queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    for (const view of syncPoint.views.values()) {\r\n        if (view.query._queryParams.loadsAllData()) {\r\n            return view;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nlet syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nclass SyncTree {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    constructor(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n}\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert = false) {\r\n    const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    const needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        let affectedTree = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree = affectedTree.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, (pathString) => {\r\n                affectedTree = affectedTree.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    const path = query._path;\r\n    const maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    let cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        const removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        const removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        const removingDefault = -1 !==\r\n            removed.findIndex(query => {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        const covered = syncTree.syncPointTree_.findOnPath(path, (relativePath, parentSyncPoint) => syncPointHasCompleteView(parentSyncPoint));\r\n        if (removingDefault && !covered) {\r\n            const subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (let i = 0; i < newViews.length; ++i) {\r\n                    const view = newViews[i], newQuery = view.query;\r\n                    const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                const defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach((queryToRemove) => {\r\n                    const tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const changeTree = ImmutableTree.fromObject(changedChildren);\r\n        const op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    let foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        const subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild((childName, childSyncPoint) => {\r\n            const completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        const queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        const tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    let events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        const view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    const includeHiddenSets = true;\r\n    const writeTree = syncTree.pendingWriteTree_;\r\n    const serverCache = syncTree.syncPointTree_.findOnPath(path, (pathSoFar, syncPoint) => {\r\n        const relativePath = newRelativePath(pathSoFar, path);\r\n        const serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    const serverCacheComplete = serverCache != null;\r\n    const serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        const syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        let events = [];\r\n        const childName = pathGetFront(operation.path);\r\n        const childOperation = operation.operationForChild(childName);\r\n        const childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            const childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    const syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let events = [];\r\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\r\n        const childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        const childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    const query = view.query;\r\n    const tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: () => {\r\n            const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: (status) => {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                const error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    const queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    const splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    const syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            let views = [];\r\n            if (maybeChildSyncPoint) {\r\n                views = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, (_key, childViews) => {\r\n                views = views.concat(childViews);\r\n            });\r\n            return views;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (let j = 0; j < queries.length; ++j) {\r\n        const removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    const path = query._path;\r\n    const tag = syncTreeTagForQuery_(syncTree, query);\r\n    const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    const events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    const subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        const queriesToStop = subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                let queries = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries = queries.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(view => view.query));\r\n                }\r\n                each(childMap, (_key, childQueries) => {\r\n                    queries = queries.concat(childQueries);\r\n                });\r\n                return queries;\r\n            }\r\n        });\r\n        for (let i = 0; i < queriesToStop.length; ++i) {\r\n            const queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ExistingValueProvider {\r\n    constructor(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    }\r\n    node() {\r\n        return this.node_;\r\n    }\r\n}\r\nclass DeferredValueProvider {\r\n    constructor(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    }\r\n    node() {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    }\r\n}\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nconst generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nconst resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nconst resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nconst resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    const delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    const existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    const leaf = existingNode;\r\n    const existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nconst resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nconst resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    const rawPri = node.getPriority().val();\r\n    const priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    let newNode;\r\n    if (node.isLeafNode()) {\r\n        const leafNode = node;\r\n        const value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        const childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nclass Tree {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    constructor(name = '', parent = null, node = { children: {}, childCount: 0 }) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n}\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    let child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        const childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, (child, childTree) => {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, child => {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    let node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    const childEmpty = treeIsEmpty(child);\r\n    const childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nconst INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nconst INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nconst MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nconst isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nconst isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nconst isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nconst isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nconst validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nconst validateFirebaseData = function (errorPrefix, data, path_) {\r\n    const path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        let hasDotValue = false;\r\n        let hasActualChild = false;\r\n        each(data, (key, value) => {\r\n            if (key === '.value') {\r\n                hasDotValue = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue && hasActualChild) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nconst validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    let i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        const keys = pathSlice(curPath);\r\n        for (let j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    let prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nconst validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    const errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    const mergePaths = [];\r\n    each(data, (key, value) => {\r\n        const curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nconst validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nconst validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nconst validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nconst validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    const pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nclass EventQueue {\r\n    constructor() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n}\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    let currList = null;\r\n    for (let i = 0; i < eventDataList.length; i++) {\r\n        const data = eventDataList[i];\r\n        const path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathEquals(eventPath, path));\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathContains(eventPath, changedPath) ||\r\n        pathContains(changedPath, eventPath));\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    let sentAll = true;\r\n    for (let i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        const eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            const eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (let i = 0; i < eventList.events.length; i++) {\r\n        const eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            const eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nconst MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nclass Repo {\r\n    constructor(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    toString() {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    }\r\n}\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, (connectStatus) => {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, (updates) => {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(token => {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(result => {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, () => new StatsReporter(repo.stats_, repo.server_));\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            let infoEvents = [];\r\n            const node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(() => {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: () => { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            repo.server_.listen(query, currentHashFn, tag, (status, data) => {\r\n                const events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: (query, tag) => {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    const offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    const path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    let events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            const taggedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            const taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        const changedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        const snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    let affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, (key, value) => {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    const path = new Path('/.info/' + pathString);\r\n    const newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    const events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(payload => {\r\n        const node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        const events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, err => {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    const writeId = repoGetNextWriteId(repo);\r\n    const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), (status, errorReason) => {\r\n        const success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    const affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    let empty = true;\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const changedChildren = {};\r\n    each(childrenToMerge, (changedKey, changedValue) => {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        const writeId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n            const success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n            const affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, (changedPath) => {\r\n            const affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), (path, node) => {\r\n        const resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    let events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), (path, snap) => {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        const affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    const newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    const newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, (childName, childNode) => {\r\n                const newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoLog(repo, ...varArgs) {\r\n    let prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log(prefix, ...varArgs);\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(() => {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                const code = (status || 'error').toUpperCase();\r\n                let message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                const error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    const transaction = {\r\n        path,\r\n        update: transactionUpdate,\r\n        onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    const currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    const newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        const queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        const nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        let priorityForNode;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            const currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        const serverValues = repoGenerateServerValues(repo);\r\n        const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node = repo.transactionQueueTree_) {\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        const queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        const allRun = queue.every((transaction) => transaction.status === 0 /* RUN */);\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, childNode => {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    const setsToIgnore = queue.map(txn => {\r\n        return txn.currentWriteId;\r\n    });\r\n    const latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    let snapToSend = latestState;\r\n    const latestHash = latestState.hash();\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        const relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    const dataToSend = snapToSend.val(true);\r\n    const pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, (status) => {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status\r\n        });\r\n        let events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            const callbacks = [];\r\n            for (let i = 0; i < queue.length; i++) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(() => queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (let i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    const rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    const path = treeGetPath(rootMostTransactionNode);\r\n    const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    const callbacks = [];\r\n    let events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    const txnsToRerun = queue.filter(q => {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    const setsToIgnore = txnsToRerun.map(q => {\r\n        return q.currentWriteId;\r\n    });\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const transaction = queue[i];\r\n        const relativePath = newRelativePath(path, transaction.path);\r\n        let abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                const currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                const newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    let newDataNode = nodeFromJSON(newData);\r\n                    const hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    const oldWriteId = transaction.currentWriteId;\r\n                    const serverValues = repoGenerateServerValues(repo);\r\n                    const newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(() => queue[i].onComplete(null, false, queue[i].currentInputSnapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(() => queue[i].onComplete(new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    let front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    let transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    const transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort((a, b) => a.order - b.order);\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    const nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (let i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, child => {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        let to = 0;\r\n        for (let from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, childNode => {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        const callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        let events = [];\r\n        let lastSent = -1;\r\n        for (let i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    let pathStringDecoded = '';\r\n    const pieces = pathString.split('/');\r\n    for (let i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            let piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    const results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (const segment of queryString.split('&')) {\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        const kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(`Invalid query segment '${segment}' in query '${queryString}'`);\r\n        }\r\n    }\r\n    return results;\r\n}\r\nconst parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    const parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, nodeAdmin, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nconst parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    let host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    let secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        let colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        let slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        let questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        const queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        const hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            const dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host,\r\n        port,\r\n        domain,\r\n        subdomain,\r\n        secure,\r\n        scheme,\r\n        pathString,\r\n        namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nclass DataEvent {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    constructor(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    getPath() {\r\n        const ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    }\r\n    getEventType() {\r\n        return this.eventType;\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    }\r\n}\r\nclass CancelEvent {\r\n    constructor(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    getPath() {\r\n        return this.path;\r\n    }\r\n    getEventType() {\r\n        return 'cancel';\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return this.path.toString() + ':cancel';\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nclass CallbackContext {\r\n    constructor(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    onValue(expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    }\r\n    onCancel(error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    }\r\n    get hasCancelCallback() {\r\n        return !!this.cancelCallback;\r\n    }\r\n    matches(other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nclass OnDisconnect {\r\n    /** @hideconstructor */\r\n    constructor(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    cancel() {\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    remove() {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    set(value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    setWithPriority(value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    update(values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nclass QueryImpl {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    constructor(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    get key() {\r\n        if (pathIsEmpty(this._path)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return pathGetBack(this._path);\r\n        }\r\n    }\r\n    get ref() {\r\n        return new ReferenceImpl(this._repo, this._path);\r\n    }\r\n    get _queryIdentifier() {\r\n        const obj = queryParamsGetQueryObject(this._queryParams);\r\n        const id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    }\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\r\n    get _queryObject() {\r\n        return queryParamsGetQueryObject(this._queryParams);\r\n    }\r\n    isEqual(other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        const sameRepo = this._repo === other._repo;\r\n        const samePath = pathEquals(this._path, other._path);\r\n        const sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    }\r\n    toJSON() {\r\n        return this.toString();\r\n    }\r\n    toString() {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    }\r\n}\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    let startNode = null;\r\n    let endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        const tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        const wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nclass ReferenceImpl extends QueryImpl {\r\n    /** @hideconstructor */\r\n    constructor(repo, path) {\r\n        super(repo, path, new QueryParams(), false);\r\n    }\r\n    get parent() {\r\n        const parentPath = pathParent(this._path);\r\n        return parentPath === null\r\n            ? null\r\n            : new ReferenceImpl(this._repo, parentPath);\r\n    }\r\n    get root() {\r\n        let ref = this;\r\n        while (ref.parent !== null) {\r\n            ref = ref.parent;\r\n        }\r\n        return ref;\r\n    }\r\n}\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nclass DataSnapshot {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    constructor(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\r\n    get priority() {\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this._node.getPriority().val();\r\n    }\r\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\r\n    get key() {\r\n        return this.ref.key;\r\n    }\r\n    /** Returns the number of child properties of this `DataSnapshot`. */\r\n    get size() {\r\n        return this._node.numChildren();\r\n    }\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    child(path) {\r\n        const childPath = new Path(path);\r\n        const childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    }\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    exists() {\r\n        return !this._node.isEmpty();\r\n    }\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    exportVal() {\r\n        return this._node.val(true);\r\n    }\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    forEach(action) {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        const childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, (key, node) => {\r\n            return action(new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    }\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    hasChild(path) {\r\n        const childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    }\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    hasChildren() {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return this.exportVal();\r\n    }\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    val() {\r\n        return this._node.val();\r\n    }\r\n}\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    const repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Returns an `OnDisconnect` object - see\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information on how to use it.\r\n *\r\n * @param ref - The reference to add OnDisconnect triggers for.\r\n */\r\nfunction onDisconnect(ref) {\r\n    ref = getModularInstance(ref);\r\n    return new OnDisconnect(ref._repo, ref._path);\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    const now = repoServerTime(parent._repo);\r\n    const name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    const thennablePushRef = child(parent, name);\r\n    const pushRef = child(parent, name);\r\n    let promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(() => pushRef);\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(node => {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nclass ValueEventRegistration {\r\n    constructor(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        return eventType === 'value';\r\n    }\r\n    createEvent(change, query) {\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, null);\r\n        }\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    }\r\n    hasAnyCallback() {\r\n        return this.callbackContext !== null;\r\n    }\r\n}\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nclass ChildEventRegistration {\r\n    constructor(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        let eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    createEvent(change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        const childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    }\r\n    hasAnyCallback() {\r\n        return !!this.callbackContext;\r\n    }\r\n}\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    let cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        const userCallback = callback;\r\n        const onceCallback = (dataSnapshot, previousChildName) => {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    const callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    const container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    let container = null;\r\n    const expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nclass QueryConstraint {\r\n}\r\nclass QueryEndAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        const newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nclass QueryEndBeforeConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        const newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nclass QueryStartAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        const newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value = null, key) {\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nclass QueryStartAfterConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        const newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nclass QueryLimitToFirstConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nclass QueryLimitToLastConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nclass QueryOrderByChildConstraint extends QueryConstraint {\r\n    constructor(_path) {\r\n        super();\r\n        this._path = _path;\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        const parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        const index = new PathIndex(parsedPath);\r\n        const newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nclass QueryOrderByKeyConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nclass QueryOrderByValueConstraint extends QueryConstraint {\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nclass QueryEqualToValueConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query, ...queryConstraints) {\r\n    let queryImpl = getModularInstance(query);\r\n    for (const constraint of queryConstraints) {\r\n        queryImpl = constraint._apply(queryImpl);\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase Node.js Admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches `Repo` instances.\r\n */\r\nconst repos = {};\r\n/**\r\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\r\n */\r\nlet useRestClient = false;\r\n/**\r\n * Update an existing `Repo` in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(`${host}:${port}`, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    let dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\r\n    }\r\n    let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    let repoInfo = parsedUrl.repoInfo;\r\n    let isEmulator;\r\n    let dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined' && process.env) {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    const authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    const repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    const appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    let appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    let repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nclass Database {\r\n    /** @hideconstructor */\r\n    constructor(_repoInternal, \r\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a `Database` instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    get _repo() {\r\n        if (!this._instanceStarted) {\r\n            repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n            this._instanceStarted = true;\r\n        }\r\n        return this._repoInternal;\r\n    }\r\n    get _root() {\r\n        if (!this._rootInternal) {\r\n            this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n        }\r\n        return this._rootInternal;\r\n    }\r\n    _delete() {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _checkNotDeleted(apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns the instance of the Realtime Database SDK that is associated\r\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\r\n * with default settings if no instance exists or if the existing instance uses\r\n * a custom database URL.\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\r\n * Database instance is associated with.\r\n * @param url - The URL of the Realtime Database instance to connect to. If not\r\n * provided, the SDK connects to the default instance of the Firebase App.\r\n * @returns The `Database` instance of the provided app.\r\n */\r\nfunction getDatabase(app = getApp(), url) {\r\n    return _getProvider(app, 'database').getImmediate({\r\n        identifier: url\r\n    });\r\n}\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options = {}) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    const repo = db._repoInternal;\r\n    let tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        const token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging(logger, persistent) {\r\n    enableLogging$1(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerDatabase(variant) {\r\n    setSDKVersion(SDK_VERSION$1);\r\n    _registerComponent(new Component('database', (container, { instanceIdentifier: url }) => {\r\n        const app = container.getProvider('app').getImmediate();\r\n        const authProvider = container.getProvider('auth-internal');\r\n        const appCheckProvider = container.getProvider('app-check-internal');\r\n        return repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    registerVersion(name, version, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of {@link runTransaction}.\r\n */\r\nclass TransactionResult {\r\n    /** @hideconstructor */\r\n    constructor(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    toJSON() {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    }\r\n}\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `runTransaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `runTransaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    const applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    const deferred = new Deferred();\r\n    const promiseComplete = (error, committed, node) => {\r\n        let dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    const unwatcher = onValue(ref, () => { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nPersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nConnection;\r\n/**\r\n * @internal\r\n */\r\nconst hijackHash = function (newHash) {\r\n    const oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nRepoInfo;\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n * @internal\r\n */\r\nconst forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\n/**\r\n * Firebase Realtime Database\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterDatabase();\n\nexport { DataSnapshot, Database, OnDisconnect, QueryConstraint, TransactionResult, QueryImpl as _QueryImpl, QueryParams as _QueryParams, ReferenceImpl as _ReferenceImpl, forceRestClient as _TEST_ACCESS_forceRestClient, hijackHash as _TEST_ACCESS_hijackHash, repoManagerDatabaseFromApp as _repoManagerDatabaseFromApp, setSDKVersion as _setSDKVersion, validatePathString as _validatePathString, validateWritablePath as _validateWritablePath, child, connectDatabaseEmulator, enableLogging, endAt, endBefore, equalTo, get, getDatabase, goOffline, goOnline, increment, limitToFirst, limitToLast, off, onChildAdded, onChildChanged, onChildMoved, onChildRemoved, onDisconnect, onValue, orderByChild, orderByKey, orderByPriority, orderByValue, push, query, ref, refFromURL, remove, runTransaction, serverTimestamp, set, setPriority, setWithPriority, startAfter, startAt, update };\n//# sourceMappingURL=index.esm2017.js.map\n","'use strict';\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar fails = require('../internals/fails');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getMethod = require('../internals/get-method');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\nvar concat = uncurryThis([].concat);\nvar push = uncurryThis([].push);\nvar stringIndexOf = uncurryThis(''.indexOf);\nvar stringSlice = uncurryThis(''.slice);\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n      return replacer\n        ? call(replacer, searchValue, O, replaceValue)\n        : call(nativeReplace, toString(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (string, replaceValue) {\n      var rx = anObject(this);\n      var S = toString(string);\n\n      if (\n        typeof replaceValue == 'string' &&\n        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&\n        stringIndexOf(replaceValue, '$<') === -1\n      ) {\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var functionalReplace = isCallable(replaceValue);\n      if (!functionalReplace) replaceValue = toString(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        push(results, result);\n        if (!global) break;\n\n        var matchStr = toString(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = toString(result[0]);\n        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = concat([matched], captures, position, S);\n          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);\n          var replacement = toString(apply(replaceValue, undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + stringSlice(S, nextSourcePosition);\n    }\n  ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vacants.vue?vue&type=style&index=0&id=31552d64&scoped=true&lang=css&\"","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","var call = require('../internals/function-call');\nvar getBuiltIn = require('../internals/get-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar redefine = require('../internals/redefine');\n\nmodule.exports = function () {\n  var Symbol = getBuiltIn('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    redefine(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call(valueOf, this);\n    });\n  }\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var global = require('../internals/global');\nvar isRegExp = require('../internals/is-regexp');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var $ = require('../internals/export');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar fails = require('../internals/fails');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar toObject = require('../internals/to-object');\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$({ target: 'Object', stat: true, forced: FORCED }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];\n  }\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=style&index=0&id=1887e1d3&scoped=true&lang=css&\"","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","export * from '@firebase/database';\n//# sourceMappingURL=index.esm.js.map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"list\"},_vm._l((_vm.list),function(item){return _c('div',{key:item.id,staticClass:\"item\",on:{\"click\":function () { return _vm.setSelectedId(item.id); }}},[_c('div',[_vm._v(_vm._s(item.title))])])}),0),_c('div',{staticClass:\"data\"},[(_vm.selectedId)?_c('div',[_c('div',{staticClass:\"buttons\"},[_c('b-button',{attrs:{\"variant\":\"danger\"},on:{\"click\":function () { return _vm.deleteData(_vm.selectedData.id); }}},[_vm._v(\"Удалить\")])],1),_c('div',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.selectedData.title))]),_c('div',{staticClass:\"caption\"},[_vm._v(_vm._s(_vm.selectedData.caption))]),_c('div',{staticClass:\"nameCategory\"},[_vm._v(\"Что вам предстоит\")]),_c('div',{staticClass:\"caption\"},[_vm._v(_vm._s(_vm.selectedData.responsibilities))]),_c('div',{staticClass:\"nameCategory\"},[_vm._v(\"Что от вас требуется\")]),_c('div',{staticClass:\"caption\"},[_vm._v(_vm._s(_vm.selectedData.expectations))]),_c('div',{staticClass:\"nameCategory\"},[_vm._v(\"Что мы вам предоставим\")]),_c('div',{staticClass:\"caption\"},[_vm._v(_vm._s(_vm.selectedData.benefits))])]):_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/empty.jpg\")}})])]),_c('div',{staticClass:\"add\"},[_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-1\",modifiers:{\"modal-1\":true}}],attrs:{\"variant\":\"success\"}},[_c('b-icon',{attrs:{\"icon\":\"plus-lg\"}})],1)],1),_c('b-modal',{attrs:{\"id\":\"modal-1\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('h5',[_vm._v(\"Создать новую вакансию\")])]},proxy:true},{key:\"default\",fn:function(){return [_c('p',[_vm._v(\"Заполните все поля новой вакансии\")]),_c('b-form-input',{attrs:{\"placeholder\":\"Название вакансии\"},model:{value:(_vm.newVacantion.title),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"title\", $$v)},expression:\"newVacantion.title\"}}),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Описание вакансии\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newVacantion.caption),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"caption\", $$v)},expression:\"newVacantion.caption\"}}),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Обязанности будущего кандидата\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newVacantion.responsibilities),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"responsibilities\", $$v)},expression:\"newVacantion.responsibilities\"}}),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Требования, выдвигаемые к кандидату\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newVacantion.expectations),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"expectations\", $$v)},expression:\"newVacantion.expectations\"}}),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Условия работы\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newVacantion.benefits),callback:function ($$v) {_vm.$set(_vm.newVacantion, \"benefits\", $$v)},expression:\"newVacantion.benefits\"}})]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function () { return _vm.saveData(ok); }}},[_vm._v(\" Сохранить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"list\">\r\n      <div @click=\"() => setSelectedId(item.id)\" v-for=\"item in list\" :key=\"item.id\" class=\"item\">\r\n        <div>{{item.title}}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"data\">\r\n      <div v-if=\"selectedId\">\r\n        <div class=\"buttons\">\r\n          <b-button variant=\"danger\" @click=\"() => deleteData(selectedData.id)\">Удалить</b-button>\r\n        </div>\r\n        <div class=\"title\">{{selectedData.title}}</div>\r\n        <div class=\"caption\">{{selectedData.caption}}</div>\r\n        <div class=\"nameCategory\">Что вам предстоит</div>\r\n        <div class=\"caption\">{{selectedData.responsibilities}}</div>\r\n        <div class=\"nameCategory\">Что от вас требуется</div>\r\n        <div class=\"caption\">{{selectedData.expectations}}</div>\r\n        <div class=\"nameCategory\">Что мы вам предоставим</div>\r\n        <div class=\"caption\">{{selectedData.benefits}}</div>\r\n      </div>\r\n      <div v-else>\r\n        <img src=\"../assets/empty.jpg\">\r\n      </div>\r\n    </div>\r\n    <div class=\"add\">\r\n      <b-button v-b-modal.modal-1 variant=\"success\">\r\n        <b-icon icon=\"plus-lg\"></b-icon>\r\n      </b-button>\r\n    </div>\r\n    <b-modal id=\"modal-1\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <h5>Создать новую вакансию</h5>\r\n      </template>\r\n\r\n      <template class=\"content\" #default>\r\n        <p>Заполните все поля новой вакансии</p>\r\n        <b-form-input v-model=\"newVacantion.title\" placeholder=\"Название вакансии\"></b-form-input>\r\n        <b-form-textarea\r\n          id=\"textarea\"\r\n          v-model=\"newVacantion.caption\"\r\n          placeholder=\"Описание вакансии\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea>\r\n        <b-form-textarea\r\n          id=\"textarea\"\r\n          v-model=\"newVacantion.responsibilities\"\r\n          placeholder=\"Обязанности будущего кандидата\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea>\r\n        <b-form-textarea\r\n          id=\"textarea\"\r\n          v-model=\"newVacantion.expectations\"\r\n          placeholder=\"Требования, выдвигаемые к кандидату\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea>\r\n        <b-form-textarea\r\n          id=\"textarea\"\r\n          v-model=\"newVacantion.benefits\"\r\n          placeholder=\"Условия работы\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"() => saveData(ok)\">\r\n          Сохранить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDatabase, ref, child, get, set } from 'firebase/database'\r\nexport default {\r\n  mounted () {\r\n    if (!this.$store.getters.getEmail) {\r\n      this.$router.push('/')\r\n    }\r\n    this.loadData()\r\n  },\r\n  computed: {\r\n    selectedData () {\r\n      return this.list.find((item) => item.id.toString() === this.selectedId.toString())\r\n    }\r\n  },\r\n  methods: {\r\n    setSelectedId (id) {\r\n      this.selectedId = id.toString()\r\n    },\r\n    async deleteData (id) {\r\n      const db = getDatabase()\r\n      await set(ref(db, 'vacancies/' + id), null)\r\n      this.selectedId = 0\r\n      this.loadData()\r\n    },\r\n    loadData () {\r\n      const dbRef = ref(getDatabase())\r\n      get(child(dbRef, 'vacancies')).then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          const data = Object.values(snapshot.val())\r\n          this.list = data || []\r\n        } else {\r\n          console.log('No data available')\r\n        }\r\n      }).catch((error) => {\r\n        console.error(error)\r\n      })\r\n    },\r\n    saveData (func) {\r\n      const db = getDatabase()\r\n      const id = Number(new Date())\r\n      set(ref(db, 'vacancies/' + id), {\r\n        id: id,\r\n        ...this.newVacantion\r\n      })\r\n      func()\r\n      this.clearData()\r\n      this.loadData()\r\n    },\r\n    clearData () {\r\n      this.newVacantion = {\r\n        title: '',\r\n        caption: '',\r\n        responsibilities: '',\r\n        expectations: '',\r\n        benefits: ''\r\n      }\r\n    }\r\n  },\r\n  data: () => ({\r\n    list: [],\r\n    selectedId: 0,\r\n    newVacantion: {\r\n      title: '',\r\n      caption: '',\r\n      responsibilities: '',\r\n      expectations: '',\r\n      benefits: ''\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n}\r\n\r\n.list {\r\n  height: calc(100vh - 100px);\r\n  width: 30%;\r\n  overflow: auto;\r\n  box-shadow: 6px 1px 13px -3px rgba(34, 60, 80, 0.17);\r\n}\r\n\r\n.data {\r\n  height: calc(100vh - 100px);\r\n  padding: 20px;\r\n  overflow: auto;\r\n  width: 100%;\r\n}\r\n\r\n.item {\r\n  display: flex;\r\n  font-size: 13px;\r\n  padding: 5px;\r\n  font-weight: bolder;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #c1c1c1;\r\n  transition: .1s;\r\n}\r\n\r\n.item:hover {\r\n  background-color: #faeaff;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.title {\r\n  font-weight: bolder;\r\n  font-size: 30px;\r\n}\r\n\r\n.caption {\r\n  text-align: left;\r\n  color: #858585;\r\n}\r\n\r\n.nameCategory {\r\n  text-align: left;\r\n  font-weight: bolder;\r\n  font-size: 16px;\r\n  margin: 12px 0;\r\n}\r\n\r\n.add {\r\n  position: absolute;\r\n  bottom: 30px;\r\n  right: 30px;\r\n}\r\n\r\n#textarea {\r\n  margin: 10px 0;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vacants.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vacants.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Vacants.vue?vue&type=template&id=31552d64&scoped=true&\"\nimport script from \"./Vacants.vue?vue&type=script&lang=js&\"\nexport * from \"./Vacants.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Vacants.vue?vue&type=style&index=0&id=31552d64&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"31552d64\",\n  null\n  \n)\n\nexport default component.exports","var DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\nvar propertyIsEnumerable = uncurryThis($propertyIsEnumerable);\nvar push = uncurryThis([].push);\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {\n        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","var isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","'use strict';\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar regexpFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar shared = require('../internals/shared');\nvar create = require('../internals/object-create');\nvar getInternalState = require('../internals/internal-state').get;\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\nvar nativeExec = RegExp.prototype.exec;\nvar patchedExec = nativeExec;\nvar charAt = uncurryThis(''.charAt);\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  call(nativeExec, re1, 'a');\n  call(nativeExec, re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\n\nif (PATCH) {\n  patchedExec = function exec(string) {\n    var re = this;\n    var state = getInternalState(re);\n    var str = toString(string);\n    var raw = state.raw;\n    var result, reCopy, lastIndex, match, i, object, group;\n\n    if (raw) {\n      raw.lastIndex = re.lastIndex;\n      result = call(patchedExec, raw, str);\n      re.lastIndex = raw.lastIndex;\n      return result;\n    }\n\n    var groups = state.groups;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = call(regexpFlags, re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = replace(flags, 'y', '');\n      if (indexOf(flags, 'g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = stringSlice(str, re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = call(nativeExec, sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = stringSlice(match.input, charsAdded);\n        match[0] = stringSlice(match[0], charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      call(nativeReplace, match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    if (match && groups) {\n      match.groups = object = create(null);\n      for (i = 0; i < groups.length; i++) {\n        group = groups[i];\n        object[group[0]] = match[group[1]];\n      }\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nvar UNSUPPORTED_Y = fails(function () {\n  var re = $RegExp('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\n// UC Browser bug\n// https://github.com/zloirock/core-js/issues/1008\nvar MISSED_STICKY = UNSUPPORTED_Y || fails(function () {\n  return !$RegExp('a', 'y').sticky;\n});\n\nvar BROKEN_CARET = UNSUPPORTED_Y || fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = $RegExp('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n\nmodule.exports = {\n  BROKEN_CARET: BROKEN_CARET,\n  MISSED_STICKY: MISSED_STICKY,\n  UNSUPPORTED_Y: UNSUPPORTED_Y\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar un$Join = uncurryThis([].join);\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return un$Join(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.symbol.constructor');\nrequire('../modules/es.symbol.for');\nrequire('../modules/es.symbol.key-for');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.object.get-own-property-symbols');\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar arraySlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = arraySlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n    var dummy = this;\n    // check on 1..constructor(foo) case\n    return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })\n      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n","var DESCRIPTORS = require('../internals/descriptors');\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar functionToString = uncurryThis(FunctionPrototype.toString);\nvar nameRE = /function\\b(?:\\s|\\/\\*[\\S\\s]*?\\*\\/|\\/\\/[^\\n\\r]*[\\n\\r]+)*([^\\s(/]*)/;\nvar regExpExec = uncurryThis(nameRE.exec);\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return regExpExec(nameRE, functionToString(this))[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/native-symbol-registry');\n\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  'for': function (key) {\n    var string = toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  }\n});\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","var bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_vm._m(0),(_vm.isShowLogin)?_c('Login',{on:{\"toggleShow\":_vm.toggleShowLogin}}):_c('Signup',{on:{\"toggleShow\":_vm.toggleShowLogin}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"img\"},[_c('img',{attrs:{\"alt\":\"BackGround Icon\",\"src\":require(\"../assets/login.jpg\")}})])}]\n\nexport { render, staticRenderFns }","var render = function () {\nvar this$1 = this;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"label\"},[_vm._v(\"Авторизация\")]),_c('b-form-input',{attrs:{\"type\":\"text\",\"placeholder\":\"Введите почту\"},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}}),_c('b-form-input',{attrs:{\"type\":\"password\",\"placeholder\":\"Введите пароль\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('div',{staticClass:\"buttons\"},[_c('b-button',{staticClass:\"login\",attrs:{\"variant\":\"success\"},on:{\"click\":_vm.login}},[_vm._v(\"Войти\")]),_c('b-button',{on:{\"click\":function () { return this$1.$emit('toggleShow'); }}},[_vm._v(\"Регистрация\")])],1)],1),_c('b-alert',{staticClass:\"alert\",attrs:{\"show\":_vm.isError,\"variant\":\"danger\"}},[_vm._v(\"Неверный логин или пароль\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"label\">Авторизация</div>\r\n      <b-form-input v-model=\"email\" type=\"text\" placeholder=\"Введите почту\"></b-form-input>\r\n      <b-form-input v-model=\"password\" type=\"password\" placeholder=\"Введите пароль\"></b-form-input>\r\n      <div class=\"buttons\">\r\n        <b-button class=\"login\" @click=\"login\" variant=\"success\">Войти</b-button>\r\n        <b-button @click=\"() => this.$emit('toggleShow')\" >Регистрация</b-button>\r\n      </div>\r\n    </div>\r\n    <b-alert :show=\"isError\" class=\"alert\" variant=\"danger\">Неверный логин или пароль</b-alert>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data: () => ({\r\n    email: '',\r\n    password: '',\r\n    isError: false\r\n  }),\r\n  methods: {\r\n    async login () {\r\n      const formData = {\r\n        email: this.email,\r\n        password: this.password\r\n      }\r\n      try {\r\n        await this.$store.dispatch('login', formData)\r\n        this.$router.push('/vacancies')\r\n      } catch (e) {\r\n        this.isError = true\r\n        // eslint-disable-next-line no-return-assign\r\n        setTimeout(() => this.isError = false, 2000)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.wrapper {\r\n  height: calc(100vh - 100px);\r\n  background-color: #AF7AC4;\r\n  display: flex;\r\n  gap: 24px;\r\n  box-sizing: border-box;\r\n  padding: 24px 70px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.label {\r\n  width: 100%;\r\n  font-size: 22px;\r\n  font-weight: bolder;\r\n  color: black;\r\n  margin-top: 50px;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  gap: 16px;\r\n  justify-content: center;\r\n}\r\n\r\n.login {\r\n  width: 150px;\r\n  background-color: #8E44AD;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.login:hover, .login:focus {\r\n  background-color: #9a3fbe;\r\n}\r\n\r\n.login:focus {\r\n  background-color: #9a3fbe;\r\n}\r\n\r\n.alert {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 10px 20px;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=0678ed4f&scoped=true&\"\nimport script from \"./Login.vue?vue&type=script&lang=js&\"\nexport * from \"./Login.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Login.vue?vue&type=style&index=0&id=0678ed4f&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0678ed4f\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {\nvar this$1 = this;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"label\"},[_vm._v(\"Регистрация\")]),_c('b-form-input',{attrs:{\"type\":\"text\",\"placeholder\":\"Введите почту\"},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}}),_c('b-form-input',{attrs:{\"type\":\"password\",\"placeholder\":\"Введите пароль\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('b-form-input',{attrs:{\"type\":\"password\",\"placeholder\":\"Повторите пароль\"},model:{value:(_vm.password2),callback:function ($$v) {_vm.password2=$$v},expression:\"password2\"}}),_c('div',{staticClass:\"buttons\"},[_c('b-button',{staticClass:\"login\",attrs:{\"variant\":\"success\"},on:{\"click\":_vm.signup}},[_vm._v(\"Зарегестрироваться\")]),_c('b-button',{on:{\"click\":function () { return this$1.$emit('toggleShow'); }}},[_vm._v(\"Войти\")])],1)],1),_c('b-alert',{staticClass:\"alert\",attrs:{\"show\":_vm.isError,\"variant\":\"danger\"}},[_vm._v(\"Ошибка авторизации\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"label\">Регистрация</div>\r\n      <b-form-input v-model=\"email\" type=\"text\" placeholder=\"Введите почту\"></b-form-input>\r\n      <b-form-input v-model=\"password\" type=\"password\" placeholder=\"Введите пароль\"></b-form-input>\r\n      <b-form-input v-model=\"password2\" type=\"password\" placeholder=\"Повторите пароль\"></b-form-input>\r\n      <div class=\"buttons\">\r\n        <b-button class=\"login\"  @click=\"signup\" variant=\"success\">Зарегестрироваться</b-button>\r\n        <b-button @click=\"() => this.$emit('toggleShow')\">Войти</b-button>\r\n      </div>\r\n    </div>\r\n    <b-alert :show=\"isError\" class=\"alert\" variant=\"danger\">Ошибка авторизации</b-alert>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Signup',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data: () => ({\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    isError: false\r\n  }),\r\n  methods: {\r\n    async signup () {\r\n      if (this.password !== this.password2) {\r\n        this.showAlert()\r\n      }\r\n\r\n      const formData = {\r\n        email: this.email,\r\n        password: this.password\r\n      }\r\n      try {\r\n        await this.$store.dispatch('signup', formData)\r\n        this.$router.push('/')\r\n      } catch (e) {\r\n        this.showAlert()\r\n      }\r\n    },\r\n    showAlert () {\r\n      this.isError = true\r\n      // eslint-disable-next-line no-return-assign\r\n      setTimeout(() => this.isError = false, 2000)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.wrapper {\r\n  height: calc(100vh - 100px);\r\n  background-color: #AF7AC4;\r\n  display: flex;\r\n  gap: 24px;\r\n  box-sizing: border-box;\r\n  padding: 24px 70px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.label {\r\n  width: 100%;\r\n  font-size: 22px;\r\n  font-weight: bolder;\r\n  color: black;\r\n  margin-top: 50px;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  gap: 16px;\r\n  justify-content: center;\r\n}\r\n\r\n.login {\r\n  background-color: #8E44AD;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.login:hover, .login:focus {\r\n  background-color: #9a3fbe;\r\n}\r\n\r\n.login:focus {\r\n  background-color: #9a3fbe;\r\n}\r\n\r\n.alert {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 10px 20px;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Signup.vue?vue&type=template&id=4073be30&scoped=true&\"\nimport script from \"./Signup.vue?vue&type=script&lang=js&\"\nexport * from \"./Signup.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Signup.vue?vue&type=style&index=0&id=4073be30&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4073be30\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"img\">\r\n      <img alt=\"BackGround Icon\" src=\"../assets/login.jpg\">\r\n    </div>\r\n    <Login @toggleShow=\"toggleShowLogin\" v-if=\"isShowLogin\"/>\r\n    <Signup @toggleShow=\"toggleShowLogin\" v-else/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\n\r\nimport Login from '@/components/Login'\r\nimport Signup from '@/components/Signup'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  components: {\r\n    Login,\r\n    Signup\r\n  },\r\n  data: () => ({\r\n    isShowLogin: true\r\n  }),\r\n  methods: {\r\n    toggleShowLogin () {\r\n      this.isShowLogin = !this.isShowLogin\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n  height: calc(100vh - 100px);\r\n}\r\n\r\n.img {\r\n  margin-top: 50px;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=409c4974&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=409c4974&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"409c4974\",\n  null\n  \n)\n\nexport default component.exports","var $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/native-symbol-registry');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput.vue?vue&type=style&index=0&id=f9b355e8&scoped=true&lang=css&\"","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","module.exports = __webpack_public_path__ + \"img/login.bdf917b0.jpg\";","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar redefine = require('../internals/redefine');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var uncurriedNativeMethod = uncurryThis(nativeMethod);\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };\n        }\n        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    redefine(String.prototype, KEY, methods[0]);\n    redefine(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\n\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar TypeError = global.TypeError;\nvar QObject = global.QObject;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar push = uncurryThis([].push);\n\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar WellKnownSymbolsStore = shared('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      push(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  redefine(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar ownKeys = require('../internals/own-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar createProperty = require('../internals/create-property');\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es-x/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')();\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) != '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) != '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) != '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = replacer;\n  if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n  if (!isArray(replacer)) replacer = function (key, value) {\n    if (isCallable($replacer)) value = call($replacer, this, key, value);\n    if (!isSymbol(value)) return value;\n  };\n  args[1] = replacer;\n  return apply($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({ target: 'JSON', stat: true, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"list\"},[_c('span',[_vm._v(\"Фильтры\")]),_c('b-form-input',{staticClass:\"searchName\",attrs:{\"placeholder\":\"Поиск по имени\"},model:{value:(_vm.searchUser),callback:function ($$v) {_vm.searchUser=$$v},expression:\"searchUser\"}}),_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('b-form-select',{staticClass:\"form-control\",staticStyle:{\"width\":\"84%\",\"margin\":\"8px\"},attrs:{\"options\":_vm.jobList,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},model:{value:(_vm.filterJob),callback:function ($$v) {_vm.filterJob=$$v},expression:\"filterJob\"}}),_c('b-icon',{staticStyle:{\"fill\":\"red\",\"right\":\"20px\",\"position\":\"absolute\",\"margin-top\":\"-34px\"},attrs:{\"icon\":\"x-square-fill\",\"variant\":\"error\"},on:{\"click\":function () { return _vm.filterJob = 0; }}})],1),_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('b-form-select',{staticClass:\"form-control\",staticStyle:{\"width\":\"84%\",\"margin\":\"8px\"},attrs:{\"options\":_vm.statusOptions,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},model:{value:(_vm.filterStatus),callback:function ($$v) {_vm.filterStatus=$$v},expression:\"filterStatus\"}}),_c('b-icon',{staticStyle:{\"fill\":\"red\",\"right\":\"20px\",\"position\":\"absolute\",\"margin-top\":\"-34px\"},attrs:{\"icon\":\"x-square-fill\",\"variant\":\"error\"},on:{\"click\":function () { return _vm.filterStatus = 0; }}})],1),_c('hr'),_vm._l((_vm.filteredList),function(item){return _c('div',{key:item.id,staticClass:\"item\",on:{\"click\":function () { return _vm.setSelectedId(item.id); }}},[_c('b-avatar',{attrs:{\"variant\":\"info\",\"src\":item.avatar}}),_c('div',[_vm._v(_vm._s(item.name))]),(item.status === '8')?_c('div',{staticClass:\"success\"}):(item.status === '9')?_c('div',{staticClass:\"fail\"}):_c('div',{staticClass:\"progress\"})],1)})],2),_c('div',{staticClass:\"data\"},[(_vm.selectedId)?_c('div',[_c('div',{staticClass:\"buttons\"},[_c('b-button',{attrs:{\"size\":\"sm\",\"variant\":\"outline-primary\"},on:{\"click\":_vm.downloadResume}},[_c('b-icon',{attrs:{\"icon\":\"file-earmark-arrow-down\",\"aria-hidden\":\"true\"}}),_vm._v(\" Резюме \")],1),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-3\",modifiers:{\"modal-3\":true}}],attrs:{\"size\":\"sm\",\"variant\":\"outline-primary\"}},[_c('b-icon',{attrs:{\"icon\":\"person-circle\",\"aria-hidden\":\"true\"}}),_vm._v(\" Статус \")],1),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-5\",modifiers:{\"modal-5\":true}}],attrs:{\"size\":\"sm\",\"variant\":\"outline-primary\"}},[_c('b-icon',{attrs:{\"icon\":\"question-circle\",\"aria-hidden\":\"true\"}}),_vm._v(\" Тесты \")],1),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-2\",modifiers:{\"modal-2\":true}}],attrs:{\"size\":\"sm\",\"variant\":\"outline-primary\"}},[_c('b-icon',{attrs:{\"icon\":\"envelope\",\"aria-hidden\":\"true\"}}),_vm._v(\" Написать \")],1),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-4\",modifiers:{\"modal-4\":true}}],attrs:{\"size\":\"sm\",\"variant\":\"outline-primary\"}},[_c('b-icon',{attrs:{\"icon\":\"chat-right-text\",\"aria-hidden\":\"true\"}}),_vm._v(\" Комментарий \")],1),_c('b-button',{attrs:{\"variant\":\"danger\"},on:{\"click\":function () { return _vm.deleteData(_vm.selectedData.id); }}},[_vm._v(\"Удалить\")])],1),_c('div',{staticClass:\"mainInfo\"},[_c('div',{staticClass:\"photo\"},[_c('img',{attrs:{\"src\":_vm.selectedData.avatar}})]),_c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('div',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.selectedData.name))]),_c('div',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.age)+\" лет, \"+_vm._s(_vm.selectedData.city))]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Пол:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.male))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Почта:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.email))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Телефон:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.phone))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Образование:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.education))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"HR-сотрудник:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.hrEmail))])]),_c('div',[_c('span',{staticClass:\"userLabel\"},[_vm._v(\"Вакансия:\")]),_c('span',{staticClass:\"age\"},[_vm._v(_vm._s(_vm.selectedData.vacation))])])])]),_c('div',{staticClass:\"user-about\"},[_vm._v(\" \"+_vm._s(_vm.selectedData.about)+\" \")])]):_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/empty.jpg\")}})])]),_c('div',{staticClass:\"add\"},[_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-1\",modifiers:{\"modal-1\":true}}],attrs:{\"variant\":\"success\"}},[_c('b-icon',{attrs:{\"icon\":\"plus-lg\"}})],1)],1),_c('b-modal',{attrs:{\"id\":\"modal-1\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('div',{staticClass:\"head\"},[_c('h5',[_vm._v(\"Создать нового кандидата\")])])]},proxy:true},{key:\"default\",fn:function(){return [_c('div',{staticClass:\"content\"},[_c('div',{staticStyle:{\"display\":\"flex\",\"gap\":\"16px\"}},[_c('FileInput',{on:{\"change\":_vm.saveAvatar}}),_c('FileInputTwo',{on:{\"change\":_vm.saveResume}})],1),_c('div',{staticClass:\"row\"},[_c('b-form-input',{staticStyle:{\"width\":\"355px\"},attrs:{\"placeholder\":\"ФИО кандидата\"},model:{value:(_vm.newUser.name),callback:function ($$v) {_vm.$set(_vm.newUser, \"name\", $$v)},expression:\"newUser.name\"}}),_c('b-form-select',{staticClass:\"form-control\",staticStyle:{\"width\":\"100px\"},attrs:{\"options\":_vm.optionsMale,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},model:{value:(_vm.newUser.male),callback:function ($$v) {_vm.$set(_vm.newUser, \"male\", $$v)},expression:\"newUser.male\"}})],1),_c('div',{staticClass:\"row\"},[_c('b-form-input',{attrs:{\"type\":\"number\",\"placeholder\":\"Возраст\"},model:{value:(_vm.newUser.age),callback:function ($$v) {_vm.$set(_vm.newUser, \"age\", $$v)},expression:\"newUser.age\"}}),_c('b-form-input',{attrs:{\"placeholder\":\"Город проживания\"},model:{value:(_vm.newUser.city),callback:function ($$v) {_vm.$set(_vm.newUser, \"city\", $$v)},expression:\"newUser.city\"}})],1),_c('div',{staticClass:\"row\"},[_c('b-form-input',{attrs:{\"type\":\"email\",\"placeholder\":\"Почта\"},model:{value:(_vm.newUser.email),callback:function ($$v) {_vm.$set(_vm.newUser, \"email\", $$v)},expression:\"newUser.email\"}}),_c('b-form-input',{attrs:{\"type\":\"tel\",\"placeholder\":\"Номер телефона\"},model:{value:(_vm.newUser.phone),callback:function ($$v) {_vm.$set(_vm.newUser, \"phone\", $$v)},expression:\"newUser.phone\"}})],1),_c('b-form-input',{attrs:{\"placeholder\":\"Образование\"},model:{value:(_vm.newUser.education),callback:function ($$v) {_vm.$set(_vm.newUser, \"education\", $$v)},expression:\"newUser.education\"}}),_c('b-form-input',{attrs:{\"placeholder\":\"О себе\"},model:{value:(_vm.newUser.about),callback:function ($$v) {_vm.$set(_vm.newUser, \"about\", $$v)},expression:\"newUser.about\"}}),_c('div',{staticClass:\"label\"},[_vm._v(\"Вакансия, на которую претендует кандидат\")]),_c('b-form-select',{staticClass:\"form-control\",attrs:{\"options\":_vm.jobList,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},model:{value:(_vm.newUser.vacation),callback:function ($$v) {_vm.$set(_vm.newUser, \"vacation\", $$v)},expression:\"newUser.vacation\"}}),_c('div',{staticClass:\"label\"},[_vm._v(\"Комментарий HR\")]),_c('b-form-textarea',{attrs:{\"placeholder\":\"Введите комментарий\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.newUser.comment),callback:function ($$v) {_vm.$set(_vm.newUser, \"comment\", $$v)},expression:\"newUser.comment\"}})],1)]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function () { return _vm.saveData(ok); }}},[_vm._v(\" Сохранить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])}),_c('b-modal',{attrs:{\"id\":\"modal-2\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('div',{staticClass:\"head\"},[_c('h5',[_vm._v(\"Отправить письмо на почту\")])])]},proxy:true},{key:\"default\",fn:function(){return [_c('div',[_c('b-form-textarea',{attrs:{\"placeholder\":\"Введите сообщение\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.mailText),callback:function ($$v) {_vm.mailText=$$v},expression:\"mailText\"}}),_c('span',{staticStyle:{\"color\":\"#858585\"}},[_vm._v(\"Сообщение может попасть в спам!\")])],1)]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function () {_vm.sendMailTo(); ok()}}},[_vm._v(\" Отправить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])}),_c('b-modal',{attrs:{\"id\":\"modal-3\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('div',{staticClass:\"head\"},[_c('h5',[_vm._v(\"Статус кандидата\")])])]},proxy:true},{key:\"default\",fn:function(){return [_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('b-form-select',{staticClass:\"form-control\",staticStyle:{\"width\":\"250px\"},attrs:{\"options\":_vm.statusOptions,\"value-field\":\"item\",\"text-field\":\"name\",\"disabled-field\":\"notEnabled\"},on:{\"change\":_vm.setStatus},model:{value:(_vm.selectedData.status),callback:function ($$v) {_vm.$set(_vm.selectedData, \"status\", $$v)},expression:\"selectedData.status\"}}),_c('span',{staticStyle:{\"color\":\"#858585\"}},[_vm._v(\"Для обновления статуса нажмите на поле ввода\")])],1)]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function($event){return ok()}}},[_vm._v(\" Сохранить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])}),_c('b-modal',{attrs:{\"id\":\"modal-4\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('div',{staticClass:\"head\"},[_c('h5',[_vm._v(\"Комментарий\")])])]},proxy:true},{key:\"default\",fn:function(){return [_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[_c('b-form-textarea',{attrs:{\"placeholder\":\"Введите комментарий\",\"rows\":\"3\",\"max-rows\":\"5\"},model:{value:(_vm.selectedData.comment),callback:function ($$v) {_vm.$set(_vm.selectedData, \"comment\", $$v)},expression:\"selectedData.comment\"}})],1)]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function($event){_vm.updateData(); ok()}}},[_vm._v(\" Сохранить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])}),_c('b-modal',{attrs:{\"id\":\"modal-5\",\"title\":\"BootstrapVue\"},scopedSlots:_vm._u([{key:\"modal-header\",fn:function(){return [_c('div',{staticClass:\"head\"},[_c('h5',[_vm._v(\"Решенные тесты кандидата\")])])]},proxy:true},{key:\"default\",fn:function(){return [_c('div',[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[_c('FileInputTwo',{on:{\"change\":_vm.saveTest}})],1),(_vm.selectedData.test)?_c('div',[_c('b-button',{attrs:{\"size\":\"sm\",\"variant\":\"outline-primary\"},on:{\"click\":_vm.downloadTest}},[_c('b-icon',{attrs:{\"icon\":\"file-earmark-arrow-down\",\"aria-hidden\":\"true\"}}),_vm._v(\" Скачать \")],1)],1):_vm._e()])]},proxy:true},{key:\"modal-footer\",fn:function(ref){\nvar ok = ref.ok;\nvar cancel = ref.cancel;\nreturn [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function($event){_vm.updateData(); ok()}}},[_vm._v(\" Сохранить \")]),_c('b-button',{on:{\"click\":function($event){return cancel()}}},[_vm._v(\" Отменить \")])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('label',{attrs:{\"for\":_vm.fileKey,\"title\":\"Загрузить фотографию\"}},[_c('b-avatar',{staticClass:\"fileLabel\",attrs:{\"src\":_vm.avatar,\"size\":\"6rem\"}})],1),_c('input',{ref:_vm.fileKey,staticClass:\"fileInput\",attrs:{\"type\":\"file\",\"id\":_vm.fileKey,\"name\":_vm.fileKey},on:{\"change\":_vm.handlerInputFile}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <label :for=\"fileKey\" title=\"Загрузить фотографию\">\r\n      <b-avatar :src='avatar' class=\"fileLabel\" size=\"6rem\"></b-avatar>\r\n    </label>\r\n    <input\r\n      :ref=\"fileKey\"\r\n      type=\"file\"\r\n      :id=\"fileKey\"\r\n      :name=\"fileKey\"\r\n      class=\"fileInput\"\r\n      @change=\"handlerInputFile\"\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FileInput',\r\n\r\n  data: () => ({\r\n    fileKey: Math.random(),\r\n    avatar: 'photo.png'\r\n  }),\r\n\r\n  methods: {\r\n    handlerInputFile () {\r\n      const file = this.$refs[this.fileKey].files[0]\r\n\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onload = () => {\r\n        this.avatar = reader.result\r\n      }\r\n      this.$emit('change', file)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.fileInput {\r\n  display: none;\r\n}\r\n\r\n.fileLabel {\r\n  transition: .1s;\r\n  cursor: pointer;\r\n}\r\n\r\n.fileLabel:hover {\r\n  box-shadow: 2px 4px 19px 0 rgba(34, 60, 80, 0.2);\r\n  opacity: .8;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileInput.vue?vue&type=template&id=f9b355e8&scoped=true&\"\nimport script from \"./FileInput.vue?vue&type=script&lang=js&\"\nexport * from \"./FileInput.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FileInput.vue?vue&type=style&index=0&id=f9b355e8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f9b355e8\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('label',{attrs:{\"for\":_vm.fileKey,\"title\":\"Загрузить резюме\"}},[_c('div',{staticClass:\"wrapper\"},[(_vm.file)?_c('b-icon',{attrs:{\"font-scale\":\"4\",\"icon\":\"file-earmark-check\"}}):_c('b-icon',{attrs:{\"font-scale\":\"4\",\"icon\":\"file-earmark\"}})],1)]),_c('input',{ref:_vm.fileKey,staticClass:\"fileInput\",attrs:{\"type\":\"file\",\"accept\":\".doc\",\"id\":_vm.fileKey,\"name\":_vm.fileKey},on:{\"change\":_vm.handlerInputFile}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <label :for=\"fileKey\" title=\"Загрузить резюме\">\r\n      <div class=\"wrapper\">\r\n        <b-icon v-if=\"file\" font-scale=\"4\" icon=\"file-earmark-check\"></b-icon>\r\n        <b-icon v-else font-scale=\"4\" icon=\"file-earmark\"></b-icon>\r\n      </div>\r\n    </label>\r\n    <input\r\n      :ref=\"fileKey\"\r\n      type=\"file\"\r\n      accept=\".doc\"\r\n      :id=\"fileKey\"\r\n      :name=\"fileKey\"\r\n      class=\"fileInput\"\r\n      @change=\"handlerInputFile\"\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FileInputTwo',\r\n\r\n  data: () => ({\r\n    fileKey: Math.random(),\r\n    file: undefined\r\n  }),\r\n\r\n  methods: {\r\n    handlerInputFile () {\r\n      const file = this.$refs[this.fileKey].files[0]\r\n\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onload = () => {\r\n        this.file = reader.result\r\n      }\r\n      this.$emit('change', file)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.fileInput {\r\n  display: none;\r\n}\r\n\r\n.wrapper {\r\n  background-color: #eaeaea;\r\n  border-radius: 50px;\r\n  padding: 15px;\r\n  transition: .1s;\r\n  cursor: pointer;\r\n}\r\n\r\n.wrapper:hover {\r\n  box-shadow: 2px 4px 19px 0 rgba(34, 60, 80, 0.2);\r\n  opacity: .8;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput-2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileInput-2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileInput-2.vue?vue&type=template&id=07114e76&scoped=true&\"\nimport script from \"./FileInput-2.vue?vue&type=script&lang=js&\"\nexport * from \"./FileInput-2.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FileInput-2.vue?vue&type=style&index=0&id=07114e76&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"07114e76\",\n  null\n  \n)\n\nexport default component.exports","export function sendEmail (text, email) {\r\n  const baseUrl = 'https://api.unisender.com/ru/api/sendEmail?format=json&api_key=61695smjxb8jcdcjeq3zu7prbzx55386xgtsanna'\r\n  const emailTo = 'email=' + email\r\n  const sender = 'sender_name=HuntFlow&sender_email=hantflow2022@gmail.com&subject=Sample+Subject'\r\n  const text2 = 'body=' + text\r\n  const url = baseUrl + '&' + emailTo + '&' + sender + '&' + text2 + '&list_id=1'\r\n  fetch(url)\r\n}\r\n\r\nexport function sendUpdatedStatus (id, email) {\r\n  const text = {\r\n    1: 'Вас внесли в систему в huntflow. Ваше резюме рассматривается руководством!',\r\n    2: 'Вам необходимо пройти тестирование! Результаты отправьте своему HR! Удачи! https://drive.google.com/file/d/1PXAdPQIqqam4RoMuiNQ9QDhpYKMqzp-T/view?usp=sharing',\r\n    3: 'Вы успешно прошли тестирование, в ближайшее время с Вами свяжется HR для индивидуального разговора!',\r\n    4: 'Вы успешно прошли предыдущие этапы. В ближайшее время у Вас будет собеседование с руководителем!',\r\n    5: 'Вы успешно прошли предыдущие этапы! Теперь вас проверяет отдел ИБ!',\r\n    6: 'Вы успешно прошли все предыдущие этапы! Теперь вам необходимо пройти мед. комиссию!',\r\n    7: 'Вы успешно прошли предыдущие этапы! С вами свяжется hr для выставления оффера!',\r\n    8: 'Вы приняты на работу! Поздравляем!',\r\n    9: 'К сожалению, наша компания не готова вас принять!'\r\n  }\r\n\r\n  sendEmail(text[id], email)\r\n}\r\n","<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"list\">\r\n      <span>Фильтры</span>\r\n      <b-form-input class=\"searchName\" v-model=\"searchUser\" placeholder=\"Поиск по имени\"></b-form-input>\r\n      <div style=\"position: relative\">\r\n        <b-form-select\r\n          class=\"form-control\"\r\n          style=\"width: 84%; margin: 8px\"\r\n          v-model=\"filterJob\"\r\n          :options=\"jobList\"\r\n          value-field=\"item\"\r\n          text-field=\"name\"\r\n          disabled-field=\"notEnabled\"\r\n        ></b-form-select>\r\n        <b-icon @click=\"() => filterJob = 0\" icon=\"x-square-fill\" variant=\"error\" style=\"fill: red; right: 20px; position: absolute; margin-top: -34px;\"></b-icon>\r\n      </div>\r\n      <div style=\"position: relative\">\r\n        <b-form-select\r\n          class=\"form-control\"\r\n          style=\"width: 84%; margin: 8px\"\r\n          v-model=\"filterStatus\"\r\n          :options=\"statusOptions\"\r\n          value-field=\"item\"\r\n          text-field=\"name\"\r\n          disabled-field=\"notEnabled\"\r\n        ></b-form-select>\r\n        <b-icon @click=\"() => filterStatus = 0\" icon=\"x-square-fill\" variant=\"error\" style=\"fill: red; right: 20px; position: absolute; margin-top: -34px;\"></b-icon>\r\n      </div>\r\n      <hr />\r\n      <!--      -->\r\n      <div @click=\"() => setSelectedId(item.id)\" v-for=\"item in filteredList\" :key=\"item.id\" class=\"item\">\r\n        <b-avatar variant=\"info\" :src=\"item.avatar\"></b-avatar>\r\n        <div>{{item.name}}</div>\r\n        <div v-if=\"item.status === '8'\" class=\"success\"></div>\r\n        <div v-else-if=\"item.status === '9'\" class=\"fail\"></div>\r\n        <div v-else class=\"progress\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"data\">\r\n      <div v-if=\"selectedId\">\r\n        <div class=\"buttons\">\r\n          <b-button size=\"sm\" @click=\"downloadResume\" variant=\"outline-primary\">\r\n            <b-icon icon=\"file-earmark-arrow-down\" aria-hidden=\"true\"></b-icon> Резюме\r\n          </b-button>\r\n          <b-button size=\"sm\" v-b-modal.modal-3 variant=\"outline-primary\">\r\n            <b-icon icon=\"person-circle\" aria-hidden=\"true\"></b-icon> Статус\r\n          </b-button>\r\n          <b-button size=\"sm\"  v-b-modal.modal-5 variant=\"outline-primary\">\r\n            <b-icon icon=\"question-circle\" aria-hidden=\"true\"></b-icon> Тесты\r\n          </b-button>\r\n          <b-button size=\"sm\"  v-b-modal.modal-2 variant=\"outline-primary\">\r\n            <b-icon icon=\"envelope\" aria-hidden=\"true\"></b-icon> Написать\r\n          </b-button>\r\n          <b-button size=\"sm\"  v-b-modal.modal-4 variant=\"outline-primary\">\r\n            <b-icon icon=\"chat-right-text\" aria-hidden=\"true\"></b-icon> Комментарий\r\n          </b-button>\r\n          <b-button variant=\"danger\" @click=\"() => deleteData(selectedData.id)\">Удалить</b-button>\r\n        </div>\r\n        <div class=\"mainInfo\">\r\n          <div class=\"photo\">\r\n            <img :src=\"selectedData.avatar\">\r\n          </div>\r\n          <div style=\"text-align: left\">\r\n            <div class=\"name\">{{selectedData.name}}</div>\r\n            <div class=\"age\">{{selectedData.age}} лет, {{selectedData.city}}</div>\r\n            <div>\r\n              <span class=\"userLabel\">Пол:</span>\r\n              <span class=\"age\">{{selectedData.male}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">Почта:</span>\r\n              <span class=\"age\">{{selectedData.email}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">Телефон:</span>\r\n              <span class=\"age\">{{selectedData.phone}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">Образование:</span>\r\n              <span class=\"age\">{{selectedData.education}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">HR-сотрудник:</span>\r\n              <span class=\"age\">{{selectedData.hrEmail}}</span>\r\n            </div>\r\n            <div>\r\n              <span class=\"userLabel\">Вакансия:</span>\r\n              <span class=\"age\">{{selectedData.vacation}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"user-about\">\r\n          {{selectedData.about}}\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <img src=\"../assets/empty.jpg\">\r\n      </div>\r\n    </div>\r\n    <div class=\"add\">\r\n      <b-button v-b-modal.modal-1 variant=\"success\">\r\n        <b-icon icon=\"plus-lg\"></b-icon>\r\n      </b-button>\r\n    </div>\r\n    <b-modal id=\"modal-1\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <div class=\"head\"><h5>Создать нового кандидата</h5></div>\r\n      </template>\r\n\r\n      <template #default>\r\n        <div class=\"content\">\r\n          <div style=\"display: flex; gap: 16px\">\r\n            <FileInput @change=\"saveAvatar\"/>\r\n            <FileInputTwo @change=\"saveResume\"/>\r\n          </div>\r\n          <div class=\"row\">\r\n            <b-form-input style=\"width: 355px\" v-model=\"newUser.name\" placeholder=\"ФИО кандидата\"></b-form-input>\r\n            <b-form-select\r\n              class=\"form-control\"\r\n              style=\"width: 100px\"\r\n              v-model=\"newUser.male\"\r\n              :options=\"optionsMale\"\r\n              value-field=\"item\"\r\n              text-field=\"name\"\r\n              disabled-field=\"notEnabled\"\r\n            ></b-form-select>\r\n          </div>\r\n          <div class=\"row\">\r\n            <b-form-input v-model=\"newUser.age\"  type=\"number\" placeholder=\"Возраст\"></b-form-input>\r\n            <b-form-input v-model=\"newUser.city\" placeholder=\"Город проживания\"></b-form-input>\r\n          </div>\r\n          <div class=\"row\">\r\n            <b-form-input v-model=\"newUser.email\" type=\"email\" placeholder=\"Почта\"></b-form-input>\r\n            <b-form-input v-model=\"newUser.phone\" type=\"tel\" placeholder=\"Номер телефона\"></b-form-input>\r\n          </div>\r\n          <b-form-input v-model=\"newUser.education\" placeholder=\"Образование\"></b-form-input>\r\n          <b-form-input v-model=\"newUser.about\" placeholder=\"О себе\"></b-form-input>\r\n          <div class=\"label\">Вакансия, на которую претендует кандидат</div>\r\n          <b-form-select\r\n            class=\"form-control\"\r\n            v-model=\"newUser.vacation\"\r\n            :options=\"jobList\"\r\n            value-field=\"item\"\r\n            text-field=\"name\"\r\n            disabled-field=\"notEnabled\"\r\n          ></b-form-select>\r\n          <div class=\"label\">Комментарий HR</div>\r\n          <b-form-textarea\r\n            v-model=\"newUser.comment\"\r\n            placeholder=\"Введите комментарий\"\r\n            rows=\"3\"\r\n            max-rows=\"6\"\r\n          ></b-form-textarea>\r\n        </div>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"() => saveData(ok)\">\r\n          Сохранить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal id=\"modal-2\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <div class=\"head\"><h5>Отправить письмо на почту</h5></div>\r\n      </template>\r\n\r\n      <template #default>\r\n        <div>\r\n          <b-form-textarea\r\n            v-model=\"mailText\"\r\n            placeholder=\"Введите сообщение\"\r\n            rows=\"3\"\r\n            max-rows=\"6\"\r\n          ></b-form-textarea>\r\n          <span style=\"color: #858585\">Сообщение может попасть в спам!</span>\r\n        </div>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"() => {sendMailTo(); ok()}\">\r\n          Отправить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal id=\"modal-3\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <div class=\"head\"><h5>Статус кандидата</h5></div>\r\n      </template>\r\n\r\n      <template #default>\r\n        <div style=\"display:flex; flex-direction: column; align-items: center;justify-content: center\">\r\n          <b-form-select\r\n            class=\"form-control\"\r\n            style=\"width: 250px\"\r\n            v-model=\"selectedData.status\"\r\n            :options=\"statusOptions\"\r\n            @change=\"setStatus\"\r\n            value-field=\"item\"\r\n            text-field=\"name\"\r\n            disabled-field=\"notEnabled\"\r\n          ></b-form-select>\r\n          <span style=\"color: #858585\">Для обновления статуса нажмите на поле ввода</span>\r\n        </div>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"ok()\">\r\n          Сохранить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal id=\"modal-4\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <div class=\"head\"><h5>Комментарий</h5></div>\r\n      </template>\r\n\r\n      <template #default>\r\n        <div style=\"display:flex; justify-content: center\">\r\n          <b-form-textarea\r\n            v-model=\"selectedData.comment\"\r\n            placeholder=\"Введите комментарий\"\r\n            rows=\"3\"\r\n            max-rows=\"5\"\r\n          ></b-form-textarea>\r\n        </div>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"updateData(); ok()\">\r\n          Сохранить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal id=\"modal-5\" title=\"BootstrapVue\">\r\n      <template #modal-header>\r\n        <div class=\"head\"><h5>Решенные тесты кандидата</h5></div>\r\n      </template>\r\n\r\n      <template #default>\r\n        <div>\r\n          <div style=\"display:flex; justify-content: center\">\r\n            <FileInputTwo @change=\"saveTest\"/>\r\n          </div>\r\n          <div v-if=\"selectedData.test\">\r\n            <b-button size=\"sm\" @click=\"downloadTest\" variant=\"outline-primary\">\r\n              <b-icon icon=\"file-earmark-arrow-down\" aria-hidden=\"true\"></b-icon> Скачать\r\n            </b-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <template #modal-footer=\"{ ok, cancel }\" class=\"footer\">\r\n        <b-button variant=\"success\" @click=\"updateData(); ok()\">\r\n          Сохранить\r\n        </b-button>\r\n        <b-button @click=\"cancel()\">\r\n          Отменить\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport download from 'downloadjs'\r\nimport { getDatabase, ref, child, get, set, update } from 'firebase/database'\r\nimport FileInput from '@/components/FileInput'\r\nimport FileInputTwo from '@/components/FileInput-2'\r\nimport { sendEmail, sendUpdatedStatus } from '@/helpers/sendEmail'\r\nexport default {\r\n  mounted () {\r\n    if (!this.$store.getters.getEmail) {\r\n      this.$router.push('/')\r\n    }\r\n    this.loadData()\r\n  },\r\n  components: {\r\n    FileInput,\r\n    FileInputTwo\r\n  },\r\n  computed: {\r\n    filteredList () {\r\n      const filterName = this.searchUser\r\n        ? this.list.filter((item) => item.name.includes(this.searchUser))\r\n        : this.list\r\n      const filterJob = this.filterJob\r\n        ? filterName.filter((item) => item.vacation === this.filterJob)\r\n        : filterName\r\n      const filteredStatus = this.filterStatus\r\n        ? filterJob.filter((item) => +item.status === +this.filterStatus)\r\n        : filterJob\r\n      return filteredStatus\r\n    },\r\n    selectedData () {\r\n      return this.list.find((item) => item.id.toString() === this.selectedId.toString())\r\n    }\r\n  },\r\n  methods: {\r\n    setSelectedId (id) {\r\n      this.selectedId = id.toString()\r\n    },\r\n    downloadResume () {\r\n      const name = this.selectedData.name.toString().replace(' ', '_') + '.doc'\r\n      download(this.selectedData.resume, name)\r\n    },\r\n    downloadTest () {\r\n      const name = this.selectedData.name.toString().replace(' ', '_').slice(0, 5) + '_test' + '.doc'\r\n      download(this.selectedData.test, name)\r\n    },\r\n    sendMailTo () {\r\n      sendEmail(this.mailText, this.selectedData.email)\r\n    },\r\n    setStatus () {\r\n      sendUpdatedStatus(this.selectedData.status, this.selectedData.email)\r\n      this.updateData()\r\n    },\r\n    updateData () {\r\n      const db = getDatabase()\r\n      update(ref(db, 'candidates/' + this.selectedData.id), {\r\n        ...this.selectedData\r\n      })\r\n    },\r\n    async deleteData (id) {\r\n      const db = getDatabase()\r\n      await set(ref(db, 'candidates/' + id), null)\r\n      this.selectedId = 0\r\n      this.loadData()\r\n    },\r\n    loadData () {\r\n      const dbRef = ref(getDatabase())\r\n      get(child(dbRef, 'candidates')).then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          const data = Object.values(snapshot.val())\r\n          this.list = data || []\r\n        } else {\r\n          console.log('No data available')\r\n        }\r\n      }).catch((error) => {\r\n        console.error(error)\r\n      })\r\n      get(child(dbRef, 'vacancies')).then((snapshot) => {\r\n        const data = Object.values(snapshot.val()).map((item) => ({\r\n          item: item.title,\r\n          name: item.title\r\n        }))\r\n        this.jobList = data || []\r\n      })\r\n    },\r\n    saveData (func) {\r\n      const db = getDatabase()\r\n      const id = Number(new Date())\r\n      set(ref(db, 'candidates/' + id), {\r\n        id: id,\r\n        ...this.newUser,\r\n        hrEmail: this.$store.getters.getEmail\r\n      })\r\n      func()\r\n      this.clearData()\r\n      this.loadData()\r\n    },\r\n    saveAvatar (file) {\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onload = () => {\r\n        this.newUser.avatar = reader.result\r\n      }\r\n    },\r\n    saveResume (file) {\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onload = () => {\r\n        this.newUser.resume = reader.result\r\n      }\r\n      const reader2 = new FileReader()\r\n      reader2.readAsText(file)\r\n      reader2.onload = () => {\r\n        this.autoInputData(reader2.result)\r\n      }\r\n    },\r\n    saveTest (file) {\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onload = () => {\r\n        this.selectedData.test = reader.result\r\n      }\r\n    },\r\n    autoInputData (text) {\r\n      try {\r\n        const autoMail = text.match(/:.{1,}@.{1,10}\"/).map((item) => item.slice(1, -1))[0]\r\n        this.newUser.email = autoMail || ''\r\n      } catch (e) {\r\n        console.log('empty')\r\n      }\r\n\r\n      try {\r\n        const autoPhone = text.match(/\\+7.{1,32}/).map((item) => item.replace(/\\\\uc0\\\\u[0-9]{3}/g, ''))[0]\r\n        this.newUser.phone = autoPhone || ''\r\n      } catch (e) {\r\n        console.log('empty')\r\n      }\r\n\r\n      try {\r\n        const result = text.match(/\\\\uc0\\\\u[0-9]{4}/g).map((item) => item.substr(-4)).map((item) => String.fromCharCode(item))\r\n        const male = ~result.join('').indexOf('Мужчина') ? 'Мужской' : 'Женский'\r\n        this.newUser.male = male\r\n      } catch (e) {\r\n        console.log('empty')\r\n      }\r\n\r\n      try {\r\n        const result = text.slice(60000)\r\n          .match(/(.*?)fs18/)[0]\r\n          .match(/\\\\uc0\\\\u[0-9]{4}|(\\s\\s)/g).map((item) => item.substr(-4)).map((item) => String.fromCharCode(item))\r\n          .join('').replace('\\u0000', ' ')\r\n        this.newUser.name = result\r\n      } catch (e) {\r\n        console.log('empty')\r\n      }\r\n    },\r\n    clearData () {\r\n      this.newUser = {\r\n        avatar: undefined,\r\n        name: '',\r\n        email: '',\r\n        male: '',\r\n        age: '',\r\n        city: '',\r\n        phone: '',\r\n        education: '',\r\n        about: '',\r\n        hrEmail: '',\r\n        status: '',\r\n        vacation: '',\r\n        comment: '',\r\n        resume: '',\r\n        test: ''\r\n      }\r\n    }\r\n  },\r\n  data: () => ({\r\n    list: [],\r\n    jobList: [],\r\n    searchUser: '',\r\n    filterJob: '',\r\n    filterStatus: '',\r\n    selectedId: 0,\r\n    optionsMale: [\r\n      { item: 'Мужской', name: 'Мужской' },\r\n      { item: 'Женский', name: 'Женский' }\r\n    ],\r\n    statusOptions: [\r\n      { item: '1', name: 'Откликнулся' },\r\n      { item: '2', name: 'Тестирование' },\r\n      { item: '3', name: 'Интерьвю с HR' },\r\n      { item: '4', name: 'Интерьвю с руководителем' },\r\n      { item: '5', name: 'Проверка ИБ' },\r\n      { item: '6', name: 'Мед. комиисия' },\r\n      { item: '7', name: 'Выставление оффера' },\r\n      { item: '8', name: 'Принят' },\r\n      { item: '9', name: 'Отклонен' }\r\n    ],\r\n    newUser: {\r\n      avatar: undefined,\r\n      name: '',\r\n      email: '',\r\n      male: '',\r\n      age: '',\r\n      city: '',\r\n      phone: '',\r\n      education: '',\r\n      about: '',\r\n      hrEmail: '',\r\n      status: 1,\r\n      vacation: '',\r\n      comment: '',\r\n      resume: '',\r\n      test: ''\r\n    },\r\n    mailText: ''\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n}\r\n\r\n.list {\r\n  height: calc(100vh - 100px);\r\n  width: 30%;\r\n  overflow: auto;\r\n  box-shadow: 6px 1px 13px -3px rgba(34, 60, 80, 0.17);\r\n}\r\n\r\n.data {\r\n  height: calc(100vh - 100px);\r\n  padding: 20px;\r\n  overflow: auto;\r\n  width: 100%;\r\n}\r\n\r\n.item {\r\n  position: relative;\r\n  display: flex;\r\n  font-size: 13px;\r\n  padding: 5px;\r\n  font-weight: bolder;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  gap: 16px;\r\n  border-bottom: 1px solid #c1c1c1;\r\n  transition: .1s;\r\n}\r\n\r\n.item:hover {\r\n  background-color: #faeaff;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 20px;\r\n}\r\n\r\n.add {\r\n  position: absolute;\r\n  bottom: 30px;\r\n  right: 30px;\r\n}\r\n\r\n.avatar img {\r\n  width: 100px;\r\n}\r\n\r\n.content {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.head {\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  gap: 8px;\r\n  width: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  flex-direction: row;\r\n}\r\n\r\n.row input {\r\n  width: 49%;\r\n}\r\n\r\n.form-control {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.375rem 0.75rem;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  color: #212529;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid #ced4da;\r\n  appearance: none;\r\n  border-radius: 0.25rem;\r\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n\r\n.mainInfo {\r\n  display: flex;\r\n  gap: 50px;\r\n}\r\n\r\n.photo {\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n}\r\n.photo img {\r\n  width: 100%;\r\n}\r\n\r\n.name {\r\n  text-align: left;\r\n  font-size: 30px;\r\n  font-weight: bolder;\r\n}\r\n\r\n.age {\r\n  text-align: left;\r\n  color: #858585;\r\n}\r\n\r\n.userLabel {\r\n  font-weight: bolder;\r\n  margin-right: 8px;\r\n}\r\n\r\n.user-about {\r\n  text-align: left;\r\n  margin-top: 16px;\r\n  color: #858585;\r\n}\r\n\r\n.searchName {\r\n  margin: 8px;\r\n  width: 95%;\r\n}\r\n\r\n.success {\r\n  width: 4px;\r\n  height: 50px;\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #198754;\r\n}\r\n\r\n.fail {\r\n  width: 4px;\r\n  height: 50px;\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #dc3545;\r\n}\r\n\r\n.progress {\r\n  width: 4px;\r\n  height: 50px;\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #858585;\r\n}\r\n.comment {\r\n  display: flex;\r\n  gap: 12px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 40%;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Users.vue?vue&type=template&id=1887e1d3&scoped=true&\"\nimport script from \"./Users.vue?vue&type=script&lang=js&\"\nexport * from \"./Users.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Users.vue?vue&type=style&index=0&id=1887e1d3&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1887e1d3\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar un$Slice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return un$Slice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n"],"sourceRoot":""}